###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      21/Sep/2017  16:27:07 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pla #
#                    tform\TaeHa - ECS\SRC\TW8816_Control.c                   #
#    Command line =  "D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pl #
#                    atform\TaeHa - ECS\SRC\TW8816_Control.c" -D              #
#                    USE_STDPERIPH_DRIVER -D STM32F4XX -D USE_STM324xG_EVAL   #
#                    -D USE_FULL_ASSERT -lcN D:\GIT\WLF_MONITOR\ECS_MS12_02_W #
#                    LF_MONITOR_STM32_APP\Project\Debug\List\ -o              #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\Debug\Obj\ --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=VFPv4_sp --dlib_config "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.5\arm\INC\c\DLib_Config_Full.h" -I                     #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\..\Platform\COMMON\INC\ -I                          #
#                    "D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pr #
#                    oject\..\Platform\TaeHa - ECS\INC\" -I                   #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\ -I  #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\ -Oh    #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.5\arm\CMSIS\Include\"       #
#    List file    =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\Debug\List\TW8816_Control.lst                       #
#    Object file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\Debug\Obj\TW8816_Control.o                          #
#                                                                             #
#                                                                             #
###############################################################################

D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Platform\TaeHa - ECS\SRC\TW8816_Control.c
      1          /**
      2            ******************************************************************************
      3            * @file    TW8816_Control.c 
      4            * @author  kutelf (kutelf@taeha.co.kr)
      5            * @version V1.0.0
      6            * @date    02/22/2013
      7            * @brief   TW8816_Control.c module
      8            *
      9            * Project Name       : WL9F Monitor APP
     10            * Project Enviroment : IAREmbedded Workbench for ARM 6.5x 
     11            *                      STM32F407ZGT6 Firmware Library
     12            * Project Workspace  : WL9F_Monitor_APP
     13            * MCU Type           : STM32F407ZGT6
     14            *
     15            * TAEHA MECHATRONICS Co., Ltd (http://www.taeha.co.kr)				
     16            * ECS Division R&D Center. / Author by Young-Min Han (kutelf@taeha.co.kr)
     17            * 
     18            ******************************************************************************
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "WL9F_Monitor_APP.h"	
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          /* Private macro -------------------------------------------------------------*/
     27          /* Private variables ---------------------------------------------------------*/
     28          
     29          // ++, sys3215, 141211
     30          extern u8 Hardware_Revision;
     31          // --, sys3215, 141211
     32          
     33          /****************************************************************/
     34          /*                      TW88xx RAM FONT                         */
     35          /****************************************************************/
     36          /* <FILE TYPE>=TW8804 */
     37          /* <NUMBER OF FONTS>=0xB6(182) */
     38          /* <COLOR START>=0xB7 */
     39          
     40          /* <LOOK-UP TABLE> */
     41          unsigned char table[][8] = {
     42               {0x0000,0x0003,0x001C,0x001F,0x00E0,0x00E3,0x00FC,0x00FF},
     43               {0x0000,0x0010,0x0400,0x0410,0x8000,0x8010,0x8400,0xC618}
     44          };
     45          
     46          /* <FONT DATA> */
     47          unsigned char ROMFONTDATA[][162] = {
     48              /*0x00(  0)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0xE3,0x08,0x31,0x28,0x00,0x22,0x37,0x80,0x44,0x01,0xEC,0x44,0x00,0x37},
     49              /*0x01(  1)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x01,0x7C,0x00,0x00,0x41,0xC8,0x10,0xCE,0x44,0x73,0x08,0x22,0xCE,0x00,0x22},
     50              /*0x02(  2)*/ {0x44,0x00,0x73,0x44,0x10,0xCE,0x22,0x73,0x08,0x13,0x82,0x00,0x00,0x3E,0x80,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     51              /*0x03(  3)*/ {0xEC,0x00,0x22,0x37,0x80,0x22,0x01,0xEC,0x44,0x00,0x14,0x8C,0x10,0xC7,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     52              /*0x04(  4)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0xE3,0x08,0x31,0x08,0x00,0x22,0x00,0x31,0x44,0xF0,0xFF,0x44,0xFF,0xFF},
     53              /*0x05(  5)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x01,0x7C,0x00,0x80,0x01,0xC8,0x88,0x00,0x44,0xB9,0x11,0xA2,0x89,0xEB,0x22},
     54              /*0x06(  6)*/ {0x44,0xFF,0xFF,0x44,0x0F,0xFF,0x22,0x00,0x13,0x13,0x80,0x00,0x00,0x3E,0x80,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     55              /*0x07(  7)*/ {0x98,0xBE,0x22,0x9B,0x11,0x2A,0x88,0x00,0x44,0x08,0x10,0x8C,0x10,0xC7,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     56              /*0x08(  8)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0xE3,0x08,0x31,0x08,0x00,0x22,0x00,0x31,0x44,0xF0,0xFF,0x44,0xFF,0xFF},
     57              /*0x09(  9)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x01,0x7C,0x00,0x80,0x01,0xC8,0x88,0x2C,0x44,0x8B,0x91,0x22,0x88,0x4C,0xAA},
     58              /*0x0A( 10)*/ {0x44,0xFF,0xFF,0x44,0x0F,0xFF,0x22,0x00,0x13,0x13,0x80,0x00,0x00,0x3E,0x80,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     59              /*0x0B( 11)*/ {0x88,0xC4,0xAA,0xB8,0x19,0x22,0x88,0xC2,0x44,0x08,0x10,0x8C,0x10,0xC7,0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     60              /*0x0C( 12)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33},
     61              /*0x0D( 13)*/ {0x00,0x00,0x00,0x00,0x60,0x00,0x10,0xFF,0x80,0x73,0xFF,0xEC,0x00,0x00,0x00,0xFA,0xF9,0xF5,0x7F,0xFF,0xEF,0x70,0xF9,0xE0,0x75,0xFF,0xEA},
     62              /*0x0E( 14)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xCC,0x00,0x00},
     63              /*0x0F( 15)*/ {0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x00,0x00,0x00,0x00},
     64              /*0x10( 16)*/ {0x44,0x00,0x22,0x24,0x00,0x42,0x77,0xFF,0xEE,0x77,0xFF,0xEE,0x77,0xFF,0xEE,0x27,0x0F,0x4E,0x74,0xF0,0xE2,0x00,0x00,0x00,0x00,0x00,0x00},
     65              /*0x11( 17)*/ {0xCC,0x00,0x00,0xCC,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0xCC,0x00,0x00,0xCC,0x00,0x00,0xCC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     66              /*0x12( 18)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x62},
     67              /*0x13( 19)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x50,0x20,0x11,0xFF,0xFF,0x00,0x1F,0x2F,0x60,0xBF,0xFF,0x66,0x8F,0x0F,0x66,0x88,0x00},
     68              /*0x14( 20)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0xEE,0x00,0x00,0x0C,0x00,0x00,0x5C,0x80,0x00,0x5D,0x88,0x00,0x55,0x88,0x00},
     69              /*0x15( 21)*/ {0x00,0x10,0xEE,0x00,0x33,0xEE,0x00,0x01,0xEE,0x00,0x00,0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     70              /*0x16( 22)*/ {0x06,0xF4,0xF0,0x00,0xFF,0xFF,0x66,0xFF,0xFF,0x66,0xFF,0xFF,0x66,0x84,0x00,0x06,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     71              /*0x17( 23)*/ {0xC9,0x08,0x00,0xCC,0x00,0x00,0xDD,0x88,0x00,0xDD,0x88,0x00,0x59,0x88,0x00,0x0D,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     72              /*0x18( 24)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x00},
     73              /*0x19( 25)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0xFA,0xF9,0xF5,0x7F,0xFF,0xEF,0x70,0xF9,0xE0,0x75,0xFF,0xEA,0x44,0x00,0x22,0x24,0x00,0x42,0x77,0xFF,0xEE},
     74              /*0x1A( 26)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xCC,0x00,0x00,0xCC,0x00,0x00,0xCC,0x00,0x00,0x00,0x00,0x00},
     75              /*0x1B( 27)*/ {0x00,0x00,0x30,0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     76              /*0x1C( 28)*/ {0x77,0xFF,0xEE,0x77,0xFF,0xEE,0x27,0x0F,0x4E,0x74,0xF0,0xE2,0x00,0x00,0x00,0x37,0xFF,0xCE,0x01,0xFF,0x08,0x00,0x06,0x00,0x00,0x00,0x00},
     77              /*0x1D( 29)*/ {0xC0,0x00,0x00,0xCC,0x00,0x00,0xCC,0x00,0x00,0xCC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     78              /*0x1E( 30)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x50,0x00,0x00,0x77,0x00,0x00,0x03,0x00,0x10,0xA3,0x00,0x11,0xAB,0x00,0x11,0xAA},
     79              /*0x1F( 31)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0xA0,0x80,0xFF,0xFF,0x88,0x4F,0x8F,0x00,0xFF,0xDF,0x60,0x0F,0x1F,0x66,0x00,0x11,0x66},
     80              /*0x20( 32)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00},
     81              /*0x21( 33)*/ {0x00,0x01,0x39,0x00,0x00,0x33,0x00,0x11,0xBB,0x00,0x11,0xBB,0x00,0x11,0xA9,0x00,0x01,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     82              /*0x22( 34)*/ {0xF0,0xF2,0x06,0xFF,0xFF,0x00,0xFF,0xFF,0x66,0xFF,0xFF,0x66,0x00,0x12,0x66,0x0F,0x0F,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     83              /*0x23( 35)*/ {0x77,0x80,0x00,0x77,0xCC,0x00,0x77,0x08,0x00,0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     84              /*0x24( 36)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xFF,0xFF,0x11,0xFF,0xFF,0x11,0xFF,0x8F,0x11,0xFF,0x73,0x11,0xFF,0x66},
     85              /*0x25( 37)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x99,0xFF,0x8F,0x09,0x1F,0x73,0xFF,0xEC,0xFF,0xFF,0xFF,0x77,0x0F,0xFF},
     86              /*0x26( 38)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x88,0xFF,0xFF,0x88,0x1F,0xFF,0x88,0xEC,0xFF,0x88,0xEE,0xFF,0x88},
     87              /*0x27( 39)*/ {0x00,0x00,0x77,0x11,0xFF,0x77,0x11,0xFF,0x77,0x11,0xFF,0x77,0x11,0xFF,0x83,0x11,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     88              /*0x28( 40)*/ {0xCE,0xF6,0x37,0xDD,0xFF,0xBB,0xEC,0x6F,0x73,0xFF,0xF0,0xFF,0x0F,0x0F,0x0F,0xFF,0x99,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     89              /*0x29( 41)*/ {0xEE,0x00,0x00,0xEE,0xFF,0x88,0xEE,0xFF,0x88,0xEE,0xFF,0x88,0x1C,0xFF,0x88,0xFF,0xFF,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     90              /*0x2A( 42)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x0F,0x47,0x11,0xF0,0x74},
     91              /*0x2B( 43)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x58,0x9F,0xB2,0x95,0x00,0xAA},
     92              /*0x2C( 44)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x2F,0x08,0xAA,0x22,0x00},
     93              /*0x2D( 45)*/ {0x11,0x00,0x44,0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     94              /*0x2E( 46)*/ {0x5D,0x90,0xAA,0x04,0x0F,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     95              /*0x2F( 47)*/ {0x26,0x22,0x00,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
     96              /*0x30( 48)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x00,0x00,0x22,0x00},
     97              /*0x31( 49)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8F,0x2B,0x0E,0xF8,0xB2,0xE0},
     98              /*0x32( 50)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2F,0x08,0x00,0x22,0x00,0x00},
     99              /*0x33( 51)*/ {0x00,0x22,0x00,0x00,0x03,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    100              /*0x34( 52)*/ {0x88,0x22,0x00,0x0F,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    101              /*0x35( 53)*/ {0x22,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    102              /*0x36( 54)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x2C,0x00,0x32,0xC2},
    103              /*0x37( 55)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8F,0x18,0xC8,0xF8,0xA3,0x26},
    104              /*0x38( 56)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8F,0x80,0x00,0xF8,0x08,0x00},
    105              /*0x39( 57)*/ {0x00,0x22,0x26,0x00,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    106              /*0x3A( 58)*/ {0x88,0x23,0x2E,0x0F,0x0A,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    107              /*0x3B( 59)*/ {0x89,0x88,0x00,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    108              /*0x3C( 60)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x47,0x59,0x00,0x74,0x95},
    109              /*0x3D( 61)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0x1D,0x11,0x54,0xD1,0xF1},
    110              /*0x3E( 62)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x0C,0x00,0x11,0x00,0x00},
    111              /*0x3F( 63)*/ {0x00,0x44,0x5D,0x00,0x04,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    112              /*0x40( 64)*/ {0x44,0x55,0x11,0x03,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    113              /*0x41( 65)*/ {0x11,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    114              /*0x42( 66)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x30,0xF1,0x00,0x77,0x7F},
    115              /*0x43( 67)*/ {0x00,0x00,0x00,0x00,0xF6,0x00,0x31,0xFF,0xC8,0xF7,0xFF,0xFE,0x0F,0x0F,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    116              /*0x44( 68)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0xF8,0xC0,0x00,0xFF,0xEE,0x00},
    117              /*0x45( 69)*/ {0x00,0x76,0x73,0x00,0x77,0xFF,0x00,0x77,0xFF,0x00,0x77,0xFF,0x00,0x77,0xFF,0x00,0x77,0xFF,0x00,0x77,0xFF,0x00,0x37,0xFF,0x00,0x00,0x00},
    118              /*0x46( 70)*/ {0x8E,0x00,0x17,0x18,0xF6,0x81,0x31,0xFF,0xC8,0x13,0xFF,0x8C,0x81,0x6F,0x18,0xE8,0x00,0x71,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00},
    119              /*0x47( 71)*/ {0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xFF,0xCE,0x00,0x00,0x00,0x00},
    120              /*0x48( 72)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x88,0x00,0x73,0x88,0x10,0xFF,0x88},
    121              /*0x49( 73)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0xEF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x77,0xE2,0xFF,0x77,0xEE,0xFF,0x77,0xEE,0xFF},
    122              /*0x4A( 74)*/ {0x00,0x00,0x00,0xF0,0x80,0x00,0xFF,0xF8,0x00,0x7F,0x3F,0x88,0x87,0xF7,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88},
    123              /*0x4B( 75)*/ {0x33,0xFF,0x88,0x01,0xFF,0x88,0x00,0x37,0x88,0x00,0x01,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    124              /*0x4C( 76)*/ {0x77,0xEE,0xFF,0x77,0xEE,0xFF,0x77,0xEE,0xFF,0x77,0x2E,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0x07,0x00,0x00,0x00},
    125              /*0x4D( 77)*/ {0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xDD,0xFF,0x88,0xFD,0xFF,0x88,0x0F,0x0F,0x00,0x00,0x00,0x00},
    126              /*0x4E( 78)*/ {0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x30,0xF1,0x00,0x77,0xFF,0x00,0x66,0x00,0x00,0x66,0x00,0x00,0x66,0x00,0x00,0x66,0x00,0x00,0x66,0x00},
    127              /*0x4F( 79)*/ {0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x11,0x00,0x00,0x11,0x00,0x00,0x11,0x00,0x00,0x11,0x00,0x00,0x11},
    128              /*0x50( 80)*/ {0x00,0x00,0x00,0x80,0x00,0x00,0xF8,0xC0,0x00,0xFF,0xEE,0x00,0xCC,0xEE,0x00,0xFF,0xEE,0x00,0xCC,0xEE,0x00,0xFF,0xEE,0x00,0xCC,0xEE,0x00},
    129              /*0x51( 81)*/ {0x00,0x66,0x00,0x00,0x77,0xFF,0x00,0x37,0xF8,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    130              /*0x52( 82)*/ {0x00,0x00,0x11,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0,0x00,0x00,0x00,0xF0,0xF0,0xF0,0x7F,0xFF,0xEF,0x13,0xFF,0x8C,0x00,0x6F,0x00,0x00,0x00,0x00},
    131              /*0x53( 83)*/ {0xFF,0xEE,0x00,0xFF,0xEE,0x00,0xF1,0xCE,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    132              /*0x54( 84)*/ {0x00,0x00,0x00,0x00,0x10,0xF0,0x00,0xF1,0xFF,0x11,0xCF,0xEF,0x11,0xFE,0x1E,0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xBB},
    133              /*0x55( 85)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x7F,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x74,0xEE,0xFF,0x77,0xEE,0xFF,0x77,0xEE},
    134              /*0x56( 86)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x80,0x00,0x11,0xEC,0x00,0x11,0xFF,0x80},
    135              /*0x57( 87)*/ {0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xBB,0x11,0xFF,0xFB,0x00,0x0F,0x0F,0x00,0x00,0x00},
    136              /*0x58( 88)*/ {0xFF,0x77,0xEE,0xFF,0x77,0xEE,0xFF,0x77,0xEE,0xFF,0x47,0xEE,0xFF,0x00,0x00,0xFF,0x00,0x00,0xFF,0x00,0x00,0x0E,0x00,0x00,0x00,0x00,0x00},
    137              /*0x59( 89)*/ {0x11,0xFF,0xCC,0x11,0xFF,0x08,0x11,0xCE,0x00,0x11,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    138              /*0x5A( 90)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x31,0x00,0x00,0xF7,0x90},
    139              /*0x5B( 91)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF6,0x00,0x31,0xFF,0xC8,0x00,0x06,0x00,0x00,0x00,0x00,0xFF,0x99,0xFE,0x11,0x99,0x9B,0xF1,0x99,0x99},
    140              /*0x5C( 92)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC8,0x00,0x98,0xFE,0x00},
    141              /*0x5D( 93)*/ {0x00,0x7F,0x19,0x00,0x13,0x11,0x00,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    142              /*0x5E( 94)*/ {0x8F,0x19,0x99,0x88,0x11,0xB9,0xFF,0x99,0xEF,0x00,0x00,0x00,0x00,0x60,0x00,0x13,0xFF,0x8C,0x00,0x6F,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    143              /*0x5F( 95)*/ {0x89,0xEF,0x00,0x00,0x8C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    144              /*0x60( 96)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x62,0x00,0x10,0xEE},
    145              /*0x61( 97)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0xFF,0x33,0x00,0x33,0x33,0x10,0xF3,0x33},
    146              /*0x62( 98)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xEC,0x00,0x00,0x26,0x00,0x00,0x33,0x00,0x00},
    147              /*0x63( 99)*/ {0x00,0x01,0xEE,0x00,0x00,0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    148              /*0x64(100)*/ {0x01,0x3F,0x33,0x00,0x33,0x33,0x33,0xFF,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    149              /*0x65(101)*/ {0x33,0x00,0x00,0x62,0x00,0x00,0xCE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    150              /*0x66(102)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    151              /*0x67(103)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x99,0xFE,0x11,0x99,0x9B,0xF1,0x99,0x99,0x1F,0x99,0x99,0x11,0x99,0xB9},
    152              /*0x68(104)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x88,0x00,0x00,0x88,0x00,0x00,0x00,0x00,0x00},
    153              /*0x69(105)*/ {0x00,0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    154              /*0x6A(106)*/ {0xFF,0x99,0xEF,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0xFF,0x8C,0x00,0x6F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    155              /*0x6B(107)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    156              /*0x6C(108)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xFF,0x00,0x00,0x11,0x00,0x00,0xF1},
    157              /*0x6D(109)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x99,0xFE,0x00,0x99,0x9B,0x00,0x99,0x99,0x88},
    158              /*0x6E(110)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x77,0x80,0x00},
    159              /*0x6F(111)*/ {0x00,0x00,0x1F,0x00,0x00,0x11,0x00,0x11,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    160              /*0x70(112)*/ {0x99,0x99,0x88,0x99,0xB9,0x00,0x99,0xEF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    161              /*0x71(113)*/ {0x77,0x08,0x00,0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    162              /*0x72(114)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0xEF,0x00,0x33,0xEC,0x00,0x23,0x04,0x00,0x00,0x11,0x00,0x31,0x00,0x00,0xF7,0x80},
    163              /*0x73(115)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF6,0x00,0x31,0xFF,0xC8,0x00,0x06,0x00,0x00,0x00,0x00,0xFF,0x99,0xFE,0x11,0x99,0x9B,0xF1,0x99,0x99},
    164              /*0x74(116)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xCC,0x00,0x73,0xCC,0x00,0x02,0x4C,0x00,0x00,0x00,0x00,0x00,0xC8,0x00,0x98,0xFE,0x00},
    165              /*0x75(117)*/ {0x00,0x7F,0x08,0x00,0x13,0x00,0x00,0x00,0x11,0x00,0x32,0x40,0x00,0x33,0xCE,0x00,0x33,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    166              /*0x76(118)*/ {0x1F,0x99,0x99,0x11,0x99,0xB9,0xFF,0x99,0xEF,0x00,0x00,0x00,0x00,0x60,0x00,0x13,0xFF,0x8C,0x00,0x6F,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    167              /*0x77(119)*/ {0x89,0xEF,0x00,0x00,0x8C,0x00,0x00,0x00,0x00,0x20,0xC4,0x00,0x37,0xCC,0x00,0xF7,0xCC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    168              /*0x78(120)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCC},
    169              /*0x79(121)*/ {0xFF,0xFF,0xFF,0xFF,0x9F,0xFF,0xEF,0x00,0x7F,0x8C,0x00,0x13,0xFF,0xFF,0xFF,0x05,0x06,0x0A,0x80,0x00,0x10,0x8F,0x06,0x1F,0x8A,0x00,0x15},
    170              /*0x7A(122)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x33,0xFF,0xFF},
    171              /*0x7B(123)*/ {0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xFF,0xFF,0xFF,0xCF,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    172              /*0x7C(124)*/ {0xBB,0xFF,0xDD,0xDB,0xFF,0xBD,0x88,0x00,0x11,0x88,0x00,0x11,0x88,0x00,0x11,0xD8,0xF0,0xB1,0x8B,0x0F,0x1D,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    173              /*0x7D(125)*/ {0x33,0xFF,0xFF,0x33,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0x33,0xFF,0xFF,0x33,0xFF,0xFF,0x33,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    174              /*0x7E(126)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9D},
    175              /*0x7F(127)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xAF,0xDF,0xEE,0x00,0x00,0xFF,0xE0,0xD0,0x9F,0x40,0x00,0x99,0x70,0xF0,0x99,0x77,0xFF},
    176              /*0x80(128)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x5F,0xFF,0xFF,0x11,0xFF,0xFF,0xF3,0xFF,0xFF,0xA3,0x7F,0xFF,0xA2,0x77,0xFF,0xAA,0x77,0xFF},
    177              /*0x81(129)*/ {0xFF,0xEF,0x11,0xFF,0xCC,0x11,0xFF,0xFE,0x11,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    178              /*0x82(130)*/ {0xF9,0x0B,0x0F,0xFF,0x00,0x00,0x99,0x00,0x00,0x99,0x00,0x00,0x99,0x7B,0xFF,0xF9,0xF0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    179              /*0x83(131)*/ {0x36,0xF7,0xFF,0x33,0xFF,0xFF,0x22,0x77,0xFF,0x22,0x77,0xFF,0xA6,0x77,0xFF,0xF2,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    180              /*0x84(132)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xFF},
    181              /*0x85(133)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x05,0x06,0x0A,0x80,0x00,0x10,0x8F,0x06,0x1F,0x8A,0x00,0x15,0xBB,0xFF,0xDD,0xDB,0xFF,0xBD,0x88,0x00,0x11},
    182              /*0x86(134)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x33,0xFF,0xFF,0x33,0xFF,0xFF,0x33,0xFF,0xFF,0xFF,0xFF,0xFF},
    183              /*0x87(135)*/ {0xFF,0xFF,0xCF,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    184              /*0x88(136)*/ {0x88,0x00,0x11,0x88,0x00,0x11,0xD8,0xF0,0xB1,0x8B,0x0F,0x1D,0xFF,0xFF,0xFF,0xC8,0x00,0x31,0xFE,0x00,0xF7,0xFF,0xF9,0xFF,0xFF,0xFF,0xFF},
    185              /*0x89(137)*/ {0x3F,0xFF,0xFF,0x33,0xFF,0xFF,0x33,0xFF,0xFF,0x33,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    186              /*0x8A(138)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xAF,0xFF,0xFF,0x88,0xFF,0xFF,0xFC,0xFF,0xEF,0x5C,0xFF,0xEE,0x54,0xFF,0xEE,0x55},
    187              /*0x8B(139)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x5F,0x7F,0x00,0x00,0x77,0xB0,0x70,0xFF,0x00,0x20,0x9F,0xF0,0xE0,0x99,0xFF,0xEE,0x99},
    188              /*0x8C(140)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9B,0xFF,0xFF},
    189              /*0x8D(141)*/ {0xFF,0xFE,0xC6,0xFF,0xFF,0xCC,0xFF,0xEE,0x44,0xFF,0xEE,0x44,0xFF,0xEE,0x56,0xFF,0xFE,0xF4,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    190              /*0x8E(142)*/ {0x0F,0x0D,0xF9,0x00,0x00,0xFF,0x00,0x00,0x99,0x00,0x00,0x99,0xFF,0xED,0x99,0xF0,0xF0,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    191              /*0x8F(143)*/ {0x88,0x7F,0xFF,0x88,0x33,0xFF,0x88,0xF7,0xFF,0xB9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    192              /*0x90(144)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0x00,0x00,0xEE,0x00,0x00,0xEE,0x00,0x70,0xEE,0x00,0x8C,0xEE,0x00,0x99},
    193              /*0x91(145)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x66,0x00,0x70,0xF6,0xE0,0x8C,0x00,0x13,0x00,0x00,0x00,0x88,0xF0,0x00},
    194              /*0x92(146)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x77,0x00,0x00,0x77,0xE0,0x00,0x77,0x13,0x00,0x77,0x11,0x00,0x77},
    195              /*0x93(147)*/ {0xFF,0xFF,0x88,0xEE,0x00,0x88,0xEE,0x00,0x88,0xEE,0x00,0x88,0xEE,0x00,0x7C,0xEE,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    196              /*0x94(148)*/ {0x31,0x09,0xC8,0x22,0x00,0x44,0x13,0x90,0x8C,0x00,0x0F,0x00,0xF0,0xF0,0xF0,0x00,0x66,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    197              /*0x95(149)*/ {0x11,0xFF,0xFF,0x11,0x00,0x77,0x11,0x00,0x77,0x11,0x00,0x77,0xE3,0x00,0x77,0x00,0x00,0x77,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    198              /*0x96(150)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCC,0x10,0xFF,0xCC,0x13,0xFF,0xDC,0xFB,0xFF,0xFF,0xEE,0xFF,0xCE,0xFF,0xFF,0x08,0x7F},
    199              /*0x97(151)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x09,0xFF,0xCE,0x00,0x37,0xFF,0xF9,0xFF,0xFF,0xFF,0xFF,0x00,0x66,0x01,0xEE,0x66,0x64,0x0E,0x66,0x66},
    200              /*0x98(152)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x33,0xFF,0x8C,0x33,0xFF,0xFD,0xB3,0xFF,0xFF,0xFF,0xFF,0xFF,0x37,0xFF,0x67,0x01,0xFF},
    201              /*0x99(153)*/ {0xFF,0x80,0xF7,0xFF,0xEC,0xFF,0xFF,0xFF,0xEE,0xFF,0xCD,0xBF,0xFF,0xCC,0x31,0xFF,0xCC,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    202              /*0x9A(154)*/ {0xE0,0x66,0x66,0xEE,0x66,0x46,0x00,0x66,0x10,0xFF,0xFF,0xFF,0xFF,0x9F,0xFF,0xEC,0x00,0x73,0xFF,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    203              /*0x9B(155)*/ {0x76,0x10,0xFF,0xFF,0x73,0xFF,0xFF,0xFF,0xFF,0xDF,0x3B,0xFF,0xC8,0x33,0xFF,0x08,0x33,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    204              /*0x9C(156)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    205              /*0x9D(157)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x66,0x01,0xEE,0x66,0x64,0x0E,0x66,0x66,0xE0,0x66,0x66,0xEE,0x66,0x46},
    206              /*0x9E(158)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x77,0xFF,0xFF,0x77,0xFF,0xFF,0xFF,0xFF,0xFF},
    207              /*0x9F(159)*/ {0xFF,0xFF,0xEE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    208              /*0xA0(160)*/ {0x00,0x66,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEC,0x00,0x73,0xFF,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    209              /*0xA1(161)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    210              /*0xA2(162)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0xFF,0xCE,0xFF,0xFF,0x08,0x6F},
    211              /*0xA3(163)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x09,0xFF,0xCE,0x00,0x37,0xFF,0xF9,0xFF,0xFF,0xFF,0xFF,0x00,0x66,0x01,0xEE,0x66,0x64,0x0E,0x66,0x66},
    212              /*0xA4(164)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x37,0xFF,0x67,0x01,0xFF},
    213              /*0xA5(165)*/ {0xFF,0x80,0xE6,0xFF,0xEC,0xEE,0xFF,0xFF,0xEE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    214              /*0xA6(166)*/ {0x70,0xE6,0x66,0x77,0xEE,0x46,0x00,0x66,0x10,0xFF,0xFF,0xFF,0xFF,0x9F,0xFF,0xEC,0x00,0x73,0xFF,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    215              /*0xA7(167)*/ {0x76,0x10,0xFF,0xFF,0x73,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    216              /*0xA8(168)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9D,0xFF,0xEF,0x11},
    217              /*0xA9(169)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCC,0x00,0xCC,0xFF,0xCC,0xCC,0xEF,0x0C,0xCC},
    218              /*0xAA(170)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x13,0xFF,0xFF,0xD9,0xFF,0xFF,0xCC,0xFF,0xFF},
    219              /*0xAB(171)*/ {0xFF,0xFE,0x11,0xFF,0xFF,0xD9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    220              /*0xAC(172)*/ {0xFE,0xC0,0xCC,0xFF,0xCC,0xCC,0xCC,0x00,0xCC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    221              /*0xAD(173)*/ {0xCC,0xFF,0xFF,0x9D,0xFF,0xFF,0x31,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    222              /*0xAE(174)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0x00,0xFF,0xFF,0xEE,0xFF,0xFF,0x0E},
    223              /*0xAF(175)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x66,0x01,0xFF,0x66,0x64,0xFF,0x66,0x66,0x77},
    224              /*0xB0(176)*/ {0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9B,0xFF,0xFF,0x88,0x7F,0xFF},
    225              /*0xB1(177)*/ {0xFF,0xFF,0xE0,0xFF,0xFF,0xEE,0xFF,0xEE,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    226              /*0xB2(178)*/ {0x66,0x66,0x77,0x66,0x46,0xFF,0x66,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    227              /*0xB3(179)*/ {0x88,0xF7,0xFF,0xB9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},
    228              /*0xB4(180)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
    229              /*0xB5(181)*/ {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}
    230          };
    231          
    232          
    233          
    234          #if 0
    235          u8 InitCVBSAll_8816[] = 
    236          {
    237          	
    238          	0xFF,0x0,	//Page 0
    239          	0x0,0x22,	
    240          	0x1,0x93,	
    241          	0x2,0x40,	
    242          	0x3,0x0,	
    243          	0x4,0x0,	
    244          	0x5,0x8D,	
    245          	0x6,0x3,	
    246          	0x7,0x2,	
    247          	0x8,0x14,	
    248          	0x9,0xF3,	
    249          	0x0A,0x0F,	
    250          	0x0B,0xD0,	
    251          	0x0C,0xDC,	
    252          	0x0D,0x15,	
    253          	0x0E,0x80,	
    254          	0x0F,0x0,	
    255          	0x10,0x0,	
    256          	0x11,0x5C,	
    257          	0x12,0x13,	
    258          	0x13,0x80,	
    259          	0x14,0x80,	
    260          	0x15,0x0,	
    261          	0x16,0xC3,	
    262          	0x17,0x30,	
    263          	0x18,0x44,	
    264          	0x19,0x0,	
    265          	0x1A,0x90,	
    266          	0x1B,0x0,	
    267          	0x1C,0x27,	
    268          	0x1D,0x7F,	
    269          	0x1E,0x8,	
    270          	0x1F,0x0,	
    271          	0x20,0x50,	
    272          	0x21,0x42,	
    273          	0x22,0xF0,	
    274          	0x23,0xD8,	
    275          	0x24,0xBC,	
    276          	0x25,0xB8,	
    277          	0x26,0x44,	
    278          	0x27,0x2A,	
    279          	0x28,0x0,	
    280          	0x29,0x0,	
    281          	0x2A,0x78,	
    282          	0x2B,0x44,	
    283          	0x2C,0x30,	
    284          	0x2D,0x4,	
    285          	0x2E,0xA5,	
    286          	0x2F,0xE0,	
    287          	0x30,0x10,	
    288          	0x31,0x0,	
    289          	0x32,0x0,	
    290          	0x33,0x5,	
    291          	0x34,0x9A,	
    292          	0x35,0x30,	
    293          	0x36,0x0,	
    294          	0x37,0x0,	
    295          	0x38,0x8E,	
    296          	0x39,0x0,	
    297          	0x3A,0x0,	
    298          	0x3B,0x0,	
    299          	0x3C,0x0,	
    300          	0x3D,0x0,	
    301          	0x3E,0x0,	
    302          	0x3F,0x0,	
    303          	0x40,0x0,	
    304          	0x41,0x20,	
    305          	0x42,0x4,	
    306          	0x43,0x22,	
    307          	0x44,0x18,	
    308          	0x45,0x50,	
    309          	0x46,0x20,	
    310          	0x47,0x0,	
    311          	0x48,0xCF,	
    312          	0x49,0x61,	
    313          	0x4A,0x13,	
    314          	0x4B,0x13,	
    315          	0x4C,0x0,	
    316          	0x4D,0x30,	
    317          	0x4E,0x0,	
    318          	0x4F,0x0,	
    319          	0x50,0x0,	
    320          	0x51,0x20,	
    321          	0x52,0xFF,	
    322          	0x53,0x10,	
    323          	0x54,0x20,	
    324          	0x55,0xFA,	
    325          	0x56,0x0,	
    326          	0x57,0x0,	
    327          	0x58,0x0,	
    328          	0x59,0x0,	
    329          	0x5A,0x0,	
    330          	0x5B,0x30,	
    331          	0x5C,0x0,	
    332          	0x5D,0x30,	
    333          	0x5E,0x0,	
    334          	0x5F,0x0,	
    335          	0x60,0xE3,	
    336          	0x61,0x80,	
    337          	0x62,0x80,	
    338          	0x63,0x0,	
    339          	0x64,0x0,	
    340          	0x65,0x80,	
    341          	0x66,0x0,	
    342          	0x67,0x0,	
    343          	0x68,0x0,	
    344          	0x69,0x0,	
    345          	0x6A,0x0,	
    346          	0x6B,0x0,	
    347          	0x6C,0x0,	
    348          	0x6D,0x0,	
    349          	0x6E,0x0,	
    350          	0x6F,0x0,	
    351          	0x70,0x60,	
    352          	0x71,0x80,	
    353          	0x72,0x80,	
    354          	0x73,0x80,	
    355          	0x74,0x80,	
    356          	0x75,0x80,	
    357          	0x76,0x80,	
    358          	0x77,0x3F,	
    359          	0x78,0x0A,	
    360          	0x79,0x0,	
    361          	0x7A,0x30,	
    362          	0x7B,0x0,	
    363          	0x7C,0x1C,	
    364          	0x7D,0x8,	
    365          	0x7E,0xF6,	
    366          	0x7F,0x8,	
    367          	0x80,0x10,	
    368          	0x81,0x0D,	
    369          	0x82,0x3,	
    370          	0x83,0x0,	
    371          	0x84,0x67,	
    372          	0x85,0x94,	
    373          	0x86,0x18,	
    374          	0x87,0xE8,	
    375          	0x88,0xCA,	
    376          	0x89,0x2,	
    377          	0x8A,0x0A,	
    378          	0x8B,0x4,	
    379          	0x8C,0x0,	
    380          	0x8D,0x0,	
    381          	0x8E,0x0,	
    382          	0x8F,0x0,	
    383          	0x90,0x0,	
    384          	0x91,0x6,	
    385          	0x92,0x6,	
    386          	0x93,0x6,	
    387          	0x94,0x80,	
    388          	0x95,0x40,	
    389          	0x96,0x0,	
    390          	0x97,0x0,	
    391          	0x98,0x0,	
    392          	0x99,0x8,	
    393          	0x9A,0x0,	
    394          	0x9B,0x31,	
    395          	0x9C,0x0,	
    396          	0x9D,0x0,	
    397          	0x9E,0x0,	
    398          	0x9F,0x0,	
    399          	0xA0,0x0,	
    400          	0xA1,0x0,	
    401          	0xA2,0x0,	
    402          	0xA3,0x0,	
    403          	0xA4,0x0,	
    404          	0xA5,0xE0,	
    405          	0xA6,0x0,	
    406          	0xA7,0x0,	
    407          	0xA8,0x0,	
    408          	0xA9,0x0,	
    409          	0xAA,0x0,	
    410          	0xAB,0x0,	
    411          	0xAC,0x0,	
    412          	0xAD,0x0,	
    413          	0xAE,0x0,	
    414          	0xAF,0x0,	
    415          	0xB0,0x40,	
    416          	0xB1,0x0,	
    417          	0xB2,0xCC,	
    418          	0xB3,0x1,	
    419          	0xB4,0x10,	
    420          	0xB5,0x20,	
    421          	0xB6,0x33,	
    422          	0xB7,0x12,	
    423          	0xB8,0x1,	
    424          	0xB9,0x29,	
    425          	0xBA,0xE0,	
    426          	0xBB,0x12,	
    427          	0xBC,0x0,	
    428          	0xBD,0x0C,	
    429          	0xBE,0xC2,	
    430          	0xBF,0x0,	
    431          	0xC0,0x0,	
    432          	0xC1,0x0,	
    433          	0xC2,0x0,	
    434          	0xC3,0x0,	
    435          	0xC4,0x40,	
    436          	0xC5,0x0,	
    437          	0xC6,0x0,	
    438          	0xC7,0x0,	
    439          	0xC8,0x0,	
    440          	0xC9,0x0,	
    441          	0xCA,0x0,	
    442          	0xCB,0x0,	
    443          	0xCC,0x0,	
    444          	0xCD,0x0,	
    445          	0xCE,0x0,	
    446          	0xCF,0x0,	
    447          	0xD0,0xC9,	
    448          	0xD1,0x4C,	
    449          	0xD2,0xFF,	
    450          	0xD3,0x7,	
    451          	0xD4,0x0,	
    452          	0xD5,0x3F,	
    453          	0xD6,0x0,	
    454          	0xD7,0x0,	
    455          	0xD8,0x0,	
    456          	0xD9,0x0,	
    457          	0xDA,0x3D,	
    458          	0xDB,0xC3,	
    459          	0xDC,0xFC,	
    460          	0xDD,0x0,	
    461          	0xDE,0x0,	
    462          	0xDF,0x0,	
    463          	0xE0,0x0,	
    464          	0xE1,0x0,	
    465          	0xE2,0x0,	
    466          	0xE3,0x0,	
    467          	0xE4,0x0,	
    468          	0xE5,0x0,	
    469          	0xE6,0x0,	
    470          	0xE7,0x0,	
    471          	0xE8,0x0,	
    472          	0xE9,0x0,	
    473          	0xEA,0x0,	
    474          	0xEB,0x0,	
    475          	0xEC,0x0,	
    476          	0xED,0x0,	
    477          	0xEE,0x0,	
    478          	0xEF,0x0,	
    479          	0xF0,0x0,	
    480          	0xF1,0x20,	
    481          	0xF2,0x0,	
    482          	0xF3,0x0,	
    483          	0xF4,0x16,	
    484          	0xF5,0x0,	
    485          	0xF6,0x0,	
    486          	0xF7,0x0,	
    487          	0xF8,0x0,	
    488          	0xF9,0x20,	
    489          	0xFA,0x90,	
    490          	0xFB,0x0,	
    491          	0xFC,0x40,	
    492          	0xFD,0x34,	
    493          	0xFE,0x0,	
    494          	0xFF,0x0,	
    495          	
    496          	0xFF,0x1,	//Page 1
    497          	0x0,0x0,	
    498          	0x1,0x40,	
    499          	0x2,0xBF,	
    500          	0x3,0x86,	
    501          	0x4,0x0,	
    502          	0x5,0x0,	
    503          	0x6,0x0,	
    504          	0x7,0x0,	
    505          	0x8,0x0,	
    506          	0x9,0x0,	
    507          	0x0A,0x0,	
    508          	0x0B,0x0,	
    509          	0x0C,0x0,	
    510          	0x0D,0x0,	
    511          	0x0E,0x0,	
    512          	0x0F,0x0,	
    513          	0x10,0x0,	
    514          	0x11,0x0,	
    515          	0x12,0x0,	
    516          	0x13,0x0,	
    517          	0x14,0x0,	
    518          	0x15,0x0,	
    519          	0x16,0x0,	
    520          	0x17,0x0,	
    521          	0x18,0x0,	
    522          	0x19,0x0,	
    523          	0x1A,0x0,	
    524          	0x1B,0x0,	
    525          	0x1C,0x0,	
    526          	0x1D,0x0,	
    527          	0x1E,0x0,	
    528          	0x1F,0x0,	
    529          	0x20,0x0,	
    530          	0x21,0x0,	
    531          	0x22,0x0,	
    532          	0x23,0x0,	
    533          	0x24,0x0,	
    534          	0x25,0x0,	
    535          	0x26,0x0,	
    536          	0x27,0x0,	
    537          	0x28,0x0,	
    538          	0x29,0x0,	
    539          	0x2A,0x0,	
    540          	0x2B,0x0,	
    541          	0x2C,0x0,	
    542          	0x2D,0x0,	
    543          	0x2E,0x0,	
    544          	0x2F,0x0,	
    545          	0x30,0xF2,	
    546          	0x31,0xAD,	
    547          	0x32,0x4,	
    548          	0x33,0x80,	
    549          	0x34,0x84,	
    550          	0x35,0x0,	
    551          	0x36,0x20,	
    552          	0x37,0x0,	
    553          	0x38,0x0,	
    554          	0x39,0x0,	
    555          	0x3A,0x0,	
    556          	0x3B,0x0,	
    557          	0x3C,0x0,	
    558          	0x3D,0x0,	
    559          	0x3E,0x0,	
    560          	0x3F,0x0,	
    561          	0x40,0x0,	
    562          	0x41,0x0,	
    563          	0x42,0xEE,	
    564          	0x43,0x0,	
    565          	0x44,0x0,	
    566          	0x45,0x0,	
    567          	0x46,0x0,	
    568          	0x47,0x0,	
    569          	0x48,0x0,	
    570          	0x49,0x0,	
    571          	0x4A,0x0,	
    572          	0x4B,0x0,	
    573          	0x4C,0x0,	
    574          	0x4D,0x0,	
    575          	0x4E,0x0,	
    576          	0x4F,0x0,	
    577          	0x50,0x0,	
    578          	0x51,0x0,	
    579          	0x52,0x0,	
    580          	0x53,0x0,	
    581          	0x54,0x0,	
    582          	0x55,0x0,	
    583          	0x56,0x0,	
    584          	0x57,0x41,	
    585          	0x58,0x2,	
    586          	0x59,0x0,	
    587          	0x5A,0x0,	
    588          	0x5B,0x0,	
    589          	0x5C,0x0,	
    590          	0x5D,0x0,	
    591          	0x5E,0x0,	
    592          	0x5F,0x0,	
    593          	0x60,0x0,	
    594          	0x61,0x0,	
    595          	0x62,0x0,	
    596          	0x63,0x0,	
    597          	0x64,0x0,	
    598          	0x65,0x0,	
    599          	0x66,0x0,	
    600          	0x67,0x0,	
    601          	0x68,0x0,	
    602          	0x69,0x0,	
    603          	0x6A,0x0,	
    604          	0x6B,0x0,	
    605          	0x6C,0x0,	
    606          	0x6D,0x0,	
    607          	0x6E,0x0,	
    608          	0x6F,0x0,	
    609          	0x70,0x0,	
    610          	0x71,0x0,	
    611          	0x72,0x0,	
    612          	0x73,0x0,	
    613          	0x74,0x0,	
    614          	0x75,0x0,	
    615          	0x76,0x0,	
    616          	0x77,0x5A,	
    617          	0x78,0x0,	
    618          	0x79,0x7F,	
    619          	0x7A,0x1,	
    620          	0x7B,0x0E,	
    621          	0x7C,0x0,	
    622          	0x7D,0x20,	
    623          	0x7E,0x1,	
    624          	0x7F,0xE2,	
    625          	0x80,0x0,	
    626          	0x81,0x0,	
    627          	0x82,0x7,	
    628          	0x83,0x1F,	
    629          	0x84,0x64,	
    630          	0x85,0x0,	
    631          	0x86,0x0,	
    632          	0x87,0x0,	
    633          	0x88,0x0,	
    634          	0x89,0x0,	
    635          	0x8A,0x2,	
    636          	0x8B,0x4D,	
    637          	0x8C,0x0,	
    638          	0x8D,0x0,	
    639          	0x8E,0x2,	
    640          	0x8F,0x0E,	
    641          	0x90,0x3,	
    642          	0x91,0x59,	
    643          	0x92,0x3,	
    644          	0x93,0x57,	
    645          	0x94,0x0,	
    646          	0x95,0x1,	
    647          	0x96,0x0,	
    648          	0x97,0x0,	
    649          	0x98,0x0,	
    650          	0x99,0x0,	
    651          	0x9A,0x0,	
    652          	0x9B,0x36,	
    653          	0x9C,0x0,	
    654          	0x9D,0x1,	
    655          	0x9E,0x0,	
    656          	0x9F,0x0,	
    657          	0xA0,0x2,	
    658          	0xA1,0x68,	
    659          	0xA2,0x0,	
    660          	0xA3,0x52,	
    661          	0xA4,0x0,	
    662          	0xA5,0x24,	
    663          	0xA6,0x0,	
    664          	0xA7,0x1,	
    665          	0xA8,0x0,	
    666          	0xA9,0x0,	
    667          	0xAA,0x0,	
    668          	0xAB,0x0,	
    669          	0xAC,0x0,	
    670          	0xAD,0xF6,	
    671          	0xAE,0x0,	
    672          	0xAF,0x6A,	
    673          	0xB0,0x2,	
    674          	0xB1,0x3,	
    675          	0xB2,0x88,	
    676          	0xB3,0x0,	
    677          	0xB4,0x0,	
    678          	0xB5,0x0,	
    679          	0xB6,0x0,	
    680          	0xB7,0x0,	
    681          	0xB8,0x0,	
    682          	0xB9,0x0,	
    683          	0xBA,0x0,	
    684          	0xBB,0x0,	
    685          	0xBC,0x0,	
    686          	0xBD,0x0,	
    687          	0xBE,0x0,	
    688          	0xBF,0x0,	
    689          	0xC0,0x5,	
    690          	0xC1,0xC7,	
    691          	0xC2,0x3,	
    692          	0xC3,0x3,	
    693          	0xC4,0x5A,	
    694          	0xC5,0x11,	
    695          	0xC6,0x20,	
    696          	0xC7,0x4,	
    697          	0xC8,0x0,	
    698          	0xC9,0x0,	
    699          	0xCA,0x0,	
    700          	0xCB,0x10,	
    701          	0xCC,0x4,	
    702          	0xCD,0x0,	
    703          	0xCE,0x0,	
    704          	0xCF,0x24,	
    705          	0xD0,0x0,	
    706          	0xD1,0xF0,	
    707          	0xD2,0xF0,	
    708          	0xD3,0xF0,	
    709          	0xD4,0x20,	
    710          	0xD5,0x0,	
    711          	0xD6,0x10,	
    712          	0xD7,0x0,	
    713          	0xD8,0x42,	
    714          	0xD9,0x10,	
    715          	0xDA,0x80,	
    716          	0xDB,0x80,	
    717          	0xDC,0x20,	
    718          	0xDD,0x1,	
    719          	0xDE,0x0,	
    720          	0xDF,0x0,	
    721          	0xE0,0x0,	
    722          	0xE1,0x0,	
    723          	0xE2,0x0,	
    724          	0xE3,0x0,	
    725          	0xE4,0x0,	
    726          	0xE5,0x0,	
    727          	0xE6,0x0,	
    728          	0xE7,0x0,	
    729          	0xE8,0x0,	
    730          	0xE9,0x0,	
    731          	0xEA,0x0,	
    732          	0xEB,0x0,	
    733          	0xEC,0x0,	
    734          	0xED,0x0,	
    735          	0xEE,0x0,	
    736          	0xEF,0x0,	
    737          	0xF0,0xF0,	
    738          	0xF1,0x0,	
    739          	0xF2,0xAD,	
    740          	0xF3,0x19,	
    741          	0xF4,0x0,	
    742          	0xF5,0xE8,	
    743          	0xF6,0x0,	
    744          	0xF7,0xE8,	
    745          	0xF8,0x0,	
    746          	0xF9,0x0,	
    747          	0xFA,0x0,	
    748          	0xFB,0x0,	
    749          	0xFC,0x0,	
    750          	0xFD,0x0,	
    751          	0xFE,0x0,	
    752          	0xFF,0x1	
    753          	
    754          } ;
    755          #else
    756          u8 InitCVBSAll_8816[] = 
    757          {
    758          	
    759          	0xFF,0x0,	//Page 0
    760          	0x0,0x22,	
    761          	0x1,0x93,	
    762          	0x2,0x40,	
    763          	0x3,0x0,	
    764          	0x4,0x0,	
    765          	0x5,0x8D,	
    766          	0x6,0x3,	
    767          	0x7,0x2,	
    768          	0x8,0x14,	
    769          	0x9,0xF3,	
    770          	0x0A,0x0F,	
    771          	0x0B,0xD0,	
    772          	0x0C,0xDC,	
    773          	0x0D,0x15,	
    774          	0x0E,0x80,	
    775          	0x0F,0x0,	
    776          	0x10,0x0,	
    777          	0x11,0x5C,	
    778          	0x12,0x13,	
    779          	0x13,0x80,	
    780          	0x14,0x80,	
    781          	0x15,0x0,	
    782          	0x16,0xC3,	
    783          	0x17,0x30,	
    784          	0x18,0x44,	
    785          	0x19,0x0,	
    786          	0x1A,0x90,	
    787          	0x1B,0x0,	
    788          	
    789          	//0x1C,0x27,	
    790          	//0x1D,0x7F,	
    791          	0x1c, 0x00,
    792          	0x1d, 0x01,
    793          	
    794          	0x1E,0x8,	
    795          	0x1F,0x0,	
    796          	0x20,0x50,	
    797          	0x21,0x42,	
    798          	0x22,0xF0,	
    799          	0x23,0xD8,	
    800          	0x24,0xBC,	
    801          	0x25,0xB8,	
    802          	0x26,0x44,	
    803          	0x27,0x2A,	
    804          	0x28,0x0,	
    805          	0x29,0x0,	
    806          	0x2A,0x78,	
    807          	0x2B,0x44,	
    808          	0x2C,0x30,	
    809          	0x2D,0x4,	
    810          	//0x2E,0xA5,
    811          
    812          	0x2E,0xFF,
    813          
    814          	
    815          	0x2F,0xE0,	
    816          	0x30,0x10,	
    817          	0x31,0x0,	
    818          	0x32,0x0,	
    819          	0x33,0x5,	
    820          	0x34,0x9A,	
    821          	0x35,0x30,	
    822          	0x36,0x0,	
    823          	0x37,0x0,	
    824          	0x38,0x8E,	
    825          	0x39,0x0,	
    826          	0x3A,0x0,	
    827          	0x3B,0x0,	
    828          	0x3C,0x0,	
    829          	0x3D,0x0,	
    830          	0x3E,0x0,	
    831          	0x3F,0x0,	
    832          	0x40,0x0,	
    833          	0x41,0x20,	
    834          	0x42,0x4,	
    835          	0x43,0x22,	
    836          	0x44,0x18,	
    837          	0x45,0x50,	
    838          	0x46,0x20,	
    839          	0x47,0x0,	
    840          	0x48,0xCF,	
    841          	0x49,0x61,	
    842          	0x4A,0x13,	
    843          	0x4B,0x13,	
    844          	0x4C,0x0,	
    845          	0x4D,0x30,	
    846          	0x4E,0x0,	
    847          	0x4F,0x0,	
    848          	0x50,0x0,	
    849          	0x51,0x20,	
    850          	0x52,0xFF,	
    851          	0x53,0x10,	
    852          	0x54,0x20,	
    853          	0x55,0xFA,	
    854          	0x56,0x0,	
    855          	0x57,0x0,	
    856          	0x58,0x0,	
    857          	0x59,0x0,	
    858          	0x5A,0x0,	
    859          	0x5B,0x30,	
    860          	0x5C,0x0,	
    861          	0x5D,0x30,	
    862          	0x5E,0x0,	
    863          	0x5F,0x0,	
    864          	
    865          	//0x60,0xE3,	
    866          	//0x61,0x80,	
    867          	//0x62,0x80,	
    868          
    869          	// ++, 150323 sys No zoom
    870          	//0x60,0xE3,	
    871          	//0x61,0x80,	
    872          	//0x62,0x80,	
    873          	//0x63,0x0,	
    874          	
    875          	0x60,0x00,  // X_SCALE_UP_MID
    876          	0x61,0x80,	
    877          	//0x62,0x80,
    878          	//0x63,0x01,
    879          	0x62,0x80,
    880          	0x63,0x01,	
    881          
    882          	// --, 150323 sys
    883          	
    884          	0x64,0x0,	
    885          	0x65,0x80,	
    886          
    887          	// ++, 150323 sys
    888          	//0x66,0x0,	
    889          	//0x67,0x0,
    890          	0x66,0x2e,	// H_NON_DISPLAY
    891          	0x67,0x0,
    892          	// --, 150323 sys
    893          
    894          	// ++, 150323 sys
    895          	//0x68,0x0,	// X_SCALE_UP_LO
    896          	
    897          	0x68,000,	// X_SCALE_UP_LO
    898          	// --, 150323 sys
    899          	0x69,0x0,	
    900          	0x6A,0x0,	
    901          	0x6B,0x0,	
    902          	0x6C,0x0,	
    903          	0x6D,0x0,	
    904          	0x6E,0x0,	
    905          	0x6F,0x0,	
    906          	0x70,0x60,	
    907          	0x71,0x80,	
    908          	0x72,0x80,	
    909          	0x73,0x80,	
    910          	0x74,0x80,	
    911          	0x75,0x80,	
    912          	0x76,0x80,	
    913          	0x77,0x3F,	
    914          	0x78,0x0A,	
    915          	0x79,0x0,	
    916          	0x7A,0x30,	
    917          	0x7B,0x0,	
    918          	0x7C,0x1C,	
    919          	0x7D,0x8,	
    920          	0x7E,0xF6,	
    921          	0x7F,0x8,	
    922          	0x80,0x10,	
    923          	0x81,0x0D,	
    924          	0x82,0x3,	
    925          	0x83,0x0,	
    926          	0x84,0x67,	
    927          	0x85,0x94,	
    928          	0x86,0x18,	
    929          	0x87,0xE8,	
    930          	0x88,0xCA,	
    931          	0x89,0x2,	
    932          	0x8A,0x0A,	
    933          	0x8B,0x4,	
    934          	0x8C,0x0,	
    935          	0x8D,0x0,	
    936          	0x8E,0x0,	
    937          	0x8F,0x0,	
    938          	0x90,0x0,	
    939          	0x91,0x6,	
    940          	0x92,0x6,	
    941          	0x93,0x6,	
    942          	0x94,0x0,	
    943          	0x95,0x40,	
    944          	0x96,0x0,	
    945          	0x97,0x0,	
    946          	0x98,0x0,	
    947          	0x99,0x8,	
    948          	0x9A,0x0,	
    949          	0x9B,0x31,	
    950          	0x9C,0x0,	
    951          	0x9D,0x0,	
    952          	
    953          	0x9E,0x0,	
    954          	0x9F,0x01,	
    955          	0xA0,0x0,	
    956          	0xA1,0x0,	
    957          	0xA2,0x0,	
    958          	0xA3,0x22,	
    959          	0xA4,0x0E,	
    960          	0xA5,0x32,	
    961          	0xA6,0x0,	
    962          	0xA7,0x0,	
    963          	0xA8,0x00,	
    964          	0xA9,0x50,	
    965          	0xAA,0x0,	
    966          	0xAB,0x44,	
    967          	0xAC,0x0F,	
    968          	0xAD,0x00,	
    969          	0xAE,0x0,	
    970          	0xAF,0x0,	
    971          	0xB0,0x40,	
    972          	0xB1,0x0,	
    973          	0xB2,0xCC,	
    974          	0xB3,0x1,	
    975          	0xB4,0x10,	
    976          	0xB5,0x20,	
    977          	0xB6,0x33,	
    978          	0xB7,0x12,	
    979          	0xB8,0x1,	
    980          	0xB9,0x29,	
    981          	0xBA,0xE0,	
    982          	0xBB,0x12,	
    983          	0xBC,0x0,	
    984          	0xBD,0x0C,	
    985          	0xBE,0xC2,	
    986          	0xBF,0x0,	
    987          	0xC0,0x0,	
    988          	0xC1,0x0,	
    989          	0xC2,0x0,	
    990          	0xC3,0x0,	
    991          	0xC4,0x40,	
    992          	0xC5,0x0,	
    993          	0xC6,0x0,	
    994          	0xC7,0x0,	
    995          	0xC8,0x0,	
    996          	0xC9,0x0,	
    997          	0xCA,0x0,	
    998          	0xCB,0x0,	
    999          	0xCC,0x0,	
   1000          	0xCD,0x0,	
   1001          	0xCE,0x0,	
   1002          	0xCF,0x0,	
   1003          	0xD0,0xC9,	
   1004          	0xD1,0x4C,	
   1005          	0xD2,0xFF,	
   1006          	0xD3,0x7,	
   1007          	0xD4,0x0,	
   1008          	0xD5,0x3F,	
   1009          	0xD6,0x0,	
   1010          	0xD7,0x0,	
   1011          	0xD8,0x0,	
   1012          	0xD9,0x0,	
   1013          	0xDA,0x3D,	
   1014          	0xDB,0xC3,	
   1015          	0xDC,0xFC,	
   1016          	0xDD,0x0,	
   1017          	0xDE,0x0,	
   1018          	0xDF,0x0,	
   1019          	0xE0,0x0,	
   1020          	0xE1,0x0,	
   1021          	0xE2,0x0,	
   1022          	0xE3,0x0,	
   1023          	0xE4,0x0,	
   1024          	0xE5,0x0,	
   1025          	0xE6,0x0,	
   1026          	0xE7,0x0,	
   1027          	0xE8,0x0,	
   1028          	0xE9,0x0,	
   1029          	0xEA,0x0,	
   1030          	0xEB,0x0,	
   1031          	0xEC,0x0,	
   1032          	0xED,0x0,	
   1033          	0xEE,0x0,	
   1034          	0xEF,0x0,	
   1035          	0xF0,0x0,	
   1036          	0xF1,0x20,	
   1037          	0xF2,0x0,	
   1038          	0xF3,0x0,	
   1039          	0xF4,0x16,	
   1040          	0xF5,0x0,	
   1041          	0xF6,0x0,	
   1042          	0xF7,0x0,	
   1043          	0xF8,0x0,	
   1044          	0xF9,0x20,	
   1045          	0xFA,0x90,	
   1046          	0xFB,0x0,	
   1047          	0xFC,0x40,	
   1048          	0xFD,0x34,	
   1049          	0xFE,0x0,	
   1050          	0xFF,0x0,	
   1051          	
   1052          	0xFF,0x1,	//Page 1
   1053          	0x0,0x0,	
   1054          	0x1,0x40,	
   1055          	0x2,0xBF,	
   1056          	0x3,0x86,	
   1057          	0x4,0x0,	
   1058          	0x5,0x0,	
   1059          	0x6,0x0,	
   1060          	0x7,0x0,	
   1061          	0x8,0x0,	
   1062          	0x9,0x0,	
   1063          	0x0A,0x0,	
   1064          	0x0B,0x0,	
   1065          	0x0C,0x0,	
   1066          	0x0D,0x0,	
   1067          	0x0E,0x0,	
   1068          	0x0F,0x0,	
   1069          	0x10,0x0,	
   1070          	0x11,0x0,	
   1071          	0x12,0x0,	
   1072          	0x13,0x0,	
   1073          	0x14,0x0,	
   1074          	0x15,0x0,	
   1075          	0x16,0x0,	
   1076          	0x17,0x0,	
   1077          	0x18,0x0,	
   1078          	0x19,0x0,	
   1079          	0x1A,0x0,	
   1080          	0x1B,0x0,	
   1081          	0x1C,0x0,	
   1082          	0x1D,0x0,	
   1083          	0x1E,0x0,	
   1084          	0x1F,0x0,	
   1085          	0x20,0x0,	
   1086          	0x21,0x0,	
   1087          	0x22,0x0,	
   1088          	0x23,0x0,	
   1089          	0x24,0x0,	
   1090          	0x25,0x0,	
   1091          	0x26,0x0,	
   1092          	0x27,0x0,	
   1093          	0x28,0x0,	
   1094          	0x29,0x0,	
   1095          	0x2A,0x0,	
   1096          	0x2B,0x0,	
   1097          	0x2C,0x0,	
   1098          	0x2D,0x0,	
   1099          	0x2E,0x0,	
   1100          	0x2F,0x0,	
   1101          	0x30,0xF2,	
   1102          	0x31,0xAD,	
   1103          	0x32,0x4,	
   1104          	0x33,0x80,	
   1105          	0x34,0x84,	
   1106          	0x35,0x0,	
   1107          	0x36,0x20,	
   1108          	0x37,0x0,	
   1109          	0x38,0x0,	
   1110          	0x39,0x0,	
   1111          	0x3A,0x0,	
   1112          	0x3B,0x0,	
   1113          	0x3C,0x0,	
   1114          	0x3D,0x0,	
   1115          	0x3E,0x0,	
   1116          	0x3F,0x0,	
   1117          	0x40,0x0,	
   1118          	0x41,0x0,	
   1119          	0x42,0xEE,	
   1120          	0x43,0x0,	
   1121          	0x44,0x0,	
   1122          	0x45,0x0,	
   1123          	0x46,0x0,	
   1124          	0x47,0x0,	
   1125          	0x48,0x0,	
   1126          	0x49,0x0,	
   1127          	0x4A,0x0,	
   1128          	0x4B,0x0,	
   1129          	0x4C,0x0,	
   1130          	0x4D,0x0,	
   1131          	0x4E,0x0,	
   1132          	0x4F,0x0,	
   1133          	0x50,0x0,	
   1134          	0x51,0x0,	
   1135          	0x52,0x0,	
   1136          	0x53,0x0,	
   1137          	0x54,0x0,	
   1138          	0x55,0x0,	
   1139          	0x56,0x0,	
   1140          	0x57,0x41,	
   1141          	0x58,0x2,	
   1142          	0x59,0x0,	
   1143          	0x5A,0x0,	
   1144          	0x5B,0x0,	
   1145          	0x5C,0x0,	
   1146          	0x5D,0x0,	
   1147          	0x5E,0x0,	
   1148          	0x5F,0x0,	
   1149          	0x60,0x0,	
   1150          	0x61,0x0,	
   1151          	0x62,0x0,	
   1152          	0x63,0x0,	
   1153          	0x64,0x0,	
   1154          	0x65,0x0,	
   1155          	0x66,0x0,	
   1156          	0x67,0x0,	
   1157          	0x68,0x0,	
   1158          	0x69,0x0,	
   1159          	0x6A,0x0,	
   1160          	0x6B,0x0,	
   1161          	0x6C,0x0,	
   1162          	0x6D,0x0,	
   1163          	0x6E,0x0,	
   1164          	0x6F,0x0,	
   1165          	0x70,0x0,	
   1166          	0x71,0x0,	
   1167          	0x72,0x0,	
   1168          	0x73,0x0,	
   1169          	0x74,0x0,	
   1170          	0x75,0x0,	
   1171          	0x76,0x0,	
   1172          	0x77,0x5A,	
   1173          	0x78,0x0,	
   1174          	0x79,0x7F,	
   1175          	0x7A,0x1,	
   1176          	0x7B,0x0E,	
   1177          	0x7C,0x0,	
   1178          	0x7D,0x20,	
   1179          	0x7E,0x1,	
   1180          	0x7F,0xE2,	
   1181          	0x80,0x0,	
   1182          	0x81,0x0,	
   1183          	0x82,0x7,	
   1184          	0x83,0x1F,	
   1185          	0x84,0x64,	
   1186          	0x85,0x0,	
   1187          	0x86,0x0,	
   1188          	0x87,0x0,	
   1189          	0x88,0x0,	
   1190          	0x89,0x0,	
   1191          	0x8A,0x2,	
   1192          	0x8B,0x4D,	
   1193          	0x8C,0x0,	
   1194          	0x8D,0x0,	
   1195          	0x8E,0x2,	
   1196          	0x8F,0x0E,	
   1197          	0x90,0x3,	
   1198          	0x91,0x59,	
   1199          	0x92,0x3,	
   1200          	0x93,0x57,	
   1201          	0x94,0x0,	
   1202          	0x95,0x1,	
   1203          	0x96,0x0,	
   1204          	0x97,0x0,	
   1205          	0x98,0x0,	
   1206          	0x99,0x0,	
   1207          	0x9A,0x0,	
   1208          	0x9B,0x36,	
   1209          	0x9C,0x0,	
   1210          	0x9D,0x1,	
   1211          	
   1212          	0x9E,0x0,	
   1213          	0x9F,0x0,	
   1214          	0xA0,0x2,	
   1215          	0xA1,0x68,	
   1216          	0xA2,0x0,	
   1217          	0xA3,0x52,	
   1218          	0xA4,0x0,	
   1219          	0xA5,0x24,	
   1220          	0xA6,0x0,	
   1221          	0xA7,0x1,	
   1222          	0xA8,0x0,	
   1223          	0xA9,0x0,	
   1224          	0xAA,0x0,	
   1225          	0xAB,0x0,	
   1226          	0xAC,0x0,	
   1227          	0xAD,0xF6,	
   1228          	0xAE,0x0,	
   1229          	0xAF,0x6A,	
   1230          	0xB0,0x2,	
   1231          	0xB1,0x3,	
   1232          	0xB2,0x88,	
   1233          	0xB3,0x0,	
   1234          	0xB4,0x0,	
   1235          	0xB5,0x0,	
   1236          	0xB6,0x0,	
   1237          	0xB7,0x0,	
   1238          	0xB8,0x0,	
   1239          	0xB9,0x0,	
   1240          	0xBA,0x0,	
   1241          	0xBB,0x0,	
   1242          	0xBC,0x0,	
   1243          	0xBD,0x0,	
   1244          	0xBE,0x0,	
   1245          	0xBF,0x0,	
   1246          	0xC0,0x5,	
   1247          	0xC1,0xC7,	
   1248          	0xC2,0x3,	
   1249          	0xC3,0x3,	
   1250          	0xC4,0x5A,	
   1251          	0xC5,0x11,	
   1252          	0xC6,0x20,	
   1253          	0xC7,0x4,	
   1254          	0xC8,0x0,	
   1255          	0xC9,0x0,	
   1256          	0xCA,0x0,	
   1257          	0xCB,0x10,	
   1258          	0xCC,0x4,	
   1259          	0xCD,0x0,	
   1260          	0xCE,0x0,	
   1261          	0xCF,0x24,	
   1262          	0xD0,0x0,	
   1263          	0xD1,0xF0,	
   1264          	0xD2,0xF0,	
   1265          	0xD3,0xF0,	
   1266          	0xD4,0x20,	
   1267          	0xD5,0x0,	
   1268          	0xD6,0x10,	
   1269          	0xD7,0x0,	
   1270          	0xD8,0x42,	
   1271          	0xD9,0x10,	
   1272          	0xDA,0x80,	
   1273          	0xDB,0x80,	
   1274          	0xDC,0x20,	
   1275          	0xDD,0x1,	
   1276          	0xDE,0x0,	
   1277          	0xDF,0x0,	
   1278          	0xE0,0x0,	
   1279          	0xE1,0x0,	
   1280          	0xE2,0x0,	
   1281          	0xE3,0x0,	
   1282          	0xE4,0x0,	
   1283          	0xE5,0x0,	
   1284          	0xE6,0x0,	
   1285          	0xE7,0x0,	
   1286          	0xE8,0x0,	
   1287          	0xE9,0x0,	
   1288          	0xEA,0x0,	
   1289          	0xEB,0x0,	
   1290          	0xEC,0x0,	
   1291          	0xED,0x0,	
   1292          	0xEE,0x0,	
   1293          	0xEF,0x0,	
   1294          	0xF0,0xF0,	
   1295          	0xF1,0x0,	
   1296          	0xF2,0xAD,	
   1297          	0xF3,0x19,	
   1298          	0xF4,0x0,	
   1299          	0xF5,0xE8,	
   1300          	0xF6,0x0,	
   1301          	0xF7,0xE8,	
   1302          	0xF8,0x0,	
   1303          	0xF9,0x0,	
   1304          	0xFA,0x0,	
   1305          	0xFB,0x0,	
   1306          	0xFC,0x0,	
   1307          	0xFD,0x0,	
   1308          	0xFE,0x0,	
   1309          	0xFF,0x1	
   1310          	
   1311          } ;
   1312          
   1313          #endif
   1314          
   1315          /* Private function prototypes -----------------------------------------------*/
   1316          /* Private functions ---------------------------------------------------------*/
   1317          
   1318          /**\
   1319            * @brief  None
   1320            * @param  None
   1321            * @retval None
   1322            */
   1323          
   1324          void NOP_TW8816(void)
   1325          {
   1326          	TimeDelay_usec(1);	
   1327          }
   1328          
   1329          
   1330          void TW8816_PortChange(unsigned char dir)
   1331          {
   1332          	unsigned short temp;
   1333          	
   1334          	GPIO_InitTypeDef GPIO_InitStructure;
   1335          	
   1336          	if (dir)// Output
   1337          	{
   1338          		temp = TW8816_I2C2_PORT->IDR;			//	GPIO_ReadInputData
   1339          		temp = ((~(TW8816_I2C2_SDA)) & temp);
   1340          		TW8816_I2C2_PORT->ODR = (temp);			//	GPIO_Write
   1341          		
   1342          		GPIO_InitStructure.GPIO_Pin   = TW8816_I2C2_SDA;
   1343          		GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
   1344          		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
   1345          		GPIO_Init(TW8816_I2C2_PORT, &GPIO_InitStructure);	
   1346          	}
   1347          	else	// Input
   1348          	{	
   1349          		temp = TW8816_I2C2_PORT->IDR;			//	GPIO_ReadInputData
   1350          		temp = ((~(TW8816_I2C2_SDA)) & temp);
   1351          		TW8816_I2C2_PORT->ODR = (temp);			//	GPIO_Write
   1352          		
   1353          		GPIO_InitStructure.GPIO_Pin  = TW8816_I2C2_SDA;
   1354          		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   1355          		GPIO_Init(TW8816_I2C2_PORT, &GPIO_InitStructure);	
   1356          	}
   1357          }
   1358          
   1359          void I2C2_Write_8816(u8 WData)
   1360          {
   1361          	u8 i, j;
   1362          
   1363          	NOP_TW8816();
   1364          
   1365          	for (i = 0; i < 8; i++)
   1366          	{
   1367          		j = ( WData & 0x80 ) ? 1 : 0;
   1368          		(j) ? GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA) : GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1369          		NOP_TW8816();
   1370          		TW8816_SCL1;
   1371          		NOP_TW8816();		
   1372          		WData <<= 1;
   1373          		TW8816_SCL0;
   1374          		NOP_TW8816();
   1375          	}
   1376          
   1377          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1378          	NOP_TW8816();
   1379          	TW8816_SCL1;
   1380          	NOP_TW8816();
   1381          	TW8816_SCL0;
   1382          }
   1383          
   1384          void I2C2_ByteWrite_8816(u16 in_AddrVal, u8 in_DataVal)
   1385          {
   1386          	u16 tmp_index;
   1387          
   1388          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1389          	TW8816_SDAOUT;
   1390          	// START
   1391          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1392          	TW8816_SCL1;
   1393          	NOP_TW8816();
   1394          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1395          	NOP_TW8816();
   1396          	TW8816_SCL0;
   1397          	// END
   1398          
   1399          	I2C2_Write_8816(TW8816_I2C_Addr);
   1400          	I2C2_Write_8816((u8)in_AddrVal);
   1401          	I2C2_Write_8816(in_DataVal);
   1402          
   1403          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1404          	NOP_TW8816();
   1405          	TW8816_SCL1;
   1406          	NOP_TW8816();
   1407          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1408          
   1409          	for (tmp_index = 0; tmp_index < 15000; tmp_index++);
   1410          }
   1411          u8 I2C2_Read_8816(void)
   1412          {
   1413          	u8 i;
   1414          	u8 RData;
   1415          
   1416          	NOP_TW8816();
   1417          	TW8816_SCL0;
   1418          	NOP_TW8816();
   1419          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1420          	TW8816_SDAIN;
   1421          
   1422          	for ( i = 0; i < 8; i++ )
   1423          	{
   1424          		TW8816_SCL1;
   1425          		NOP_TW8816();
   1426          		NOP_TW8816();
   1427          		RData = (RData << 1) | TW8816_SDA_READ;
   1428          		TW8816_SCL0;
   1429          		NOP_TW8816();
   1430          		NOP_TW8816();
   1431          	}
   1432          	GPIO_ResetBits(TW8816_I2C2_PORT, GPIO_Pin_7);
   1433          	TW8816_SDAOUT;
   1434          	return (RData );
   1435          }
   1436          
   1437          u8 I2C2_ByteRead_8816(u16 in_AddrVal)
   1438          {
   1439          	u8 RData = 0;
   1440          	u16 tmp_index;
   1441          
   1442          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1443          	TW8816_SDAOUT;
   1444          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1445          	TW8816_SCL1;
   1446          	NOP_TW8816();
   1447          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1448          	NOP_TW8816();
   1449          	TW8816_SCL0;
   1450          
   1451          	I2C2_Write_8816(TW8816_I2C_Addr);
   1452          	I2C2_Write_8816((u8)in_AddrVal);
   1453          
   1454          	NOP_TW8816();
   1455          	NOP_TW8816();
   1456          
   1457          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1458          	NOP_TW8816();
   1459          	TW8816_SCL1;
   1460          	NOP_TW8816();
   1461          
   1462          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1463          	NOP_TW8816();
   1464          	TW8816_SCL0;
   1465          
   1466          	I2C2_Write_8816(0x8b);
   1467          
   1468          	RData = I2C2_Read_8816();
   1469          
   1470          	// NAK
   1471          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1472          	NOP_TW8816();
   1473          	TW8816_SCL1;
   1474          	NOP_TW8816();
   1475          	TW8816_SCL0;
   1476          	NOP_TW8816();
   1477          
   1478          	// STOP
   1479          	GPIO_ResetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1480          	NOP_TW8816();
   1481          	TW8816_SCL1;
   1482          	NOP_TW8816();
   1483          	GPIO_SetBits(TW8816_I2C2_PORT, TW8816_I2C2_SDA);
   1484          
   1485          	for (tmp_index = 0; tmp_index < 15000; tmp_index++);
   1486          	return (RData);
   1487          }
   1488          
   1489          void WriteTW8816(u8 in_AddrVal, u8 in_DataVal)
   1490          {
   1491          	I2C2_ByteWrite_8816(in_AddrVal, in_DataVal);
   1492          	TimeDelay_usec(500);
   1493          }
   1494          
   1495          u8 ReadTW8816(u8 in_AddrVal)
   1496          {
   1497          	u8 val;
   1498          
   1499          	val = I2C2_ByteRead_8816(in_AddrVal);
   1500          
   1501          	return(val);
   1502          }
   1503          
   1504          void I2C2DeviceInitialize_8816(u8 *RegSet)
   1505          {
   1506          	u8 Addr, val;
   1507                 
   1508          	RegSet += 2;
   1509          	
   1510          	// 0xff, 0xff is end of data
   1511          	while (( RegSet[0] != 0xFF ) || ( RegSet[1]!= 0xFF )) 
   1512          	{			
   1513          		Addr = *RegSet;
   1514          		val = *(RegSet+1);
   1515          		I2C2_ByteWrite_8816(Addr, val);
   1516          		RegSet+=2;
   1517          	}
   1518          
   1519          	WriteTW8816(0xff, 0x00);	// Set page 0
   1520          }
   1521          
   1522          
   1523          void InitCVBSRegister_8816( void )
   1524          {
   1525          	I2C2DeviceInitialize_8816( InitCVBSAll_8816 );
   1526          }
   1527          
   1528          
   1529          
   1530          void TW8816_CheckCamera_Input(u8 Mode)
   1531          {
   1532          	u8 CAMSig_1;
   1533          	WriteTW8816(0xff, 0x00);
   1534          	CAMSig_1 = ReadTW8816(0x01);
   1535          	if((CAMSig_1 & 0x80) >> 7== 0x01)
   1536          	{
   1537          		SetDisplayNosignal();
   1538          	}
   1539          	else
   1540          	{
   1541          		SetDisplayNosignalBlank();
   1542          	}
   1543          	
   1544          }
   1545          
   1546          void TW8816_CameraMode(u8 Mode, u8 OSD)
   1547          {
   1548          	//WL9FM_CAMERA_nRESET();	
   1549          	//InitCVBSRegister_8816();
   1550                  //WriteTW8816(0x94, 0x02);
   1551                  if(AAVMEquipFlag == 0) {
   1552                    SetDisplayBlankGreenGuideLine();      
   1553                    SetDisplayBlankRedGuideLine();
   1554                  }
   1555                  //SetBlankIcon();
   1556          	if(Mode == 0x00)
   1557          	{
   1558          		WriteTW8816(0xff, 0x01);
   1559          		WriteTW8816(0xf3, 0xe9);
   1560          		WriteTW8816(0xff, 0x00);
   1561          		WriteTW8816(0x02, 0x4c);
   1562          		//SetDisplayWarning();
   1563                          SetDisplayCH1();
   1564                          TimeDelay(200);
   1565          		WriteTW8816(0xff, 0x01);
   1566          		WriteTW8816(0xf3, 0x19);
   1567          	}
   1568          	else if(Mode == 0x01)
   1569          	{
   1570          		WriteTW8816(0xff, 0x01);
   1571          		WriteTW8816(0xf3, 0xe9);
   1572          		WriteTW8816(0xff, 0x00);
   1573          		WriteTW8816(0x02, 0x44);
   1574          		//SetDisplayWarning();
   1575                          SetDisplayCH2();
   1576          		TimeDelay(200);
   1577          		WriteTW8816(0xff, 0x01);
   1578          		WriteTW8816(0xf3, 0x19);
   1579          	}
   1580          	else if(Mode == 0x02)
   1581          	{
   1582          		WriteTW8816(0xff, 0x01);
   1583          		WriteTW8816(0xf3, 0xe9);
   1584          		WriteTW8816(0xff, 0x00);
   1585          		WriteTW8816(0x02, 0x48);
   1586          		//SetDisplayWarning();
   1587                          SetDisplayCH3();
   1588          		TimeDelay(200);
   1589          		WriteTW8816(0xff, 0x01);
   1590          		WriteTW8816(0xf3, 0x19);
   1591          	}
   1592          	else if(Mode == 0x03)
   1593          	{
   1594                    	WriteTW8816(0xff, 0x01);
   1595          		WriteTW8816(0xf3, 0xe9);
   1596          		WriteTW8816(0xff, 0x00);
   1597          		WriteTW8816(0x02, 0x40);
   1598                          //SetDisplayWarning();
   1599                          SetDisplayCH4();
   1600          		TimeDelay(200);
   1601          		WriteTW8816(0xff, 0x01);
   1602          		WriteTW8816(0xf3, 0x19);
   1603          	}
   1604          	else
   1605          	{
   1606          		WriteTW8816(0xff, 0x01);
   1607          		WriteTW8816(0xf3, 0xe9);
   1608          		WriteTW8816(0xff, 0x00);
   1609          		WriteTW8816(0x02, 0x4c);
   1610          		//SetDisplayWarning();
   1611                          SetDisplayCH1();
   1612                          TimeDelay(200);
   1613          		WriteTW8816(0xff, 0x01);
   1614          		WriteTW8816(0xf3, 0x19);
   1615          	}
   1616          
   1617          }
   1618          
   1619          void TW8816_CheckAAVM_Input(u8 Mode)
   1620          {
   1621          	u8 CAMSig_1;
   1622          	WriteTW8816(0xff, 0x00);
   1623                  //WriteTW8816(0x94, 0x02);
   1624          	CAMSig_1 = ReadTW8816(0x01);
   1625          	if((CAMSig_1 & 0x80) >> 7== 0x01)
   1626          	{
   1627          		SetDisplayNosignal();
   1628          	}
   1629          	else
   1630          	{
   1631          		SetDisplayNosignalBlank();
   1632          	}
   1633          	
   1634          }
   1635          
   1636          void TW8816_AAVMMode(u8 Mode, u8 OSD)
   1637          {
   1638          	//WL9FM_CAMERA_nRESET();	
   1639          	//InitCVBSRegister_8816();
   1640                  //WriteTW8816(0x94, 0x02);
   1641          	//WriteTW8816(0xff, 0x01);
   1642          	//WriteTW8816(0xf3, 0xe9);
   1643          	WriteTW8816(0xff, 0x00);
   1644          	WriteTW8816(0x02, 0x4c);
   1645                  SetDisplayIcon();
   1646                  TimeDelay(200);
   1647          	//WriteTW8816(0xff, 0x01);
   1648          	//WriteTW8816(0xf3, 0x19);
   1649                  
   1650          }
   1651          void DownloadUDFont(void)
   1652          {
   1653          	u8 i, j;
   1654          
   1655          	WriteTW8816(0x9b, 0xFF); // Set Color Font Start Address. 
   1656          
   1657          	for(i=0; (i< 226) && (i<= 0xe4) ; i++) {
   1658          		WriteTW8816(0x94, ReadTW8816(0x94) | 0x01);		// Font RAM access mode ON
   1659          		WriteTW8816(0x99, i);
   1660          
   1661          		for ( j = 0; j<27; j++ ) {
   1662          			WriteTW8816(0x9a, ROMFONTDATA[i][j]);
   1663          		}
   1664          
   1665          		WriteTW8816(0x94, (ReadTW8816(0x94) & 0xfe));		// OSD RAM access mode OFF
   1666          	}
   1667          }
   1668          
   1669          void TW8816_Control_Init(void)
   1670          {
   1671          	DebugMsg_printf("++ TW8816_Control_Init (I2C2 & SPI2), ADC Initialize START\r\n");
   1672          
   1673          	InitCVBSRegister_8816();
   1674          
   1675          	DebugMsg_printf("-- TW8816_Control_Init (I2C2 & SPI2), ADC Initialize END\r\n");
   1676          }
   1677          
   1678          // ++, sys3215, 141211
   1679          void WL9F_CAMERA_Init(void)
   1680          {
   1681          	if(Hardware_Revision==REVB)
   1682          	{
   1683          		TW8832_Control_Init();						//	-> 	TW8832_Control.c (LCD Interface)
   1684          		TW2835_Control_Init();	
   1685          	}
   1686          	else
   1687          	{
   1688          		TW8816_Control_Init();
   1689          	}
   1690          }
   1691          // --, sys3215, 141211
   1692          
   1693          
   1694          /*********(C) COPYRIGHT 2010 TaeHa Mechatronics Co., Ltd. *****END OF FILE****/
   1695          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   DownloadUDFont
        24   -> I2C2_ByteRead_8816
        24   -> I2C2_ByteWrite_8816
        24   -> TimeDelay_usec
       8   I2C2DeviceInitialize_8816
         8   -> I2C2_ByteWrite_8816
         0   -> WriteTW8816
      16   I2C2_ByteRead_8816
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> I2C2_Read_8816
        16   -> I2C2_Write_8816
        16   -> TW8816_PortChange
        16   -> TimeDelay_usec
      16   I2C2_ByteWrite_8816
        16   -> GPIO_ResetBits
         0   -> GPIO_SetBits
        16   -> GPIO_SetBits
        16   -> I2C2_Write_8816
        16   -> TW8816_PortChange
        16   -> TimeDelay_usec
      16   I2C2_Read_8816
        16   -> GPIO_ReadInputDataBit
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> TW8816_PortChange
        16   -> TimeDelay_usec
      16   I2C2_Write_8816
         0   -> GPIO_ResetBits
        16   -> GPIO_ResetBits
        16   -> GPIO_SetBits
        16   -> TimeDelay_usec
       0   InitCVBSRegister_8816
         0   -> I2C2DeviceInitialize_8816
       0   NOP_TW8816
         0   -> TimeDelay_usec
       0   ReadTW8816
         0   -> I2C2_ByteRead_8816
       8   TW8816_AAVMMode
         8   -> I2C2_ByteWrite_8816
         8   -> SetDisplayIcon
         0   -> TimeDelay
         8   -> TimeDelay_usec
       8   TW8816_CameraMode
         8   -> SetDisplayBlankGreenGuideLine
         8   -> SetDisplayBlankRedGuideLine
         8   -> SetDisplayCH1
         8   -> SetDisplayCH2
         8   -> SetDisplayCH3
         8   -> SetDisplayCH4
         8   -> TimeDelay
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   TW8816_CheckAAVM_Input
         8   -> I2C2_ByteRead_8816
         8   -> I2C2_ByteWrite_8816
         8   -> SetDisplayNosignal
         0   -> SetDisplayNosignalBlank
         8   -> TimeDelay_usec
       8   TW8816_CheckCamera_Input
         8   -> I2C2_ByteRead_8816
         8   -> SetDisplayNosignal
         0   -> SetDisplayNosignalBlank
         8   -> WriteTW8816
       0   TW8816_Control_Init
         0   -> I2C2DeviceInitialize_8816
      16   TW8816_PortChange
        16   -> GPIO_Init
       8   WL9F_CAMERA_Init
         0   -> I2C2DeviceInitialize_8816
         0   -> TW2835_Control_Init
         8   -> TW8832_Control_Init
       8   WriteTW8816
         8   -> I2C2_ByteWrite_8816
         0   -> TimeDelay_usec


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ?Subroutine0
       8  ?Subroutine1
     124  DownloadUDFont
      32  I2C2DeviceInitialize_8816
     262  I2C2_ByteRead_8816
     142  I2C2_ByteWrite_8816
     126  I2C2_Read_8816
     128  I2C2_Write_8816
    1028  InitCVBSAll_8816
       2  InitCVBSRegister_8816
       6  NOP_TW8816
   29484  ROMFONTDATA
       2  ReadTW8816
      48  TW8816_AAVMMode
     208  TW8816_CameraMode
      36  TW8816_CheckAAVM_Input
      30  TW8816_CheckCamera_Input
       2  TW8816_Control_Init
      62  TW8816_PortChange
      28  WL9F_CAMERA_Init
      18  WriteTW8816
      16  table

 
 30 528 bytes in section .data
  1 288 bytes in section .text
 
  1 288 bytes of CODE memory
 30 528 bytes of DATA memory

Errors: none
Warnings: 6
