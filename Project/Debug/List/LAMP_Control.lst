###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      16/May/2013  10:07:33 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Tools\IAR Systems\Embedded Workbench                  #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Platform\TaeHa -          #
#                    ECS\SRC\LAMP_Control.c                                   #
#    Command line =  "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Platform\TaeHa -          #
#                    ECS\SRC\LAMP_Control.c" -D USE_STDPERIPH_DRIVER -D       #
#                    STM32F4XX -D USE_STM324xG_EVAL -D USE_FULL_ASSERT -lcN   #
#                    "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\Debug\List\" -o   #
#                    "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\Debug\Obj\"       #
#                    --debug --endian=little --cpu=Cortex-M4 -e               #
#                    --fpu=VFPv4_sp --dlib_config "C:\Tools\IAR               #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I "C:\Tools\IAR Systems\Embedded Workbench         #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\..\Platform\COMMO #
#                    N\INC\" -I "C:\Tools\IAR Systems\Embedded Workbench      #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\..\Platform\TaeHa #
#                     - ECS\INC\" -I "C:\Tools\IAR Systems\Embedded           #
#                    Workbench 6.5\WorkSpace\WL9F_Monitor_APP\Project\..\Libr #
#                    aries\CMSIS\Device\ST\STM32F4xx\Include\" -I             #
#                    "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\..\Libraries\STM3 #
#                    2F4xx_StdPeriph_Driver\inc\" -Oh --use_c++_inline -I     #
#                    "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Tools\IAR Systems\Embedded Workbench                  #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\Debug\List\LAMP_C #
#                    ontrol.lst                                               #
#    Object file  =  C:\Tools\IAR Systems\Embedded Workbench                  #
#                    6.5\WorkSpace\WL9F_Monitor_APP\Project\Debug\Obj\LAMP_Co #
#                    ntrol.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Tools\IAR Systems\Embedded Workbench 6.5\WorkSpace\WL9F_Monitor_APP\Platform\TaeHa - ECS\SRC\LAMP_Control.c
      1          /**
      2            ******************************************************************************
      3            * @file    LAMP_Control.c 
      4            * @author  kutelf (kutelf@taeha.co.kr)
      5            * @version V1.0.0
      6            * @date    02/22/2013
      7            * @brief   LAMP_Control.c module
      8            *
      9            * Project Name       : WL9F Monitor APP
     10            * Project Enviroment : IAREmbedded Workbench for ARM 6.5x 
     11            *                      STM32F407ZGT6 Firmware Library
     12            * Project Workspace  : WL9F_Monitor_APP
     13            * MCU Type           : STM32F407ZGT6
     14            *
     15            * TAEHA MECHATRONICS Co., Ltd (http://www.taeha.co.kr)				
     16            * ECS Division R&D Center. / Author by Young-Min Han (kutelf@taeha.co.kr)
     17            * 
     18            ******************************************************************************
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "WL9F_Monitor_APP.h"	
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          /* Private macro -------------------------------------------------------------*/
     27          /* Private variables ---------------------------------------------------------*/
     28          u8 Lamp_name;
     29          u8 Lamp_Value;
     30          /* Private function prototypes -----------------------------------------------*/
     31          /* Private functions ---------------------------------------------------------*/
     32          
     33          //------------------------------------------------------------------------------
     34          // Function Name	: Lamp_Update_System
     35          // Description 		: Lamp 제어
     36          // Input 			: Symbol_state
     37          // Return 			: None
     38          // Period 			: 초기화시 , 100ms
     39          //------------------------------------------------------------------------------
     40           void Lamp_Update_System(void)
     41          {
     42          	unsigned long temp;
     43          	unsigned short i;
     44          
     45          	// SIG
     46          	temp = 0x400000;
     47          
     48          	for ( i = 0 ; i < 23 ; i++)
     49          	{  
     50          		if ( LAMP_Update_Data & temp )
     51          			C_LAMP_SDATA_HIGH();
     52          		else	
     53          			C_LAMP_SDATA_LOW();
     54          
     55          		C_LAMP_SCLK_HIGH();		
     56          		TimeDelay_msec(1);
     57          		C_LAMP_SCLK_LOW();
     58          
     59          		temp = temp >> 1;
     60          	}
     61          
     62          	C_LAMP_SLCLK_HIGH();	
     63          	TimeDelay_msec(1);
     64          	C_LAMP_SLCLK_LOW();		
     65          	TimeDelay_msec(1);
     66          	C_LAMP_SLCLK_HIGH();
     67          }
     68          
     69          
     70          //	10msec 마다 실행해야된다.
     71          void Lamp_Update_State(void)
     72          {
     73          	switch(Lamp_name)
     74          	{
     75          		case CMD_Ride_Control_Lamp :
     76          			LAMP_Update_Data &=~(Ride_Control_Lamp_Off);
     77          			if(Lamp_Value==1)		LAMP_Update_Data |=Ride_Control_Manual_Lamp;
     78          			else if(Lamp_Value==2)	LAMP_Update_Data |=Ride_Control_Auto_Lamp;
     79          			break;
     80          		case CMD_Quick_Coupler_Lamp :
     81          			LAMP_Update_Data &=~(Quick_Coupler_Lamp_Off);
     82          			if(Lamp_Value==1)		LAMP_Update_Data |=Quick_Coupler_Lock_Lamp;
     83          			else if(Lamp_Value==2)	LAMP_Update_Data |=Quick_Coupler_UnLock_Lamp;
     84          			break;
     85          		case CMD_Auto_Grease_Lamp :
     86          			LAMP_Update_Data &=~(Auto_Grease_Lamp_Off);
     87          			if(Lamp_Value==1)		LAMP_Update_Data |=Auto_Grease_Manual_Lamp;
     88          			else if(Lamp_Value==2)	LAMP_Update_Data |=Auto_Grease_Auto_Lamp;
     89          			break;
     90          		case CMD_Beacon_Lamp :
     91          			if(Lamp_Value==0)		LAMP_Update_Data &=~(Beacon_Lamp);
     92          			else if(Lamp_Value==1)	LAMP_Update_Data |=Beacon_Lamp;
     93          			break;
     94          		case CMD_Mirror_Heat_Lamp :
     95          			if(Lamp_Value==0)		LAMP_Update_Data &=~(Mirror_Heat_Lamp);
     96          			else if(Lamp_Value==1)	LAMP_Update_Data |=Mirror_Heat_Lamp;
     97          			break;
     98          		case CMD_Rear_Wiper_Lamp :
     99          			if(Lamp_Value==0)		LAMP_Update_Data &=~(Rear_Wiper_Lamp);
    100          			else if(Lamp_Value==1)	LAMP_Update_Data |=Rear_Wiper_Lamp;
    101          			break;
    102          	}
    103          }
    104          
    105          /**
    106            * @brief  LAMP Initialize 
    107            * @param  
    108            * @retval None
    109            */
    110          void LAMP_Control_Init(void)
    111          {
    112          	DebugMsg_printf("++ LAMP Initialize START\r\n");
    113          
    114          	//  LAMP GPIO는 System_Init.c 에서 설정
    115          #if 0
    116          	GPIO_InitStructure.GPIO_Pin   = LAMP_CLR | LAMP_SLCLK | LAMP_SCLK | LAMP_SDATA;
    117          	GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;   
    118          	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
    119          	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
    120          	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    121          	GPIO_Init(LAMP_PORT, &GPIO_InitStructure);
    122          #endif
    123          
    124          	GPIO_WriteBit(LAMP_PORT, LAMP_CLR, Bit_SET);
    125          	TimeDelay_msec(10);
    126          	GPIO_WriteBit(LAMP_PORT, LAMP_CLR, Bit_RESET);
    127          
    128          	LAMP_Update_Data = LAMP_ALL_ON;
    129          
    130          	Lamp_Update_System();
    131          
    132          	DebugMsg_printf("-- LAMP Initialize END\r\n");
    133          }
    134          
    135          /*********(C) COPYRIGHT 2010 TaeHa Mechatronics Co., Ltd. *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   LAMP_Control_Init
         8   -> GPIO_WriteBit
         0   -> Lamp_Update_System
         8   -> TimeDelay_msec
       0   Lamp_Update_State
      24   Lamp_Update_System
         0   -> GPIO_WriteBit
        24   -> GPIO_WriteBit
        24   -> TimeDelay_msec


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
      46  LAMP_Control_Init
     202  Lamp_Update_State
     120  Lamp_Update_System
       2  Lamp_name
          Lamp_Value

 
   2 bytes in section .bss
 384 bytes in section .text
 
 384 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
