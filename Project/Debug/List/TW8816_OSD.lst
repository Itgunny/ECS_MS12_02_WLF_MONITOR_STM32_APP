###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      21/Dec/2017  14:06:16 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pla #
#                    tform\TaeHa - ECS\SRC\TW8816_OSD.c                       #
#    Command line =  "D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pl #
#                    atform\TaeHa - ECS\SRC\TW8816_OSD.c" -D                  #
#                    USE_STDPERIPH_DRIVER -D STM32F4XX -D USE_STM324xG_EVAL   #
#                    -D USE_FULL_ASSERT -lcN D:\GIT\WLF_MONITOR\ECS_MS12_02_W #
#                    LF_MONITOR_STM32_APP\Project\Debug\List\ -o              #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\Debug\Obj\ --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=VFPv4_sp --dlib_config "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.5\arm\INC\c\DLib_Config_Full.h" -I                     #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\..\Platform\COMMON\INC\ -I                          #
#                    "D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pr #
#                    oject\..\Platform\TaeHa - ECS\INC\" -I                   #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\ -I  #
#                    D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\ -Oh    #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.5\arm\CMSIS\Include\"       #
#    List file    =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\Debug\List\TW8816_OSD.lst                           #
#    Object file  =  D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Pro #
#                    ject\Debug\Obj\TW8816_OSD.o                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\GIT\WLF_MONITOR\ECS_MS12_02_WLF_MONITOR_STM32_APP\Platform\TaeHa - ECS\SRC\TW8816_OSD.c
      1          /**
      2          ******************************************************************************
      3          * @file    TW8816_OSD.c 
      4          * @author  kutelf (kutelf@taeha.co.kr)
      5          * @version V1.0.0
      6          * @date    02/22/2013
      7          * @brief   TW8816_OSD.c module
      8          *
      9          * Project Name       : WL9F Monitor APP
     10          * Project Enviroment : IAREmbedded Workbench for ARM 6.5x 
     11          *                      STM32F407ZGT6 Firmware Library
     12          * Project Workspace  : WL9F_Monitor_APP
     13          * MCU Type           : STM32F407ZGT6
     14          *
     15          * TAEHA MECHATRONICS Co., Ltd (http://www.taeha.co.kr)				
     16          * ECS Division R&D Center. / Author by Young-Min Han (kutelf@taeha.co.kr)
     17          * 
     18          ******************************************************************************
     19          */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "WL9F_Monitor_APP.h"	
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          /* Private macro -------------------------------------------------------------*/
     27          /* Private variables ---------------------------------------------------------*/
     28          /* Private function prototypes -----------------------------------------------*/
     29          /* Private functions ---------------------------------------------------------*/
     30          #if 1
     31          void SetFontOSDWindow(void)
     32          {
     33            WriteTW8816(0xff, 0x00);
     34            DownloadUDFont();
     35            /*
     36            WriteTW8816(0x94, 0x00);
     37            WriteTW8816(0x9e, 0x00);
     38            WriteTW8816(0x9f, 0x01);
     39            WriteTW8816(0xa0, 0x00);
     40            WriteTW8816(0xa1, 0x00);
     41            WriteTW8816(0xa2, 0x00);
     42            WriteTW8816(0xa3, 0x22);
     43            WriteTW8816(0xa4, 0x0e);
     44            WriteTW8816(0xa5, 0x32);
     45            WriteTW8816(0xa6, 0x00);
     46            WriteTW8816(0xa7, 0x00);
     47            WriteTW8816(0xa8, 0x00);
     48            WriteTW8816(0xa9, 0x50);
     49            WriteTW8816(0xaa, 0x00);
     50            WriteTW8816(0xab, 0x55);
     51            WriteTW8816(0xac, 0x0f);
     52            WriteTW8816(0xad, 0x00);
     53            WriteTW8816(0xae, 0x00);
     54            */
     55            
     56            WriteTW8816(0x94, 0x02);
     57            WriteTW8816(0x94, 0x00);
     58            
     59          }
     60          
     61          void SetDisplayCH1(void)
     62          {
     63            WriteTW8816(0xff, 0x00);
     64            
     65            WriteTW8816(0x94, 0x00);
     66            WriteTW8816(0x95, 0x80);
     67            WriteTW8816(0x96, 0x1C);
     68            WriteTW8816(0x97, 0x43);
     69            WriteTW8816(0x98, 0x06);
     70            
     71            WriteTW8816(0x94, 0x00);
     72            WriteTW8816(0x95, 0x80);
     73            WriteTW8816(0x96, 0x1D);
     74            WriteTW8816(0x97, 0x48);
     75            WriteTW8816(0x98, 0x06);
     76            
     77            WriteTW8816(0x94, 0x00);
     78            WriteTW8816(0x95, 0x80);
     79            WriteTW8816(0x96, 0x1E);
     80            WriteTW8816(0x97, 0x31);
     81            WriteTW8816(0x98, 0x06);
     82             
     83          }
     84          
     85          void SetDisplayCH2(void)
     86          {
     87            WriteTW8816(0xff, 0x00);
     88            
     89            WriteTW8816(0x94, 0x00);
     90            WriteTW8816(0x95, 0x80);
     91            WriteTW8816(0x96, 0x1c);
     92            WriteTW8816(0x97, 0x43);
     93            WriteTW8816(0x98, 0x06);
     94            
     95            WriteTW8816(0x94, 0x00);
     96            WriteTW8816(0x95, 0x80);
     97            WriteTW8816(0x96, 0x1d);
     98            WriteTW8816(0x97, 0x48);
     99            WriteTW8816(0x98, 0x06);
    100            
    101            WriteTW8816(0x94, 0x00);
    102            WriteTW8816(0x95, 0x80);
    103            WriteTW8816(0x96, 0x1e);
    104            WriteTW8816(0x97, 0x32);
    105            WriteTW8816(0x98, 0x06);
    106          }
    107          
    108          void SetDisplayCH3(void)
    109          {
    110            WriteTW8816(0xff, 0x00);
    111            
    112            WriteTW8816(0x94, 0x00);
    113            WriteTW8816(0x95, 0x80);
    114            WriteTW8816(0x96, 0x1c);
    115            WriteTW8816(0x97, 0x43);
    116            WriteTW8816(0x98, 0x06);
    117            
    118            WriteTW8816(0x94, 0x00);
    119            WriteTW8816(0x95, 0x80);
    120            WriteTW8816(0x96, 0x1d);
    121            WriteTW8816(0x97, 0x48);
    122            WriteTW8816(0x98, 0x06);
    123            
    124            WriteTW8816(0x94, 0x00);
    125            WriteTW8816(0x95, 0x80);
    126            WriteTW8816(0x96, 0x1e);
    127            WriteTW8816(0x97, 0x33);
    128            WriteTW8816(0x98, 0x06);
    129          }
    130          
    131          void SetDisplayCH4(void)
    132          {
    133            WriteTW8816(0xff, 0x00);
    134            
    135            WriteTW8816(0x94, 0x00);
    136            WriteTW8816(0x95, 0x80);
    137            WriteTW8816(0x96, 0x1c);
    138            WriteTW8816(0x97, 0x43);
    139            WriteTW8816(0x98, 0x06);
    140            
    141            WriteTW8816(0x94, 0x00);
    142            WriteTW8816(0x95, 0x80);
    143            WriteTW8816(0x96, 0x1d);
    144            WriteTW8816(0x97, 0x48);
    145            WriteTW8816(0x98, 0x06);
    146            
    147            WriteTW8816(0x94, 0x00);
    148            WriteTW8816(0x95, 0x80);
    149            WriteTW8816(0x96, 0x1e);
    150            WriteTW8816(0x97, 0x34);
    151            WriteTW8816(0x98, 0x06);
    152            
    153          }
    154          
    155          void SetDisplayCHBlank(void)
    156          {
    157            WriteTW8816(0xff, 0x00);
    158            
    159            WriteTW8816(0x94, 0x00);
    160            WriteTW8816(0x95, 0x80);
    161            WriteTW8816(0x96, 0x1c);
    162            WriteTW8816(0x97, 0x20);
    163            WriteTW8816(0x98, 0x06);
    164            
    165            WriteTW8816(0x94, 0x00);
    166            WriteTW8816(0x95, 0x80);
    167            WriteTW8816(0x96, 0x1d);
    168            WriteTW8816(0x97, 0x20);
    169            WriteTW8816(0x98, 0x06);
    170            
    171            WriteTW8816(0x94, 0x00);
    172            WriteTW8816(0x95, 0x80);
    173            WriteTW8816(0x96, 0x1e);
    174            WriteTW8816(0x97, 0x20);
    175            WriteTW8816(0x98, 0x08);
    176          }
    177          
    178          void SetDisplayNosignal(void)
    179          {
    180            
    181          /*    if(AAVMEquipFlag == 0){
    182                SetDisplayBlankRedGuideLine();
    183                SetDisplayBlankGreenGuideLine();
    184              }*/
    185            WriteTW8816(0xff, 0x00);
    186              
    187            WriteTW8816(0x94, 0x00);
    188            WriteTW8816(0x95, 0x80);
    189            WriteTW8816(0x96, 0xd8);
    190            WriteTW8816(0x97, 0x4e);
    191            WriteTW8816(0x98, 0x06);
    192            
    193            WriteTW8816(0x94, 0x00);
    194            WriteTW8816(0x95, 0x80);
    195            WriteTW8816(0x96, 0xd9);
    196            WriteTW8816(0x97, 0x4f);
    197            WriteTW8816(0x98, 0x06);
    198            
    199            WriteTW8816(0x94, 0x00);
    200            WriteTW8816(0x95, 0x80);
    201            WriteTW8816(0x96, 0xda);
    202            WriteTW8816(0x97, 0x20);
    203            WriteTW8816(0x98, 0x06);
    204            
    205            WriteTW8816(0x94, 0x00);
    206            WriteTW8816(0x95, 0x80);
    207            WriteTW8816(0x96, 0xdb);
    208            WriteTW8816(0x97, 0x53);
    209            WriteTW8816(0x98, 0x06);
    210            
    211            WriteTW8816(0x94, 0x00);
    212            WriteTW8816(0x95, 0x80);
    213            WriteTW8816(0x96, 0xdc);
    214            WriteTW8816(0x97, 0x49);
    215            WriteTW8816(0x98, 0x06);
    216            
    217            WriteTW8816(0x94, 0x00);
    218            WriteTW8816(0x95, 0x80);
    219            WriteTW8816(0x96, 0xdd);
    220            WriteTW8816(0x97, 0x47);
    221            WriteTW8816(0x98, 0x06);
    222            
    223            WriteTW8816(0x94, 0x00);
    224            WriteTW8816(0x95, 0x80);
    225            WriteTW8816(0x96, 0xde);
    226            WriteTW8816(0x97, 0x4e);
    227            WriteTW8816(0x98, 0x06);
    228            
    229            WriteTW8816(0x94, 0x00);
    230            WriteTW8816(0x95, 0x80);
    231            WriteTW8816(0x96, 0xdf);
    232            WriteTW8816(0x97, 0x41);
    233            WriteTW8816(0x98, 0x06);
    234            
    235            WriteTW8816(0x94, 0x00);
    236            WriteTW8816(0x95, 0x80);
    237            WriteTW8816(0x96, 0xe0);
    238            WriteTW8816(0x97, 0x4c);
    239            WriteTW8816(0x98, 0x06);
    240          
    241          }
    242          
    243          void SetDisplayNosignalBlank(void)
    244          {
    245            if(AAVMEquipFlag == 0) {
    246              if(Camera_Green_Line == 0) {
    247                SetDisplayGreenGuideLine();
    248                SetDisplayRedGuideLine();
    249              } else {
    250                SetDisplayBlankGreenGuideLine();
    251                SetDisplayBlankRedGuideLine();
    252              }
    253                
    254              SetGreenLineIcon();
    255            } else {
    256              SetDisplayNosignalBlankAAVM();
    257            }
    258          }
    259          
    260          
    261          void SetDisplayNosignalBlankAAVM(void)
    262          {
    263          	WriteTW8816(0xff, 0x00);
    264          
    265            WriteTW8816(0x94, 0x00);
    266          	WriteTW8816(0x95, 0x80);
    267          	WriteTW8816(0x96, 0xd8);
    268          	WriteTW8816(0x97, 0x20);
    269          	WriteTW8816(0x98, 0x06);
    270          
    271            WriteTW8816(0x94, 0x00);
    272          	WriteTW8816(0x95, 0x80);
    273          	WriteTW8816(0x96, 0xd9);
    274          	WriteTW8816(0x97, 0x20);
    275          	WriteTW8816(0x98, 0x06);
    276          
    277            WriteTW8816(0x94, 0x00);
    278          	WriteTW8816(0x95, 0x80);
    279          	WriteTW8816(0x96, 0xda);
    280          	WriteTW8816(0x97, 0x20);
    281          	WriteTW8816(0x98, 0x06);
    282          
    283            WriteTW8816(0x94, 0x00);
    284          	WriteTW8816(0x95, 0x80);
    285          	WriteTW8816(0x96, 0xdb);
    286          	WriteTW8816(0x97, 0x20);
    287          	WriteTW8816(0x98, 0x06);
    288          
    289            WriteTW8816(0x94, 0x00);
    290          	WriteTW8816(0x95, 0x80);
    291          	WriteTW8816(0x96, 0xdc);
    292          	WriteTW8816(0x97, 0x20);
    293          	WriteTW8816(0x98, 0x06);
    294          
    295            WriteTW8816(0x94, 0x00);
    296          	WriteTW8816(0x95, 0x80);
    297          	WriteTW8816(0x96, 0xdd);
    298          	WriteTW8816(0x97, 0x20);
    299          	WriteTW8816(0x98, 0x06);
    300          
    301            WriteTW8816(0x94, 0x00);
    302          	WriteTW8816(0x95, 0x80);
    303          	WriteTW8816(0x96, 0xde);
    304          	WriteTW8816(0x97, 0x20);
    305          	WriteTW8816(0x98, 0x06);
    306          
    307            WriteTW8816(0x94, 0x00);
    308          	WriteTW8816(0x95, 0x80);
    309          	WriteTW8816(0x96, 0xdf);
    310          	WriteTW8816(0x97, 0x20);
    311          	WriteTW8816(0x98, 0x06);
    312          
    313            WriteTW8816(0x94, 0x00);
    314          	WriteTW8816(0x95, 0x80);
    315          	WriteTW8816(0x96, 0xe0);
    316          	WriteTW8816(0x97, 0x20);
    317          	WriteTW8816(0x98, 0x06);
    318          	
    319          }
    320          void SetDisplayGreenGuideLine(void) {
    321            u8 i;
    322            WriteTW8816(0xff, 0x00);
    323            for(i = 0; i < 11; i++) {
    324               WriteTW8816(0x94, 0x80);
    325               WriteTW8816(0x95, 0x80);
    326               WriteTW8816(0x96, (i + 0xd7));
    327               WriteTW8816(0x97, 0xb4);
    328               WriteTW8816(0x98, 0x02);
    329            }
    330          }
    331          // 5a - 7c
    332          void SetDisplayRedGuideLine(void) {
    333            u8 i;
    334            WriteTW8816(0xff, 0x00);
    335            for(i = 0; i < 22; i++) {
    336               WriteTW8816(0x94, 0x80);
    337               WriteTW8816(0x95, 0x81);
    338               WriteTW8816(0x96, (i + 0x59));
    339               WriteTW8816(0x97, 0xb4);
    340               WriteTW8816(0x98, 0x04);
    341            }
    342          }
    343          
    344          void SetDisplayBlankGreenGuideLine(void) {
    345            u8 i;
    346            WriteTW8816(0xff, 0x00);
    347            
    348            for(i = 0; i < 11; i++) {
    349               WriteTW8816(0x94, 0x00);
    350               WriteTW8816(0x95, 0x80);
    351               WriteTW8816(0x96, (i + 0xd7));
    352               WriteTW8816(0x97, 0x20);
    353               WriteTW8816(0x98, 0x02);
    354            }
    355          }
    356          
    357          void SetDisplayBlankRedGuideLine(void) {
    358            u8 i;
    359            WriteTW8816(0xff, 0x00);
    360            for(i = 0; i < 22; i++) {
    361               WriteTW8816(0x94, 0x00);
    362               WriteTW8816(0x95, 0x81);
    363               WriteTW8816(0x96, (i + 0x59));
    364               WriteTW8816(0x97, 0x20);
    365               WriteTW8816(0x98, 0x04);
    366            }
    367          }
    368          void SetDisplayWarning(void)
    369          {
    370            u8 i;
    371            WriteTW8816(0x94, 0x02);
    372            for(i = 0; i < 27; i++){
    373              WriteTW8816(0x94, 0x80);
    374              WriteTW8816(0x95, 0x81);
    375              WriteTW8816(0x96, (i + 0x9b));
    376              WriteTW8816(0x97, (i + 0x7B));
    377              WriteTW8816(0x98, 0x06);    
    378            }
    379          }
    380          
    381          void SetDisplayIcon(void){  
    382            // X
    383            // 0x094[7] == 1 RAM / OX094[7] == 0 ROM
    384            SetDisplayCHBlank();
    385            
    386            SetChangeXIcon();
    387            // SPEAKER
    388            SetChangeSpeakerIcon();
    389            
    390            SetChange4ChannelView();
    391            
    392            SetChangeFrontView();
    393            
    394            SetChangeLeftView();
    395            
    396            SetChangeBackView();
    397            
    398            SetChangeRightView();
    399            
    400            SetChange3DBirdView();
    401            
    402            SetChange3DRearView();
    403            
    404            SetChange2DBirdView();
    405            
    406            SetChange3DLeftView();
    407            
    408            SetChange3DRightView();
    409            
    410          }
    411          void SetGreenLineIcon(void) {
    412            if(Camera_Green_Line == 0) {
    413              WriteTW8816(0x94, 0x80);
    414              WriteTW8816(0x95, 0x80);
    415              WriteTW8816(0x96, 0x01);
    416              WriteTW8816(0x97, 0xb6);
    417              WriteTW8816(0x98, 0x02);
    418              
    419              WriteTW8816(0x94, 0x80);
    420              WriteTW8816(0x95, 0x80);
    421              WriteTW8816(0x96, 0x02);
    422              WriteTW8816(0x97, 0xb7);
    423              WriteTW8816(0x98, 0x02);
    424              
    425              WriteTW8816(0x94, 0x80);
    426              WriteTW8816(0x95, 0x80);
    427              WriteTW8816(0x96, 0x23);
    428              WriteTW8816(0x97, 0xb8);
    429              WriteTW8816(0x98, 0x02);
    430              
    431              WriteTW8816(0x94, 0x80);
    432              WriteTW8816(0x95, 0x80);
    433              WriteTW8816(0x96, 0x24);
    434              WriteTW8816(0x97, 0xb9);
    435              WriteTW8816(0x98, 0x02);
    436            } else {
    437              WriteTW8816(0x94, 0x80);
    438              WriteTW8816(0x95, 0x80);
    439              WriteTW8816(0x96, 0x01);
    440              WriteTW8816(0x97, 0xba);
    441              WriteTW8816(0x98, 0x02);
    442              
    443              WriteTW8816(0x94, 0x80);
    444              WriteTW8816(0x95, 0x80);
    445              WriteTW8816(0x96, 0x02);
    446              WriteTW8816(0x97, 0xbb);
    447              WriteTW8816(0x98, 0x02);
    448              
    449              WriteTW8816(0x94, 0x80);
    450              WriteTW8816(0x95, 0x80);
    451              WriteTW8816(0x96, 0x23);
    452              WriteTW8816(0x97, 0xbc);
    453              WriteTW8816(0x98, 0x02);
    454              
    455              WriteTW8816(0x94, 0x80);
    456              WriteTW8816(0x95, 0x80);
    457              WriteTW8816(0x96, 0x24);
    458              WriteTW8816(0x97, 0xbd);
    459              WriteTW8816(0x98, 0x02);  
    460            }
    461          }
    462          
    463          void SetGreenBlankLineIcon(void) {
    464              WriteTW8816(0x94, 0x00);
    465              WriteTW8816(0x95, 0x80);
    466              WriteTW8816(0x96, 0x01);
    467              WriteTW8816(0x97, 0x20);
    468              WriteTW8816(0x98, 0x02);
    469              
    470              WriteTW8816(0x94, 0x00);
    471              WriteTW8816(0x95, 0x80);
    472              WriteTW8816(0x96, 0x02);
    473              WriteTW8816(0x97, 0x20);
    474              WriteTW8816(0x98, 0x02);
    475              
    476              WriteTW8816(0x94, 0x00);
    477              WriteTW8816(0x95, 0x80);
    478              WriteTW8816(0x96, 0x23);
    479              WriteTW8816(0x97, 0x20);
    480              WriteTW8816(0x98, 0x02);
    481              
    482              WriteTW8816(0x94, 0x00);
    483              WriteTW8816(0x95, 0x80);
    484              WriteTW8816(0x96, 0x24);
    485              WriteTW8816(0x97, 0x20);
    486              WriteTW8816(0x98, 0x02);
    487          }
    488          void SetChangeXIcon(void){
    489            if(AAVM_Menu_Flag == 0) {
    490              WriteTW8816(0x94, 0x80);
    491              WriteTW8816(0x95, 0x80);
    492              WriteTW8816(0x96, 0x01);
    493              WriteTW8816(0x97, 0x00);
    494              WriteTW8816(0x98, 0x06);
    495              
    496              WriteTW8816(0x94, 0x80);
    497              WriteTW8816(0x95, 0x80);
    498              WriteTW8816(0x96, 0x02);
    499              WriteTW8816(0x97, 0x01);
    500              WriteTW8816(0x98, 0x06);
    501              
    502              WriteTW8816(0x94, 0x80);
    503              WriteTW8816(0x95, 0x80);
    504              WriteTW8816(0x96, 0x23);
    505              WriteTW8816(0x97, 0x02);
    506              WriteTW8816(0x98, 0x06);
    507              
    508              WriteTW8816(0x94, 0x80);
    509              WriteTW8816(0x95, 0x80);
    510              WriteTW8816(0x96, 0x24);
    511              WriteTW8816(0x97, 0x03);
    512              WriteTW8816(0x98, 0x06);
    513            } else {
    514              WriteTW8816(0x94, 0x00);
    515              WriteTW8816(0x95, 0x80);
    516              WriteTW8816(0x96, 0x01);
    517              WriteTW8816(0x97, 0x20);
    518              WriteTW8816(0x98, 0x06);
    519              
    520              WriteTW8816(0x94, 0x00);
    521              WriteTW8816(0x95, 0x80);
    522              WriteTW8816(0x96, 0x02);
    523              WriteTW8816(0x97, 0x20);
    524              WriteTW8816(0x98, 0x06);
    525              
    526              WriteTW8816(0x94, 0x00);
    527              WriteTW8816(0x95, 0x80);
    528              WriteTW8816(0x96, 0x23);
    529              WriteTW8816(0x97, 0x20);
    530              WriteTW8816(0x98, 0x06);
    531              
    532              WriteTW8816(0x94, 0x00);
    533              WriteTW8816(0x95, 0x80);
    534              WriteTW8816(0x96, 0x24);
    535              WriteTW8816(0x97, 0x20);
    536              WriteTW8816(0x98, 0x06);
    537            }
    538          }
    539          void SetChangeFrontView(void){
    540            if(AAVM_Menu_Flag == 0) {
    541              if(AAVM_Camera_Icon_Index == 4){
    542                if(AAVM_Warning_Front == 1){
    543                  WriteTW8816(0x94, 0x80);
    544                  WriteTW8816(0x95, 0x80);
    545                  WriteTW8816(0x96, 0x1E);
    546                  WriteTW8816(0x97, 0x78);
    547                  WriteTW8816(0x98, 0x04);
    548                  
    549                  WriteTW8816(0x94, 0x80);
    550                  WriteTW8816(0x95, 0x80);
    551                  WriteTW8816(0x96, 0x1F);
    552                  WriteTW8816(0x97, 0x79);
    553                  WriteTW8816(0x98, 0x04);
    554                  
    555                  WriteTW8816(0x94, 0x80);
    556                  WriteTW8816(0x95, 0x80);
    557                  WriteTW8816(0x96, 0x20);
    558                  WriteTW8816(0x97, 0x7A);
    559                  WriteTW8816(0x98, 0x04);
    560                  
    561                  WriteTW8816(0x94, 0x80);
    562                  WriteTW8816(0x95, 0x80);
    563                  WriteTW8816(0x96, 0x40);
    564                  WriteTW8816(0x97, 0x7B);
    565                  WriteTW8816(0x98, 0x04);
    566                  
    567                  WriteTW8816(0x94, 0x80);
    568                  WriteTW8816(0x95, 0x80);
    569                  WriteTW8816(0x96, 0x41);
    570                  WriteTW8816(0x97, 0x7C);
    571                  WriteTW8816(0x98, 0x04);
    572                  
    573                  WriteTW8816(0x94, 0x80);
    574                  WriteTW8816(0x95, 0x80);
    575                  WriteTW8816(0x96, 0x42);
    576                  WriteTW8816(0x97, 0x7D);
    577                  WriteTW8816(0x98, 0x04);
    578                }else {
    579                  WriteTW8816(0x94, 0x80);
    580                  WriteTW8816(0x95, 0x80);
    581                  WriteTW8816(0x96, 0x1E);
    582                  WriteTW8816(0x97, 0x78);
    583                  WriteTW8816(0x98, 0x06);
    584                  
    585                  WriteTW8816(0x94, 0x80);
    586                  WriteTW8816(0x95, 0x80);
    587                  WriteTW8816(0x96, 0x1F);
    588                  WriteTW8816(0x97, 0x79);
    589                  WriteTW8816(0x98, 0x06);
    590                  
    591                  WriteTW8816(0x94, 0x80);
    592                  WriteTW8816(0x95, 0x80);
    593                  WriteTW8816(0x96, 0x20);
    594                  WriteTW8816(0x97, 0x7A);
    595                  WriteTW8816(0x98, 0x06);
    596                  
    597                  WriteTW8816(0x94, 0x80);
    598                  WriteTW8816(0x95, 0x80);
    599                  WriteTW8816(0x96, 0x40);
    600                  WriteTW8816(0x97, 0x7B);
    601                  WriteTW8816(0x98, 0x06);
    602                  
    603                  WriteTW8816(0x94, 0x80);
    604                  WriteTW8816(0x95, 0x80);
    605                  WriteTW8816(0x96, 0x41);
    606                  WriteTW8816(0x97, 0x7C);
    607                  WriteTW8816(0x98, 0x06);
    608                  
    609                  WriteTW8816(0x94, 0x80);
    610                  WriteTW8816(0x95, 0x80);
    611                  WriteTW8816(0x96, 0x42);
    612                  WriteTW8816(0x97, 0x7D);
    613                  WriteTW8816(0x98, 0x06);
    614                }
    615              } else {
    616                if(AAVM_Warning_Front == 1){
    617                  WriteTW8816(0x94, 0x80);
    618                  WriteTW8816(0x95, 0x80);
    619                  WriteTW8816(0x96, 0x1E);
    620                  WriteTW8816(0x97, 0x0C);
    621                  WriteTW8816(0x98, 0x04);
    622                  
    623                  WriteTW8816(0x94, 0x80);
    624                  WriteTW8816(0x95, 0x80);
    625                  WriteTW8816(0x96, 0x1F);
    626                  WriteTW8816(0x97, 0x0D);
    627                  WriteTW8816(0x98, 0x04);
    628                  
    629                  WriteTW8816(0x94, 0x80);
    630                  WriteTW8816(0x95, 0x80);
    631                  WriteTW8816(0x96, 0x20);
    632                  WriteTW8816(0x97, 0x0E);
    633                  WriteTW8816(0x98, 0x04);
    634                  
    635                  WriteTW8816(0x94, 0x80);
    636                  WriteTW8816(0x95, 0x80);
    637                  WriteTW8816(0x96, 0x40);
    638                  WriteTW8816(0x97, 0x0F);
    639                  WriteTW8816(0x98, 0x04);
    640                  
    641                  WriteTW8816(0x94, 0x80);
    642                  WriteTW8816(0x95, 0x80);
    643                  WriteTW8816(0x96, 0x41);
    644                  WriteTW8816(0x97, 0x10);
    645                  WriteTW8816(0x98, 0x04);
    646                  
    647                  WriteTW8816(0x94, 0x80);
    648                  WriteTW8816(0x95, 0x80);
    649                  WriteTW8816(0x96, 0x42);
    650                  WriteTW8816(0x97, 0x11);
    651                  WriteTW8816(0x98, 0x04);
    652                } else {
    653                  WriteTW8816(0x94, 0x80);
    654                  WriteTW8816(0x95, 0x80);
    655                  WriteTW8816(0x96, 0x1E);
    656                  WriteTW8816(0x97, 0x0C);
    657                  WriteTW8816(0x98, 0x06);
    658                  
    659                  WriteTW8816(0x94, 0x80);
    660                  WriteTW8816(0x95, 0x80);
    661                  WriteTW8816(0x96, 0x1F);
    662                  WriteTW8816(0x97, 0x0D);
    663                  WriteTW8816(0x98, 0x06);
    664                  
    665                  WriteTW8816(0x94, 0x80);
    666                  WriteTW8816(0x95, 0x80);
    667                  WriteTW8816(0x96, 0x20);
    668                  WriteTW8816(0x97, 0x0E);
    669                  WriteTW8816(0x98, 0x06);
    670                  
    671                  WriteTW8816(0x94, 0x80);
    672                  WriteTW8816(0x95, 0x80);
    673                  WriteTW8816(0x96, 0x40);
    674                  WriteTW8816(0x97, 0x0F);
    675                  WriteTW8816(0x98, 0x06);
    676                  
    677                  WriteTW8816(0x94, 0x80);
    678                  WriteTW8816(0x95, 0x80);
    679                  WriteTW8816(0x96, 0x41);
    680                  WriteTW8816(0x97, 0x10);
    681                  WriteTW8816(0x98, 0x06);
    682                  
    683                  WriteTW8816(0x94, 0x80);
    684                  WriteTW8816(0x95, 0x80);
    685                  WriteTW8816(0x96, 0x42);
    686                  WriteTW8816(0x97, 0x11);
    687                  WriteTW8816(0x98, 0x06);     
    688                }
    689              }
    690            } else {
    691              WriteTW8816(0x94, 0x00);
    692              WriteTW8816(0x95, 0x80);
    693              WriteTW8816(0x96, 0x1E);
    694              WriteTW8816(0x97, 0x20);
    695              WriteTW8816(0x98, 0x06);
    696              
    697              WriteTW8816(0x94, 0x00);
    698              WriteTW8816(0x95, 0x80);
    699              WriteTW8816(0x96, 0x1F);
    700              WriteTW8816(0x97, 0x20);
    701              WriteTW8816(0x98, 0x06);
    702              
    703              WriteTW8816(0x94, 0x00);
    704              WriteTW8816(0x95, 0x80);
    705              WriteTW8816(0x96, 0x20);
    706              WriteTW8816(0x97, 0x20);
    707              WriteTW8816(0x98, 0x06);
    708              
    709              WriteTW8816(0x94, 0x00);
    710              WriteTW8816(0x95, 0x80);
    711              WriteTW8816(0x96, 0x40);
    712              WriteTW8816(0x97, 0x20);
    713              WriteTW8816(0x98, 0x06);
    714              
    715              WriteTW8816(0x94, 0x00);
    716              WriteTW8816(0x95, 0x80);
    717              WriteTW8816(0x96, 0x41);
    718              WriteTW8816(0x97, 0x20);
    719              WriteTW8816(0x98, 0x06);
    720              
    721              WriteTW8816(0x94, 0x00);
    722              WriteTW8816(0x95, 0x80);
    723              WriteTW8816(0x96, 0x42);
    724              WriteTW8816(0x97, 0x20);
    725              WriteTW8816(0x98, 0x06);
    726              
    727            }
    728          }
    729          void SetChangeBackView(void){
    730            if(AAVM_Menu_Flag == 0) {
    731              if(AAVM_Camera_Icon_Index == 5){
    732                if(AAVM_Warning_Rear == 1){
    733                  WriteTW8816(0x94, 0x80);
    734                  WriteTW8816(0x95, 0x80);
    735                  WriteTW8816(0x96, 0x84);
    736                  WriteTW8816(0x97, 0x84);
    737                  WriteTW8816(0x98, 0x04);
    738                  
    739                  WriteTW8816(0x94, 0x80);
    740                  WriteTW8816(0x95, 0x80);
    741                  WriteTW8816(0x96, 0x85);
    742                  WriteTW8816(0x97, 0x85);
    743                  WriteTW8816(0x98, 0x04);
    744                  
    745                  WriteTW8816(0x94, 0x80);
    746                  WriteTW8816(0x95, 0x80);
    747                  WriteTW8816(0x96, 0x86);
    748                  WriteTW8816(0x97, 0x86);
    749                  WriteTW8816(0x98, 0x04);
    750                  
    751                  WriteTW8816(0x94, 0x80);
    752                  WriteTW8816(0x95, 0x80);
    753                  WriteTW8816(0x96, 0xA6);
    754                  WriteTW8816(0x97, 0x87);
    755                  WriteTW8816(0x98, 0x04);
    756                  
    757                  WriteTW8816(0x94, 0x80);
    758                  WriteTW8816(0x95, 0x80);
    759                  WriteTW8816(0x96, 0xA7);
    760                  WriteTW8816(0x97, 0x88);
    761                  WriteTW8816(0x98, 0x04);
    762                  
    763                  WriteTW8816(0x94, 0x80);
    764                  WriteTW8816(0x95, 0x80);
    765                  WriteTW8816(0x96, 0xA8);
    766                  WriteTW8816(0x97, 0x89);
    767                  WriteTW8816(0x98, 0x04);
    768                } else {
    769                  WriteTW8816(0x94, 0x80);
    770                  WriteTW8816(0x95, 0x80);
    771                  WriteTW8816(0x96, 0x84);
    772                  WriteTW8816(0x97, 0x84);
    773                  WriteTW8816(0x98, 0x06);
    774                  
    775                  WriteTW8816(0x94, 0x80);
    776                  WriteTW8816(0x95, 0x80);
    777                  WriteTW8816(0x96, 0x85);
    778                  WriteTW8816(0x97, 0x85);
    779                  WriteTW8816(0x98, 0x06);
    780                  
    781                  WriteTW8816(0x94, 0x80);
    782                  WriteTW8816(0x95, 0x80);
    783                  WriteTW8816(0x96, 0x86);
    784                  WriteTW8816(0x97, 0x86);
    785                  WriteTW8816(0x98, 0x06);
    786                  
    787                  WriteTW8816(0x94, 0x80);
    788                  WriteTW8816(0x95, 0x80);
    789                  WriteTW8816(0x96, 0xA6);
    790                  WriteTW8816(0x97, 0x87);
    791                  WriteTW8816(0x98, 0x06);
    792                  
    793                  WriteTW8816(0x94, 0x80);
    794                  WriteTW8816(0x95, 0x80);
    795                  WriteTW8816(0x96, 0xA7);
    796                  WriteTW8816(0x97, 0x88);
    797                  WriteTW8816(0x98, 0x06);
    798                  
    799                  WriteTW8816(0x94, 0x80);
    800                  WriteTW8816(0x95, 0x80);
    801                  WriteTW8816(0x96, 0xA8);
    802                  WriteTW8816(0x97, 0x89);
    803                  WriteTW8816(0x98, 0x06);
    804                }
    805              } else {
    806                if(AAVM_Warning_Rear == 1){
    807                  WriteTW8816(0x94, 0x80);
    808                  WriteTW8816(0x95, 0x80);
    809                  WriteTW8816(0x96, 0x84);
    810                  WriteTW8816(0x97, 0x18);
    811                  WriteTW8816(0x98, 0x04);
    812                  
    813                  WriteTW8816(0x94, 0x80);
    814                  WriteTW8816(0x95, 0x80);
    815                  WriteTW8816(0x96, 0x85);
    816                  WriteTW8816(0x97, 0x19);
    817                  WriteTW8816(0x98, 0x04);
    818                  
    819                  WriteTW8816(0x94, 0x80);
    820                  WriteTW8816(0x95, 0x80);
    821                  WriteTW8816(0x96, 0x86);
    822                  WriteTW8816(0x97, 0x1A);
    823                  WriteTW8816(0x98, 0x04);
    824                  
    825                  WriteTW8816(0x94, 0x80);
    826                  WriteTW8816(0x95, 0x80);
    827                  WriteTW8816(0x96, 0xA6);
    828                  WriteTW8816(0x97, 0x1B);
    829                  WriteTW8816(0x98, 0x04);
    830                  
    831                  WriteTW8816(0x94, 0x80);
    832                  WriteTW8816(0x95, 0x80);
    833                  WriteTW8816(0x96, 0xA7);
    834                  WriteTW8816(0x97, 0x1C);
    835                  WriteTW8816(0x98, 0x04);
    836                  
    837                  WriteTW8816(0x94, 0x80);
    838                  WriteTW8816(0x95, 0x80);
    839                  WriteTW8816(0x96, 0xA8);
    840                  WriteTW8816(0x97, 0x1D);
    841                  WriteTW8816(0x98, 0x04);
    842                }else {
    843                  WriteTW8816(0x94, 0x80);
    844                  WriteTW8816(0x95, 0x80);
    845                  WriteTW8816(0x96, 0x84);
    846                  WriteTW8816(0x97, 0x18);
    847                  WriteTW8816(0x98, 0x06);
    848                  
    849                  WriteTW8816(0x94, 0x80);
    850                  WriteTW8816(0x95, 0x80);
    851                  WriteTW8816(0x96, 0x85);
    852                  WriteTW8816(0x97, 0x19);
    853                  WriteTW8816(0x98, 0x06);
    854                  
    855                  WriteTW8816(0x94, 0x80);
    856                  WriteTW8816(0x95, 0x80);
    857                  WriteTW8816(0x96, 0x86);
    858                  WriteTW8816(0x97, 0x1A);
    859                  WriteTW8816(0x98, 0x06);
    860                  
    861                  WriteTW8816(0x94, 0x80);
    862                  WriteTW8816(0x95, 0x80);
    863                  WriteTW8816(0x96, 0xA6);
    864                  WriteTW8816(0x97, 0x1B);
    865                  WriteTW8816(0x98, 0x06);
    866                  
    867                  WriteTW8816(0x94, 0x80);
    868                  WriteTW8816(0x95, 0x80);
    869                  WriteTW8816(0x96, 0xA7);
    870                  WriteTW8816(0x97, 0x1C);
    871                  WriteTW8816(0x98, 0x06);
    872                  
    873                  WriteTW8816(0x94, 0x80);
    874                  WriteTW8816(0x95, 0x80);
    875                  WriteTW8816(0x96, 0xA8);
    876                  WriteTW8816(0x97, 0x1D);
    877                  WriteTW8816(0x98, 0x06);
    878                }
    879              }
    880            } else {
    881              WriteTW8816(0x94, 0x00);
    882              WriteTW8816(0x95, 0x80);
    883              WriteTW8816(0x96, 0x84);
    884              WriteTW8816(0x97, 0x20);
    885              WriteTW8816(0x98, 0x06);
    886              
    887              WriteTW8816(0x94, 0x00);
    888              WriteTW8816(0x95, 0x80);
    889              WriteTW8816(0x96, 0x85);
    890              WriteTW8816(0x97, 0x20);
    891              WriteTW8816(0x98, 0x06);
    892              
    893              WriteTW8816(0x94, 0x00);
    894              WriteTW8816(0x95, 0x80);
    895              WriteTW8816(0x96, 0x86);
    896              WriteTW8816(0x97, 0x20);
    897              WriteTW8816(0x98, 0x06);
    898              
    899              WriteTW8816(0x94, 0x00);
    900              WriteTW8816(0x95, 0x80);
    901              WriteTW8816(0x96, 0xA6);
    902              WriteTW8816(0x97, 0x20);
    903              WriteTW8816(0x98, 0x06);
    904              
    905              WriteTW8816(0x94, 0x00);
    906              WriteTW8816(0x95, 0x80);
    907              WriteTW8816(0x96, 0xA7);
    908              WriteTW8816(0x97, 0x20);
    909              WriteTW8816(0x98, 0x06);
    910              
    911              WriteTW8816(0x94, 0x00);
    912              WriteTW8816(0x95, 0x80);
    913              WriteTW8816(0x96, 0xA8);
    914              WriteTW8816(0x97, 0x20);
    915              WriteTW8816(0x98, 0x06);  
    916            }
    917          }
    918          
    919          void SetChangeLeftView(void){
    920            if(AAVM_Menu_Flag == 0) {
    921              if(AAVM_Camera_Icon_Index == 6){
    922                if(AAVM_Warning_Left == 1){
    923                  WriteTW8816(0x94, 0x80);
    924                  WriteTW8816(0x95, 0x80);
    925                  WriteTW8816(0x96, 0xEA);
    926                  WriteTW8816(0x97, 0x7E);
    927                  WriteTW8816(0x98, 0x04);
    928                  
    929                  WriteTW8816(0x94, 0x80);
    930                  WriteTW8816(0x95, 0x80);
    931                  WriteTW8816(0x96, 0xEB);
    932                  WriteTW8816(0x97, 0x7F);
    933                  WriteTW8816(0x98, 0x04);
    934                  
    935                  WriteTW8816(0x94, 0x80);
    936                  WriteTW8816(0x95, 0x80);
    937                  WriteTW8816(0x96, 0xEC);
    938                  WriteTW8816(0x97, 0x80);
    939                  WriteTW8816(0x98, 0x04);
    940                  
    941                  WriteTW8816(0x94, 0x80);
    942                  WriteTW8816(0x95, 0x81);
    943                  WriteTW8816(0x96, 0x0C);
    944                  WriteTW8816(0x97, 0x81);
    945                  WriteTW8816(0x98, 0x04);
    946                  
    947                  WriteTW8816(0x94, 0x80);
    948                  WriteTW8816(0x95, 0x81);
    949                  WriteTW8816(0x96, 0x0D);
    950                  WriteTW8816(0x97, 0x82);
    951                  WriteTW8816(0x98, 0x04);
    952                  
    953                  WriteTW8816(0x94, 0x80);
    954                  WriteTW8816(0x95, 0x81);
    955                  WriteTW8816(0x96, 0x0E);
    956                  WriteTW8816(0x97, 0x83);
    957                  WriteTW8816(0x98, 0x04);
    958                }else {
    959                  WriteTW8816(0x94, 0x80);
    960                  WriteTW8816(0x95, 0x80);
    961                  WriteTW8816(0x96, 0xEA);
    962                  WriteTW8816(0x97, 0x7E);
    963                  WriteTW8816(0x98, 0x06);
    964                  
    965                  WriteTW8816(0x94, 0x80);
    966                  WriteTW8816(0x95, 0x80);
    967                  WriteTW8816(0x96, 0xEB);
    968                  WriteTW8816(0x97, 0x7F);
    969                  WriteTW8816(0x98, 0x06);
    970                  
    971                  WriteTW8816(0x94, 0x80);
    972                  WriteTW8816(0x95, 0x80);
    973                  WriteTW8816(0x96, 0xEC);
    974                  WriteTW8816(0x97, 0x80);
    975                  WriteTW8816(0x98, 0x06);
    976                  
    977                  WriteTW8816(0x94, 0x80);
    978                  WriteTW8816(0x95, 0x81);
    979                  WriteTW8816(0x96, 0x0C);
    980                  WriteTW8816(0x97, 0x81);
    981                  WriteTW8816(0x98, 0x06);
    982                  
    983                  WriteTW8816(0x94, 0x80);
    984                  WriteTW8816(0x95, 0x81);
    985                  WriteTW8816(0x96, 0x0D);
    986                  WriteTW8816(0x97, 0x82);
    987                  WriteTW8816(0x98, 0x06);
    988                  
    989                  WriteTW8816(0x94, 0x80);
    990                  WriteTW8816(0x95, 0x81);
    991                  WriteTW8816(0x96, 0x0E);
    992                  WriteTW8816(0x97, 0x83);
    993                  WriteTW8816(0x98, 0x06);        
    994                }
    995              } else{
    996                if(AAVM_Warning_Left == 1){
    997                  WriteTW8816(0x94, 0x80);
    998                  WriteTW8816(0x95, 0x80);
    999                  WriteTW8816(0x96, 0xEA);
   1000                  WriteTW8816(0x97, 0x12);
   1001                  WriteTW8816(0x98, 0x04);
   1002                  
   1003                  WriteTW8816(0x94, 0x80);
   1004                  WriteTW8816(0x95, 0x80);
   1005                  WriteTW8816(0x96, 0xEB);
   1006                  WriteTW8816(0x97, 0x13);
   1007                  WriteTW8816(0x98, 0x04);
   1008                  
   1009                  WriteTW8816(0x94, 0x80);
   1010                  WriteTW8816(0x95, 0x80);
   1011                  WriteTW8816(0x96, 0xEC);
   1012                  WriteTW8816(0x97, 0x14);
   1013                  WriteTW8816(0x98, 0x04);
   1014                  
   1015                  WriteTW8816(0x94, 0x80);
   1016                  WriteTW8816(0x95, 0x81);
   1017                  WriteTW8816(0x96, 0x0C);
   1018                  WriteTW8816(0x97, 0x15);
   1019                  WriteTW8816(0x98, 0x04);
   1020                  
   1021                  WriteTW8816(0x94, 0x80);
   1022                  WriteTW8816(0x95, 0x81);
   1023                  WriteTW8816(0x96, 0x0D);
   1024                  WriteTW8816(0x97, 0x16);
   1025                  WriteTW8816(0x98, 0x04);
   1026                  
   1027                  WriteTW8816(0x94, 0x80);
   1028                  WriteTW8816(0x95, 0x81);
   1029                  WriteTW8816(0x96, 0x0E);
   1030                  WriteTW8816(0x97, 0x17);
   1031                  WriteTW8816(0x98, 0x04);
   1032                } else {
   1033                  WriteTW8816(0x94, 0x80);
   1034                  WriteTW8816(0x95, 0x80);
   1035                  WriteTW8816(0x96, 0xEA);
   1036                  WriteTW8816(0x97, 0x12);
   1037                  WriteTW8816(0x98, 0x06);
   1038                  
   1039                  WriteTW8816(0x94, 0x80);
   1040                  WriteTW8816(0x95, 0x80);
   1041                  WriteTW8816(0x96, 0xEB);
   1042                  WriteTW8816(0x97, 0x13);
   1043                  WriteTW8816(0x98, 0x06);
   1044                  
   1045                  WriteTW8816(0x94, 0x80);
   1046                  WriteTW8816(0x95, 0x80);
   1047                  WriteTW8816(0x96, 0xEC);
   1048                  WriteTW8816(0x97, 0x14);
   1049                  WriteTW8816(0x98, 0x06);
   1050                  
   1051                  WriteTW8816(0x94, 0x80);
   1052                  WriteTW8816(0x95, 0x81);
   1053                  WriteTW8816(0x96, 0x0C);
   1054                  WriteTW8816(0x97, 0x15);
   1055                  WriteTW8816(0x98, 0x06);
   1056                  
   1057                  WriteTW8816(0x94, 0x80);
   1058                  WriteTW8816(0x95, 0x81);
   1059                  WriteTW8816(0x96, 0x0D);
   1060                  WriteTW8816(0x97, 0x16);
   1061                  WriteTW8816(0x98, 0x06);
   1062                  
   1063                  WriteTW8816(0x94, 0x80);
   1064                  WriteTW8816(0x95, 0x81);
   1065                  WriteTW8816(0x96, 0x0E);
   1066                  WriteTW8816(0x97, 0x17);
   1067                  WriteTW8816(0x98, 0x06);        
   1068                }
   1069              } 
   1070            } else {
   1071              WriteTW8816(0x94, 0x00);
   1072              WriteTW8816(0x95, 0x80);
   1073              WriteTW8816(0x96, 0xEA);
   1074              WriteTW8816(0x97, 0x20);
   1075              WriteTW8816(0x98, 0x06);
   1076              
   1077              WriteTW8816(0x94, 0x00);
   1078              WriteTW8816(0x95, 0x80);
   1079              WriteTW8816(0x96, 0xEB);
   1080              WriteTW8816(0x97, 0x20);
   1081              WriteTW8816(0x98, 0x06);
   1082              
   1083              WriteTW8816(0x94, 0x00);
   1084              WriteTW8816(0x95, 0x80);
   1085              WriteTW8816(0x96, 0xEC);
   1086              WriteTW8816(0x97, 0x20);
   1087              WriteTW8816(0x98, 0x06);
   1088              
   1089              WriteTW8816(0x94, 0x00);
   1090              WriteTW8816(0x95, 0x81);
   1091              WriteTW8816(0x96, 0x0C);
   1092              WriteTW8816(0x97, 0x20);
   1093              WriteTW8816(0x98, 0x06);
   1094              
   1095              WriteTW8816(0x94, 0x00);
   1096              WriteTW8816(0x95, 0x81);
   1097              WriteTW8816(0x96, 0x0D);
   1098              WriteTW8816(0x97, 0x20);
   1099              WriteTW8816(0x98, 0x06);
   1100              
   1101              WriteTW8816(0x94, 0x00);
   1102              WriteTW8816(0x95, 0x81);
   1103              WriteTW8816(0x96, 0x0E);
   1104              WriteTW8816(0x97, 0x20);
   1105              WriteTW8816(0x98, 0x06);
   1106            }
   1107          }
   1108          
   1109          
   1110          
   1111          
   1112          void SetChangeRightView(void){
   1113            if(AAVM_Menu_Flag == 0) {
   1114              if(AAVM_Camera_Icon_Index == 7){
   1115                if(AAVM_Warning_Right == 1){
   1116                  WriteTW8816(0x94, 0x80);
   1117                  WriteTW8816(0x95, 0x81);
   1118                  WriteTW8816(0x96, 0x50);
   1119                  WriteTW8816(0x97, 0x8A);
   1120                  WriteTW8816(0x98, 0x04);
   1121                  
   1122                  WriteTW8816(0x94, 0x80);
   1123                  WriteTW8816(0x95, 0x81);
   1124                  WriteTW8816(0x96, 0x51);
   1125                  WriteTW8816(0x97, 0x8B);
   1126                  WriteTW8816(0x98, 0x04);
   1127                  
   1128                  WriteTW8816(0x94, 0x80);
   1129                  WriteTW8816(0x95, 0x81);
   1130                  WriteTW8816(0x96, 0x52);
   1131                  WriteTW8816(0x97, 0x8C);
   1132                  WriteTW8816(0x98, 0x04);
   1133                  
   1134                  WriteTW8816(0x94, 0x80);
   1135                  WriteTW8816(0x95, 0x81);
   1136                  WriteTW8816(0x96, 0x72);
   1137                  WriteTW8816(0x97, 0x8D);
   1138                  WriteTW8816(0x98, 0x04);
   1139                  
   1140                  WriteTW8816(0x94, 0x80);
   1141                  WriteTW8816(0x95, 0x81);
   1142                  WriteTW8816(0x96, 0x73);
   1143                  WriteTW8816(0x97, 0x8E);
   1144                  WriteTW8816(0x98, 0x04);
   1145                  
   1146                  WriteTW8816(0x94, 0x80);
   1147                  WriteTW8816(0x95, 0x81);
   1148                  WriteTW8816(0x96, 0x74);
   1149                  WriteTW8816(0x97, 0x8F);
   1150                  WriteTW8816(0x98, 0x04);
   1151                } else {
   1152                  WriteTW8816(0x94, 0x80);
   1153                  WriteTW8816(0x95, 0x81);
   1154                  WriteTW8816(0x96, 0x50);
   1155                  WriteTW8816(0x97, 0x8A);
   1156                  WriteTW8816(0x98, 0x06);
   1157                  
   1158                  WriteTW8816(0x94, 0x80);
   1159                  WriteTW8816(0x95, 0x81);
   1160                  WriteTW8816(0x96, 0x51);
   1161                  WriteTW8816(0x97, 0x8B);
   1162                  WriteTW8816(0x98, 0x06);
   1163                  
   1164                  WriteTW8816(0x94, 0x80);
   1165                  WriteTW8816(0x95, 0x81);
   1166                  WriteTW8816(0x96, 0x52);
   1167                  WriteTW8816(0x97, 0x8C);
   1168                  WriteTW8816(0x98, 0x06);
   1169                  
   1170                  WriteTW8816(0x94, 0x80);
   1171                  WriteTW8816(0x95, 0x81);
   1172                  WriteTW8816(0x96, 0x72);
   1173                  WriteTW8816(0x97, 0x8D);
   1174                  WriteTW8816(0x98, 0x06);
   1175                  
   1176                  WriteTW8816(0x94, 0x80);
   1177                  WriteTW8816(0x95, 0x81);
   1178                  WriteTW8816(0x96, 0x73);
   1179                  WriteTW8816(0x97, 0x8E);
   1180                  WriteTW8816(0x98, 0x06);
   1181                  
   1182                  WriteTW8816(0x94, 0x80);
   1183                  WriteTW8816(0x95, 0x81);
   1184                  WriteTW8816(0x96, 0x74);
   1185                  WriteTW8816(0x97, 0x8F);
   1186                  WriteTW8816(0x98, 0x06);        
   1187                }
   1188              } else {
   1189                if(AAVM_Warning_Right == 1){
   1190                  WriteTW8816(0x94, 0x80);
   1191                  WriteTW8816(0x95, 0x81);
   1192                  WriteTW8816(0x96, 0x50);
   1193                  WriteTW8816(0x97, 0x1E);
   1194                  WriteTW8816(0x98, 0x04);
   1195                  
   1196                  WriteTW8816(0x94, 0x80);
   1197                  WriteTW8816(0x95, 0x81);
   1198                  WriteTW8816(0x96, 0x51);
   1199                  WriteTW8816(0x97, 0x1F);
   1200                  WriteTW8816(0x98, 0x04);
   1201                  
   1202                  WriteTW8816(0x94, 0x80);
   1203                  WriteTW8816(0x95, 0x81);
   1204                  WriteTW8816(0x96, 0x52);
   1205                  WriteTW8816(0x97, 0x20);
   1206                  WriteTW8816(0x98, 0x04);
   1207                  
   1208                  WriteTW8816(0x94, 0x80);
   1209                  WriteTW8816(0x95, 0x81);
   1210                  WriteTW8816(0x96, 0x72);
   1211                  WriteTW8816(0x97, 0x21);
   1212                  WriteTW8816(0x98, 0x04);
   1213                  
   1214                  WriteTW8816(0x94, 0x80);
   1215                  WriteTW8816(0x95, 0x81);
   1216                  WriteTW8816(0x96, 0x73);
   1217                  WriteTW8816(0x97, 0x22);
   1218                  WriteTW8816(0x98, 0x04);
   1219                  
   1220                  WriteTW8816(0x94, 0x80);
   1221                  WriteTW8816(0x95, 0x81);
   1222                  WriteTW8816(0x96, 0x74);
   1223                  WriteTW8816(0x97, 0x23);
   1224                  WriteTW8816(0x98, 0x04);
   1225                } else {
   1226                  WriteTW8816(0x94, 0x80);
   1227                  WriteTW8816(0x95, 0x81);
   1228                  WriteTW8816(0x96, 0x50);
   1229                  WriteTW8816(0x97, 0x1E);
   1230                  WriteTW8816(0x98, 0x06);
   1231                  
   1232                  WriteTW8816(0x94, 0x80);
   1233                  WriteTW8816(0x95, 0x81);
   1234                  WriteTW8816(0x96, 0x51);
   1235                  WriteTW8816(0x97, 0x1F);
   1236                  WriteTW8816(0x98, 0x06);
   1237                  
   1238                  WriteTW8816(0x94, 0x80);
   1239                  WriteTW8816(0x95, 0x81);
   1240                  WriteTW8816(0x96, 0x52);
   1241                  WriteTW8816(0x97, 0x20);
   1242                  WriteTW8816(0x98, 0x06);
   1243                  
   1244                  WriteTW8816(0x94, 0x80);
   1245                  WriteTW8816(0x95, 0x81);
   1246                  WriteTW8816(0x96, 0x72);
   1247                  WriteTW8816(0x97, 0x21);
   1248                  WriteTW8816(0x98, 0x06);
   1249                  
   1250                  WriteTW8816(0x94, 0x80);
   1251                  WriteTW8816(0x95, 0x81);
   1252                  WriteTW8816(0x96, 0x73);
   1253                  WriteTW8816(0x97, 0x22);
   1254                  WriteTW8816(0x98, 0x06);
   1255                  
   1256                  WriteTW8816(0x94, 0x80);
   1257                  WriteTW8816(0x95, 0x81);
   1258                  WriteTW8816(0x96, 0x74);
   1259                  WriteTW8816(0x97, 0x23);
   1260                  WriteTW8816(0x98, 0x06);
   1261                }
   1262              }
   1263            } else {
   1264              WriteTW8816(0x94, 0x00);
   1265              WriteTW8816(0x95, 0x81);
   1266              WriteTW8816(0x96, 0x50);
   1267              WriteTW8816(0x97, 0x20);
   1268              WriteTW8816(0x98, 0x06);
   1269              
   1270              WriteTW8816(0x94, 0x00);
   1271              WriteTW8816(0x95, 0x81);
   1272              WriteTW8816(0x96, 0x51);
   1273              WriteTW8816(0x97, 0x20);
   1274              WriteTW8816(0x98, 0x06);
   1275              
   1276              WriteTW8816(0x94, 0x00);
   1277              WriteTW8816(0x95, 0x81);
   1278              WriteTW8816(0x96, 0x52);
   1279              WriteTW8816(0x97, 0x20);
   1280              WriteTW8816(0x98, 0x06);
   1281              
   1282              WriteTW8816(0x94, 0x00);
   1283              WriteTW8816(0x95, 0x81);
   1284              WriteTW8816(0x96, 0x72);
   1285              WriteTW8816(0x97, 0x20);
   1286              WriteTW8816(0x98, 0x06);
   1287              
   1288              WriteTW8816(0x94, 0x00);
   1289              WriteTW8816(0x95, 0x81);
   1290              WriteTW8816(0x96, 0x73);
   1291              WriteTW8816(0x97, 0x20);
   1292              WriteTW8816(0x98, 0x06);
   1293              
   1294              WriteTW8816(0x94, 0x00);
   1295              WriteTW8816(0x95, 0x81);
   1296              WriteTW8816(0x96, 0x74);
   1297              WriteTW8816(0x97, 0x20);
   1298              WriteTW8816(0x98, 0x06);    
   1299            }
   1300          }
   1301          
   1302          void SetChange4ChannelView(void){
   1303            if(AAVM_Menu_Flag == 0) {  
   1304              if(AAVM_Camera_Icon_Index == 3){
   1305                WriteTW8816(0x94, 0x80);
   1306                WriteTW8816(0x95, 0x81);
   1307                WriteTW8816(0x96, 0x94);
   1308                WriteTW8816(0x97, 0x90);
   1309                WriteTW8816(0x98, 0x06);
   1310                
   1311                WriteTW8816(0x94, 0x80);
   1312                WriteTW8816(0x95, 0x81);
   1313                WriteTW8816(0x96, 0x95);
   1314                WriteTW8816(0x97, 0x91);
   1315                WriteTW8816(0x98, 0x06);
   1316                
   1317                WriteTW8816(0x94, 0x80);
   1318                WriteTW8816(0x95, 0x81);
   1319                WriteTW8816(0x96, 0x96);
   1320                WriteTW8816(0x97, 0x92);
   1321                WriteTW8816(0x98, 0x06);
   1322                
   1323                WriteTW8816(0x94, 0x80);
   1324                WriteTW8816(0x95, 0x81);
   1325                WriteTW8816(0x96, 0xB6);
   1326                WriteTW8816(0x97, 0x93);
   1327                WriteTW8816(0x98, 0x06);
   1328                
   1329                WriteTW8816(0x94, 0x80);
   1330                WriteTW8816(0x95, 0x81);
   1331                WriteTW8816(0x96, 0xB7);
   1332                WriteTW8816(0x97, 0x94);
   1333                WriteTW8816(0x98, 0x06);
   1334                
   1335                WriteTW8816(0x94, 0x80);
   1336                WriteTW8816(0x95, 0x81);
   1337                WriteTW8816(0x96, 0xB8);
   1338                WriteTW8816(0x97, 0x95);
   1339                WriteTW8816(0x98, 0x06);
   1340              } else {
   1341                WriteTW8816(0x94, 0x80);
   1342                WriteTW8816(0x95, 0x81);
   1343                WriteTW8816(0x96, 0x94);
   1344                WriteTW8816(0x97, 0x24);
   1345                WriteTW8816(0x98, 0x06);
   1346                
   1347                WriteTW8816(0x94, 0x80);
   1348                WriteTW8816(0x95, 0x81);
   1349                WriteTW8816(0x96, 0x95);
   1350                WriteTW8816(0x97, 0x25);
   1351                WriteTW8816(0x98, 0x06);
   1352                
   1353                WriteTW8816(0x94, 0x80);
   1354                WriteTW8816(0x95, 0x81);
   1355                WriteTW8816(0x96, 0x96);
   1356                WriteTW8816(0x97, 0x26);
   1357                WriteTW8816(0x98, 0x06);
   1358                
   1359                WriteTW8816(0x94, 0x80);
   1360                WriteTW8816(0x95, 0x81);
   1361                WriteTW8816(0x96, 0xB6);
   1362                WriteTW8816(0x97, 0x27);
   1363                WriteTW8816(0x98, 0x06);
   1364                
   1365                WriteTW8816(0x94, 0x80);
   1366                WriteTW8816(0x95, 0x81);
   1367                WriteTW8816(0x96, 0xB7);
   1368                WriteTW8816(0x97, 0x28);
   1369                WriteTW8816(0x98, 0x06);
   1370                
   1371                WriteTW8816(0x94, 0x80);
   1372                WriteTW8816(0x95, 0x81);
   1373                WriteTW8816(0x96, 0xB8);
   1374                WriteTW8816(0x97, 0x29);
   1375                WriteTW8816(0x98, 0x06);
   1376              }
   1377            } else {
   1378              WriteTW8816(0x94, 0x00);
   1379              WriteTW8816(0x95, 0x81);
   1380              WriteTW8816(0x96, 0x94);
   1381              WriteTW8816(0x97, 0x20);
   1382              WriteTW8816(0x98, 0x06);
   1383              
   1384              WriteTW8816(0x94, 0x00);
   1385              WriteTW8816(0x95, 0x81);
   1386              WriteTW8816(0x96, 0x95);
   1387              WriteTW8816(0x97, 0x20);
   1388              WriteTW8816(0x98, 0x06);
   1389              
   1390              WriteTW8816(0x94, 0x00);
   1391              WriteTW8816(0x95, 0x81);
   1392              WriteTW8816(0x96, 0x96);
   1393              WriteTW8816(0x97, 0x20);
   1394              WriteTW8816(0x98, 0x06);
   1395              
   1396              WriteTW8816(0x94, 0x00);
   1397              WriteTW8816(0x95, 0x81);
   1398              WriteTW8816(0x96, 0xB6);
   1399              WriteTW8816(0x97, 0x20);
   1400              WriteTW8816(0x98, 0x06);
   1401              
   1402              WriteTW8816(0x94, 0x00);
   1403              WriteTW8816(0x95, 0x81);
   1404              WriteTW8816(0x96, 0xB7);
   1405              WriteTW8816(0x97, 0x20);
   1406              WriteTW8816(0x98, 0x06);
   1407              
   1408              WriteTW8816(0x94, 0x00);
   1409              WriteTW8816(0x95, 0x81);
   1410              WriteTW8816(0x96, 0xB8);
   1411              WriteTW8816(0x97, 0x20);
   1412              WriteTW8816(0x98, 0x06);    
   1413            }
   1414          }
   1415          void SetChange3DBirdView(void){
   1416            if(AAVM_Menu_Flag == 0) {    
   1417              if(AAVM_Camera_Icon_Index == 0){
   1418                WriteTW8816(0x94, 0x80);
   1419                WriteTW8816(0x95, 0x81);
   1420                WriteTW8816(0x96, 0x76);
   1421                WriteTW8816(0x97, 0x96);
   1422                WriteTW8816(0x98, 0x06);
   1423                
   1424                WriteTW8816(0x94, 0x80);
   1425                WriteTW8816(0x95, 0x81);
   1426                WriteTW8816(0x96, 0x77);
   1427                WriteTW8816(0x97, 0x97);
   1428                WriteTW8816(0x98, 0x06);
   1429                
   1430                WriteTW8816(0x94, 0x80);
   1431                WriteTW8816(0x95, 0x81);
   1432                WriteTW8816(0x96, 0x78);
   1433                WriteTW8816(0x97, 0x98);
   1434                WriteTW8816(0x98, 0x06);
   1435                
   1436                WriteTW8816(0x94, 0x80);
   1437                WriteTW8816(0x95, 0x81);
   1438                WriteTW8816(0x96, 0x98);
   1439                WriteTW8816(0x97, 0x99);
   1440                WriteTW8816(0x98, 0x06);
   1441                
   1442                WriteTW8816(0x94, 0x80);
   1443                WriteTW8816(0x95, 0x81);
   1444                WriteTW8816(0x96, 0x99);
   1445                WriteTW8816(0x97, 0x9A);
   1446                WriteTW8816(0x98, 0x06);
   1447                
   1448                WriteTW8816(0x94, 0x80);
   1449                WriteTW8816(0x95, 0x81);
   1450                WriteTW8816(0x96, 0x9A);
   1451                WriteTW8816(0x97, 0x9B);
   1452                WriteTW8816(0x98, 0x06);
   1453              } else {
   1454                WriteTW8816(0x94, 0x80);
   1455                WriteTW8816(0x95, 0x81);
   1456                WriteTW8816(0x96, 0x76);
   1457                WriteTW8816(0x97, 0x72);
   1458                WriteTW8816(0x98, 0x06);
   1459                
   1460                WriteTW8816(0x94, 0x80);
   1461                WriteTW8816(0x95, 0x81);
   1462                WriteTW8816(0x96, 0x77);
   1463                WriteTW8816(0x97, 0x73);
   1464                WriteTW8816(0x98, 0x06);
   1465                
   1466                WriteTW8816(0x94, 0x80);
   1467                WriteTW8816(0x95, 0x81);
   1468                WriteTW8816(0x96, 0x78);
   1469                WriteTW8816(0x97, 0x74);
   1470                WriteTW8816(0x98, 0x06);
   1471                
   1472                WriteTW8816(0x94, 0x80);
   1473                WriteTW8816(0x95, 0x81);
   1474                WriteTW8816(0x96, 0x98);
   1475                WriteTW8816(0x97, 0x75);
   1476                WriteTW8816(0x98, 0x06);
   1477                
   1478                WriteTW8816(0x94, 0x80);
   1479                WriteTW8816(0x95, 0x81);
   1480                WriteTW8816(0x96, 0x99);
   1481                WriteTW8816(0x97, 0x76);
   1482                WriteTW8816(0x98, 0x06);
   1483                
   1484                WriteTW8816(0x94, 0x80);
   1485                WriteTW8816(0x95, 0x81);
   1486                WriteTW8816(0x96, 0x9A);
   1487                WriteTW8816(0x97, 0x77);
   1488                WriteTW8816(0x98, 0x06);
   1489              }
   1490            } else {
   1491              WriteTW8816(0x94, 0x00);
   1492              WriteTW8816(0x95, 0x81);
   1493              WriteTW8816(0x96, 0x76);
   1494              WriteTW8816(0x97, 0x20);
   1495              WriteTW8816(0x98, 0x06);
   1496              
   1497              WriteTW8816(0x94, 0x00);
   1498              WriteTW8816(0x95, 0x81);
   1499              WriteTW8816(0x96, 0x77);
   1500              WriteTW8816(0x97, 0x20);
   1501              WriteTW8816(0x98, 0x06);
   1502              
   1503              WriteTW8816(0x94, 0x00);
   1504              WriteTW8816(0x95, 0x81);
   1505              WriteTW8816(0x96, 0x78);
   1506              WriteTW8816(0x97, 0x20);
   1507              WriteTW8816(0x98, 0x06);
   1508              
   1509              WriteTW8816(0x94, 0x00);
   1510              WriteTW8816(0x95, 0x81);
   1511              WriteTW8816(0x96, 0x98);
   1512              WriteTW8816(0x97, 0x20);
   1513              WriteTW8816(0x98, 0x06);
   1514              
   1515              WriteTW8816(0x94, 0x00);
   1516              WriteTW8816(0x95, 0x81);
   1517              WriteTW8816(0x96, 0x99);
   1518              WriteTW8816(0x97, 0x20);
   1519              WriteTW8816(0x98, 0x06);
   1520              
   1521              WriteTW8816(0x94, 0x00);
   1522              WriteTW8816(0x95, 0x81);
   1523              WriteTW8816(0x96, 0x9A);
   1524              WriteTW8816(0x97, 0x20);
   1525              WriteTW8816(0x98, 0x06);    
   1526            }
   1527          }
   1528          
   1529          void SetChange3DRearView(void){
   1530            if(AAVM_Menu_Flag == 0) {    
   1531              if(AAVM_Camera_Icon_Index == 1){
   1532                WriteTW8816(0x94, 0x80);
   1533                WriteTW8816(0x95, 0x81);
   1534                WriteTW8816(0x96, 0x7C);
   1535                WriteTW8816(0x97, 0x9C);
   1536                WriteTW8816(0x98, 0x06);
   1537                
   1538                WriteTW8816(0x94, 0x80);
   1539                WriteTW8816(0x95, 0x81);
   1540                WriteTW8816(0x96, 0x7D);
   1541                WriteTW8816(0x97, 0x9D);
   1542                WriteTW8816(0x98, 0x06);
   1543                
   1544                WriteTW8816(0x94, 0x80);
   1545                WriteTW8816(0x95, 0x81);
   1546                WriteTW8816(0x96, 0x7E);
   1547                WriteTW8816(0x97, 0x9E);
   1548                WriteTW8816(0x98, 0x06);
   1549                
   1550                WriteTW8816(0x94, 0x80);
   1551                WriteTW8816(0x95, 0x81);
   1552                WriteTW8816(0x96, 0x9E);
   1553                WriteTW8816(0x97, 0x9F);
   1554                WriteTW8816(0x98, 0x06);
   1555                
   1556                WriteTW8816(0x94, 0x80);
   1557                WriteTW8816(0x95, 0x81);
   1558                WriteTW8816(0x96, 0x9F);
   1559                WriteTW8816(0x97, 0xA0);
   1560                WriteTW8816(0x98, 0x06);
   1561                
   1562                WriteTW8816(0x94, 0x80);
   1563                WriteTW8816(0x95, 0x81);
   1564                WriteTW8816(0x96, 0xA0);
   1565                WriteTW8816(0x97, 0xA1);
   1566                WriteTW8816(0x98, 0x06);
   1567              } else {
   1568                WriteTW8816(0x94, 0x80);
   1569                WriteTW8816(0x95, 0x81);
   1570                WriteTW8816(0x96, 0x7C);
   1571                WriteTW8816(0x97, 0x66);
   1572                WriteTW8816(0x98, 0x06);
   1573                
   1574                WriteTW8816(0x94, 0x80);
   1575                WriteTW8816(0x95, 0x81);
   1576                WriteTW8816(0x96, 0x7D);
   1577                WriteTW8816(0x97, 0x67);
   1578                WriteTW8816(0x98, 0x06);
   1579                
   1580                WriteTW8816(0x94, 0x80);
   1581                WriteTW8816(0x95, 0x81);
   1582                WriteTW8816(0x96, 0x7E);
   1583                WriteTW8816(0x97, 0x68);
   1584                WriteTW8816(0x98, 0x06);
   1585                
   1586                WriteTW8816(0x94, 0x80);
   1587                WriteTW8816(0x95, 0x81);
   1588                WriteTW8816(0x96, 0x9E);
   1589                WriteTW8816(0x97, 0x69);
   1590                WriteTW8816(0x98, 0x06);
   1591                
   1592                WriteTW8816(0x94, 0x80);
   1593                WriteTW8816(0x95, 0x81);
   1594                WriteTW8816(0x96, 0x9F);
   1595                WriteTW8816(0x97, 0x6A);
   1596                WriteTW8816(0x98, 0x06);
   1597                
   1598                WriteTW8816(0x94, 0x80);
   1599                WriteTW8816(0x95, 0x81);
   1600                WriteTW8816(0x96, 0xA0);
   1601                WriteTW8816(0x97, 0x6B);
   1602                WriteTW8816(0x98, 0x06);
   1603              }
   1604            } else {
   1605              WriteTW8816(0x94, 0x00);
   1606              WriteTW8816(0x95, 0x81);
   1607              WriteTW8816(0x96, 0x7C);
   1608              WriteTW8816(0x97, 0x20);
   1609              WriteTW8816(0x98, 0x06);
   1610              
   1611              WriteTW8816(0x94, 0x00);
   1612              WriteTW8816(0x95, 0x81);
   1613              WriteTW8816(0x96, 0x7D);
   1614              WriteTW8816(0x97, 0x20);
   1615              WriteTW8816(0x98, 0x06);
   1616              
   1617              WriteTW8816(0x94, 0x00);
   1618              WriteTW8816(0x95, 0x81);
   1619              WriteTW8816(0x96, 0x7E);
   1620              WriteTW8816(0x97, 0x20);
   1621              WriteTW8816(0x98, 0x06);
   1622              
   1623              WriteTW8816(0x94, 0x00);
   1624              WriteTW8816(0x95, 0x81);
   1625              WriteTW8816(0x96, 0x9E);
   1626              WriteTW8816(0x97, 0x20);
   1627              WriteTW8816(0x98, 0x06);
   1628              
   1629              WriteTW8816(0x94, 0x00);
   1630              WriteTW8816(0x95, 0x81);
   1631              WriteTW8816(0x96, 0x9F);
   1632              WriteTW8816(0x97, 0x20);
   1633              WriteTW8816(0x98, 0x06);
   1634              
   1635              WriteTW8816(0x94, 0x00);
   1636              WriteTW8816(0x95, 0x81);
   1637              WriteTW8816(0x96, 0xA0);
   1638              WriteTW8816(0x97, 0x20);
   1639              WriteTW8816(0x98, 0x06);
   1640            }
   1641          }
   1642          
   1643          void SetChange2DBirdView(void){
   1644            if(AAVM_Menu_Flag == 0) {    
   1645              if(AAVM_Camera_Icon_Index == 2){
   1646                WriteTW8816(0x94, 0x80);
   1647                WriteTW8816(0x95, 0x81);
   1648                WriteTW8816(0x96, 0x82);
   1649                WriteTW8816(0x97, 0xA2);
   1650                WriteTW8816(0x98, 0x06);
   1651                
   1652                WriteTW8816(0x94, 0x80);
   1653                WriteTW8816(0x95, 0x81);
   1654                WriteTW8816(0x96, 0x83);
   1655                WriteTW8816(0x97, 0xA3);
   1656                WriteTW8816(0x98, 0x06);
   1657                
   1658                WriteTW8816(0x94, 0x80);
   1659                WriteTW8816(0x95, 0x81);
   1660                WriteTW8816(0x96, 0x84);
   1661                WriteTW8816(0x97, 0xA4);
   1662                WriteTW8816(0x98, 0x06);
   1663                
   1664                WriteTW8816(0x94, 0x80);
   1665                WriteTW8816(0x95, 0x81);
   1666                WriteTW8816(0x96, 0xA4);
   1667                WriteTW8816(0x97, 0xA5);
   1668                WriteTW8816(0x98, 0x06);
   1669                
   1670                WriteTW8816(0x94, 0x80);
   1671                WriteTW8816(0x95, 0x81);
   1672                WriteTW8816(0x96, 0xA5);
   1673                WriteTW8816(0x97, 0xA6);
   1674                WriteTW8816(0x98, 0x06);
   1675                
   1676                WriteTW8816(0x94, 0x80);
   1677                WriteTW8816(0x95, 0x81);
   1678                WriteTW8816(0x96, 0xA6);
   1679                WriteTW8816(0x97, 0xA7);
   1680                WriteTW8816(0x98, 0x06);
   1681              } else {
   1682                WriteTW8816(0x94, 0x80);
   1683                WriteTW8816(0x95, 0x81);
   1684                WriteTW8816(0x96, 0x82);
   1685                WriteTW8816(0x97, 0x5A);
   1686                WriteTW8816(0x98, 0x06);
   1687                
   1688                WriteTW8816(0x94, 0x80);
   1689                WriteTW8816(0x95, 0x81);
   1690                WriteTW8816(0x96, 0x83);
   1691                WriteTW8816(0x97, 0x5B);
   1692                WriteTW8816(0x98, 0x06);
   1693                
   1694                WriteTW8816(0x94, 0x80);
   1695                WriteTW8816(0x95, 0x81);
   1696                WriteTW8816(0x96, 0x84);
   1697                WriteTW8816(0x97, 0x5C);
   1698                WriteTW8816(0x98, 0x06);
   1699                
   1700                WriteTW8816(0x94, 0x80);
   1701                WriteTW8816(0x95, 0x81);
   1702                WriteTW8816(0x96, 0xA4);
   1703                WriteTW8816(0x97, 0x5D);
   1704                WriteTW8816(0x98, 0x06);
   1705                
   1706                WriteTW8816(0x94, 0x80);
   1707                WriteTW8816(0x95, 0x81);
   1708                WriteTW8816(0x96, 0xA5);
   1709                WriteTW8816(0x97, 0x5E);
   1710                WriteTW8816(0x98, 0x06);
   1711                
   1712                WriteTW8816(0x94, 0x80);
   1713                WriteTW8816(0x95, 0x81);
   1714                WriteTW8816(0x96, 0xA6);
   1715                WriteTW8816(0x97, 0x5F);
   1716                WriteTW8816(0x98, 0x06);
   1717              }
   1718            } else{
   1719              WriteTW8816(0x94, 0x00);
   1720              WriteTW8816(0x95, 0x81);
   1721              WriteTW8816(0x96, 0x82);
   1722              WriteTW8816(0x97, 0x20);
   1723              WriteTW8816(0x98, 0x06);
   1724              
   1725              WriteTW8816(0x94, 0x00);
   1726              WriteTW8816(0x95, 0x81);
   1727              WriteTW8816(0x96, 0x83);
   1728              WriteTW8816(0x97, 0x20);
   1729              WriteTW8816(0x98, 0x06);
   1730              
   1731              WriteTW8816(0x94, 0x00);
   1732              WriteTW8816(0x95, 0x81);
   1733              WriteTW8816(0x96, 0x84);
   1734              WriteTW8816(0x97, 0x20);
   1735              WriteTW8816(0x98, 0x06);
   1736              
   1737              WriteTW8816(0x94, 0x00);
   1738              WriteTW8816(0x95, 0x81);
   1739              WriteTW8816(0x96, 0xA4);
   1740              WriteTW8816(0x97, 0x20);
   1741              WriteTW8816(0x98, 0x06);
   1742              
   1743              WriteTW8816(0x94, 0x00);
   1744              WriteTW8816(0x95, 0x81);
   1745              WriteTW8816(0x96, 0xA5);
   1746              WriteTW8816(0x97, 0x20);
   1747              WriteTW8816(0x98, 0x06);
   1748              
   1749              WriteTW8816(0x94, 0x00);
   1750              WriteTW8816(0x95, 0x81);
   1751              WriteTW8816(0x96, 0xA6);
   1752              WriteTW8816(0x97, 0x20);
   1753              WriteTW8816(0x98, 0x06);     
   1754            }
   1755          }
   1756          
   1757          void SetChange3DLeftView(void){
   1758            if(AAVM_Menu_Flag == 0) {    
   1759              if(AAVM_Camera_Icon_Index == 8){
   1760                WriteTW8816(0x94, 0x80);
   1761                WriteTW8816(0x95, 0x81);
   1762                WriteTW8816(0x96, 0x88);
   1763                WriteTW8816(0x97, 0xA8);
   1764                WriteTW8816(0x98, 0x06);
   1765                
   1766                WriteTW8816(0x94, 0x80);
   1767                WriteTW8816(0x95, 0x81);
   1768                WriteTW8816(0x96, 0x89);
   1769                WriteTW8816(0x97, 0xA9);
   1770                WriteTW8816(0x98, 0x06);
   1771                
   1772                WriteTW8816(0x94, 0x80);
   1773                WriteTW8816(0x95, 0x81);
   1774                WriteTW8816(0x96, 0x8A);
   1775                WriteTW8816(0x97, 0xAA);
   1776                WriteTW8816(0x98, 0x06);
   1777                
   1778                WriteTW8816(0x94, 0x80);
   1779                WriteTW8816(0x95, 0x81);
   1780                WriteTW8816(0x96, 0xAA);
   1781                WriteTW8816(0x97, 0xAB);
   1782                WriteTW8816(0x98, 0x06);
   1783                
   1784                WriteTW8816(0x94, 0x80);
   1785                WriteTW8816(0x95, 0x81);
   1786                WriteTW8816(0x96, 0xAB);
   1787                WriteTW8816(0x97, 0xAC);
   1788                WriteTW8816(0x98, 0x06);
   1789                
   1790                WriteTW8816(0x94, 0x80);
   1791                WriteTW8816(0x95, 0x81);
   1792                WriteTW8816(0x96, 0xAC);
   1793                WriteTW8816(0x97, 0xAD);
   1794                WriteTW8816(0x98, 0x06);
   1795              } else {
   1796                WriteTW8816(0x94, 0x80);
   1797                WriteTW8816(0x95, 0x81);
   1798                WriteTW8816(0x96, 0x88);
   1799                WriteTW8816(0x97, 0x60);
   1800                WriteTW8816(0x98, 0x06);
   1801                
   1802                WriteTW8816(0x94, 0x80);
   1803                WriteTW8816(0x95, 0x81);
   1804                WriteTW8816(0x96, 0x89);
   1805                WriteTW8816(0x97, 0x61);
   1806                WriteTW8816(0x98, 0x06);
   1807                
   1808                WriteTW8816(0x94, 0x80);
   1809                WriteTW8816(0x95, 0x81);
   1810                WriteTW8816(0x96, 0x8A);
   1811                WriteTW8816(0x97, 0x62);
   1812                WriteTW8816(0x98, 0x06);
   1813                
   1814                WriteTW8816(0x94, 0x80);
   1815                WriteTW8816(0x95, 0x81);
   1816                WriteTW8816(0x96, 0xAA);
   1817                WriteTW8816(0x97, 0x63);
   1818                WriteTW8816(0x98, 0x06);
   1819                
   1820                WriteTW8816(0x94, 0x80);
   1821                WriteTW8816(0x95, 0x81);
   1822                WriteTW8816(0x96, 0xAB);
   1823                WriteTW8816(0x97, 0x64);
   1824                WriteTW8816(0x98, 0x06);
   1825                
   1826                WriteTW8816(0x94, 0x80);
   1827                WriteTW8816(0x95, 0x81);
   1828                WriteTW8816(0x96, 0xAC);
   1829                WriteTW8816(0x97, 0x65);
   1830                WriteTW8816(0x98, 0x06);  
   1831              }
   1832            } else {
   1833              WriteTW8816(0x94, 0x00);
   1834              WriteTW8816(0x95, 0x81);
   1835              WriteTW8816(0x96, 0x88);
   1836              WriteTW8816(0x97, 0x20);
   1837              WriteTW8816(0x98, 0x06);
   1838              
   1839              WriteTW8816(0x94, 0x00);
   1840              WriteTW8816(0x95, 0x81);
   1841              WriteTW8816(0x96, 0x89);
   1842              WriteTW8816(0x97, 0x20);
   1843              WriteTW8816(0x98, 0x06);
   1844              
   1845              WriteTW8816(0x94, 0x00);
   1846              WriteTW8816(0x95, 0x81);
   1847              WriteTW8816(0x96, 0x8A);
   1848              WriteTW8816(0x97, 0x20);
   1849              WriteTW8816(0x98, 0x06);
   1850              
   1851              WriteTW8816(0x94, 0x00);
   1852              WriteTW8816(0x95, 0x81);
   1853              WriteTW8816(0x96, 0xAA);
   1854              WriteTW8816(0x97, 0x20);
   1855              WriteTW8816(0x98, 0x06);
   1856              
   1857              WriteTW8816(0x94, 0x00);
   1858              WriteTW8816(0x95, 0x81);
   1859              WriteTW8816(0x96, 0xAB);
   1860              WriteTW8816(0x97, 0x20);
   1861              WriteTW8816(0x98, 0x06);
   1862              
   1863              WriteTW8816(0x94, 0x00);
   1864              WriteTW8816(0x95, 0x81);
   1865              WriteTW8816(0x96, 0xAC);
   1866              WriteTW8816(0x97, 0x20);
   1867              WriteTW8816(0x98, 0x06); 
   1868            }
   1869          }
   1870          
   1871          void SetChange3DRightView(void){
   1872            if(AAVM_Menu_Flag == 0) {    
   1873              if(AAVM_Camera_Icon_Index == 9){
   1874                WriteTW8816(0x94, 0x80);
   1875                WriteTW8816(0x95, 0x81);
   1876                WriteTW8816(0x96, 0x8E);
   1877                WriteTW8816(0x97, 0xAE);
   1878                WriteTW8816(0x98, 0x06);
   1879                
   1880                WriteTW8816(0x94, 0x80);
   1881                WriteTW8816(0x95, 0x81);
   1882                WriteTW8816(0x96, 0x8F);
   1883                WriteTW8816(0x97, 0xAF);
   1884                WriteTW8816(0x98, 0x06);
   1885                
   1886                WriteTW8816(0x94, 0x80);
   1887                WriteTW8816(0x95, 0x81);
   1888                WriteTW8816(0x96, 0x90);
   1889                WriteTW8816(0x97, 0xB0);
   1890                WriteTW8816(0x98, 0x06);
   1891                
   1892                WriteTW8816(0x94, 0x80);
   1893                WriteTW8816(0x95, 0x81);
   1894                WriteTW8816(0x96, 0xB0);
   1895                WriteTW8816(0x97, 0xB1);
   1896                WriteTW8816(0x98, 0x06);
   1897                
   1898                WriteTW8816(0x94, 0x80);
   1899                WriteTW8816(0x95, 0x81);
   1900                WriteTW8816(0x96, 0xB1);
   1901                WriteTW8816(0x97, 0xB2);
   1902                WriteTW8816(0x98, 0x06);
   1903                
   1904                WriteTW8816(0x94, 0x80);
   1905                WriteTW8816(0x95, 0x81);
   1906                WriteTW8816(0x96, 0xB2);
   1907                WriteTW8816(0x97, 0xB3);
   1908                WriteTW8816(0x98, 0x06);
   1909              } else {
   1910                WriteTW8816(0x94, 0x80);
   1911                WriteTW8816(0x95, 0x81);
   1912                WriteTW8816(0x96, 0x8E);
   1913                WriteTW8816(0x97, 0x6C);
   1914                WriteTW8816(0x98, 0x06);
   1915                
   1916                WriteTW8816(0x94, 0x80);
   1917                WriteTW8816(0x95, 0x81);
   1918                WriteTW8816(0x96, 0x8F);
   1919                WriteTW8816(0x97, 0x6D);
   1920                WriteTW8816(0x98, 0x06);
   1921                
   1922                WriteTW8816(0x94, 0x80);
   1923                WriteTW8816(0x95, 0x81);
   1924                WriteTW8816(0x96, 0x90);
   1925                WriteTW8816(0x97, 0x6E);
   1926                WriteTW8816(0x98, 0x06);
   1927                
   1928                WriteTW8816(0x94, 0x80);
   1929                WriteTW8816(0x95, 0x81);
   1930                WriteTW8816(0x96, 0xB0);
   1931                WriteTW8816(0x97, 0x6F);
   1932                WriteTW8816(0x98, 0x06);
   1933                
   1934                WriteTW8816(0x94, 0x80);
   1935                WriteTW8816(0x95, 0x81);
   1936                WriteTW8816(0x96, 0xB1);
   1937                WriteTW8816(0x97, 0x70);
   1938                WriteTW8816(0x98, 0x06);
   1939                
   1940                WriteTW8816(0x94, 0x80);
   1941                WriteTW8816(0x95, 0x81);
   1942                WriteTW8816(0x96, 0xB2);
   1943                WriteTW8816(0x97, 0x71);
   1944                WriteTW8816(0x98, 0x06); 
   1945              }
   1946            } else {
   1947              WriteTW8816(0x94, 0x00);
   1948              WriteTW8816(0x95, 0x81);
   1949              WriteTW8816(0x96, 0x8E);
   1950              WriteTW8816(0x97, 0x20);
   1951              WriteTW8816(0x98, 0x06);
   1952              
   1953              WriteTW8816(0x94, 0x00);
   1954              WriteTW8816(0x95, 0x81);
   1955              WriteTW8816(0x96, 0x8F);
   1956              WriteTW8816(0x97, 0x20);
   1957              WriteTW8816(0x98, 0x06);
   1958              
   1959              WriteTW8816(0x94, 0x00);
   1960              WriteTW8816(0x95, 0x81);
   1961              WriteTW8816(0x96, 0x90);
   1962              WriteTW8816(0x97, 0x20);
   1963              WriteTW8816(0x98, 0x06);
   1964              
   1965              WriteTW8816(0x94, 0x00);
   1966              WriteTW8816(0x95, 0x81);
   1967              WriteTW8816(0x96, 0xB0);
   1968              WriteTW8816(0x97, 0x20);
   1969              WriteTW8816(0x98, 0x06);
   1970              
   1971              WriteTW8816(0x94, 0x00);
   1972              WriteTW8816(0x95, 0x81);
   1973              WriteTW8816(0x96, 0xB1);
   1974              WriteTW8816(0x97, 0x20);
   1975              WriteTW8816(0x98, 0x06);
   1976              
   1977              WriteTW8816(0x94, 0x00);
   1978              WriteTW8816(0x95, 0x81);
   1979              WriteTW8816(0x96, 0xB2);
   1980              WriteTW8816(0x97, 0x20);
   1981              WriteTW8816(0x98, 0x06);  
   1982            }
   1983          }
   1984          
   1985          void SetChangeSpeakerIcon(void){
   1986            // SPEAKER
   1987            if(AAVM_Menu_Flag == 0) {
   1988              if(AAVM_Icon_Index == 0){
   1989                WriteTW8816(0x94, 0x80);
   1990                WriteTW8816(0x95, 0x80);
   1991                WriteTW8816(0x96, 0x04);
   1992                WriteTW8816(0x97, 0x08);
   1993                WriteTW8816(0x98, 0x06);
   1994                
   1995                WriteTW8816(0x94, 0x80);
   1996                WriteTW8816(0x95, 0x80);
   1997                WriteTW8816(0x96, 0x05);
   1998                WriteTW8816(0x97, 0x09);
   1999                WriteTW8816(0x98, 0x06);
   2000                
   2001                WriteTW8816(0x94, 0x80);
   2002                WriteTW8816(0x95, 0x80);
   2003                WriteTW8816(0x96, 0x26);
   2004                WriteTW8816(0x97, 0x0A);
   2005                WriteTW8816(0x98, 0x06);
   2006                
   2007                WriteTW8816(0x94, 0x80);
   2008                WriteTW8816(0x95, 0x80);
   2009                WriteTW8816(0x96, 0x27);
   2010                WriteTW8816(0x97, 0x0B);
   2011                WriteTW8816(0x98, 0x06);
   2012                
   2013              } else {
   2014                WriteTW8816(0x94, 0x80);
   2015                WriteTW8816(0x95, 0x80);
   2016                WriteTW8816(0x96, 0x04);
   2017                WriteTW8816(0x97, 0x04);
   2018                WriteTW8816(0x98, 0x06);
   2019                
   2020                WriteTW8816(0x94, 0x80);
   2021                WriteTW8816(0x95, 0x80);
   2022                WriteTW8816(0x96, 0x05);
   2023                WriteTW8816(0x97, 0x05);
   2024                WriteTW8816(0x98, 0x06);
   2025                
   2026                WriteTW8816(0x94, 0x80);
   2027                WriteTW8816(0x95, 0x80);
   2028                WriteTW8816(0x96, 0x26);
   2029                WriteTW8816(0x97, 0x06);
   2030                WriteTW8816(0x98, 0x06);
   2031                
   2032                WriteTW8816(0x94, 0x80);
   2033                WriteTW8816(0x95, 0x80);
   2034                WriteTW8816(0x96, 0x27);
   2035                WriteTW8816(0x97, 0x07);
   2036                WriteTW8816(0x98, 0x06);
   2037              }
   2038            } else {
   2039              WriteTW8816(0x94, 0x00);
   2040              WriteTW8816(0x95, 0x80);
   2041              WriteTW8816(0x96, 0x04);
   2042              WriteTW8816(0x97, 0x20);
   2043              WriteTW8816(0x98, 0x06);
   2044              
   2045              WriteTW8816(0x94, 0x00);
   2046              WriteTW8816(0x95, 0x80);
   2047              WriteTW8816(0x96, 0x05);
   2048              WriteTW8816(0x97, 0x20);
   2049              WriteTW8816(0x98, 0x06);
   2050              
   2051              WriteTW8816(0x94, 0x00);
   2052              WriteTW8816(0x95, 0x80);
   2053              WriteTW8816(0x96, 0x26);
   2054              WriteTW8816(0x97, 0x20);
   2055              WriteTW8816(0x98, 0x06);
   2056              
   2057              WriteTW8816(0x94, 0x00);
   2058              WriteTW8816(0x95, 0x80);
   2059              WriteTW8816(0x96, 0x27);
   2060              WriteTW8816(0x97, 0x20);
   2061              WriteTW8816(0x98, 0x06);
   2062            }
   2063          }
   2064          
   2065          void SetBlankIcon(){ 
   2066            
   2067            //SPEARKER
   2068            WriteTW8816(0x94, 0x00);
   2069            WriteTW8816(0x95, 0x80);
   2070            WriteTW8816(0x96, 0x04);
   2071            WriteTW8816(0x97, 0x20);
   2072            WriteTW8816(0x98, 0x06);
   2073            
   2074            WriteTW8816(0x94, 0x00);
   2075            WriteTW8816(0x95, 0x80);
   2076            WriteTW8816(0x96, 0x05);
   2077            WriteTW8816(0x97, 0x20);
   2078            WriteTW8816(0x98, 0x06);
   2079            
   2080            WriteTW8816(0x94, 0x00);
   2081            WriteTW8816(0x95, 0x80);
   2082            WriteTW8816(0x96, 0x26);
   2083            WriteTW8816(0x97, 0x20);
   2084            WriteTW8816(0x98, 0x06);
   2085            
   2086            WriteTW8816(0x94, 0x00);
   2087            WriteTW8816(0x95, 0x80);
   2088            WriteTW8816(0x96, 0x27);
   2089            WriteTW8816(0x97, 0x20);
   2090            WriteTW8816(0x98, 0x06);
   2091            // X BUTTON
   2092            WriteTW8816(0x94, 0x00);
   2093            WriteTW8816(0x95, 0x80);
   2094            WriteTW8816(0x96, 0x01);
   2095            WriteTW8816(0x97, 0x20);
   2096            WriteTW8816(0x98, 0x06);
   2097            
   2098            WriteTW8816(0x94, 0x00);
   2099            WriteTW8816(0x95, 0x80);
   2100            WriteTW8816(0x96, 0x02);
   2101            WriteTW8816(0x97, 0x20);
   2102            WriteTW8816(0x98, 0x06);
   2103            
   2104            WriteTW8816(0x94, 0x00);
   2105            WriteTW8816(0x95, 0x80);
   2106            WriteTW8816(0x96, 0x23);
   2107            WriteTW8816(0x97, 0x20);
   2108            WriteTW8816(0x98, 0x06);
   2109            
   2110            WriteTW8816(0x94, 0x00);
   2111            WriteTW8816(0x95, 0x80);
   2112            WriteTW8816(0x96, 0x24);
   2113            WriteTW8816(0x97, 0x20);
   2114            WriteTW8816(0x98, 0x06);
   2115            
   2116            // FRONT 2D
   2117            WriteTW8816(0x94, 0x00);
   2118            WriteTW8816(0x95, 0x80);
   2119            WriteTW8816(0x96, 0x1E);
   2120            WriteTW8816(0x97, 0x20);
   2121            WriteTW8816(0x98, 0x06);
   2122            
   2123            WriteTW8816(0x94, 0x00);
   2124            WriteTW8816(0x95, 0x80);
   2125            WriteTW8816(0x96, 0x1F);
   2126            WriteTW8816(0x97, 0x20);
   2127            WriteTW8816(0x98, 0x06);
   2128            
   2129            WriteTW8816(0x94, 0x00);
   2130            WriteTW8816(0x95, 0x80);
   2131            WriteTW8816(0x96, 0x20);
   2132            WriteTW8816(0x97, 0x20);
   2133            WriteTW8816(0x98, 0x06);
   2134            
   2135            WriteTW8816(0x94, 0x00);
   2136            WriteTW8816(0x95, 0x80);
   2137            WriteTW8816(0x96, 0x40);
   2138            WriteTW8816(0x97, 0x20);
   2139            WriteTW8816(0x98, 0x06);
   2140            
   2141            WriteTW8816(0x94, 0x00);
   2142            WriteTW8816(0x95, 0x80);
   2143            WriteTW8816(0x96, 0x41);
   2144            WriteTW8816(0x97, 0x20);
   2145            WriteTW8816(0x98, 0x06);
   2146            
   2147            WriteTW8816(0x94, 0x00);
   2148            WriteTW8816(0x95, 0x80);
   2149            WriteTW8816(0x96, 0x42);
   2150            WriteTW8816(0x97, 0x20);
   2151            WriteTW8816(0x98, 0x06);
   2152            
   2153            //LEFT
   2154            WriteTW8816(0x94, 0x00);
   2155            WriteTW8816(0x95, 0x80);
   2156            WriteTW8816(0x96, 0x84);
   2157            WriteTW8816(0x97, 0x20);
   2158            WriteTW8816(0x98, 0x06);
   2159            
   2160            WriteTW8816(0x94, 0x00);
   2161            WriteTW8816(0x95, 0x80);
   2162            WriteTW8816(0x96, 0x85);
   2163            WriteTW8816(0x97, 0x20);
   2164            WriteTW8816(0x98, 0x06);
   2165            
   2166            WriteTW8816(0x94, 0x00);
   2167            WriteTW8816(0x95, 0x80);
   2168            WriteTW8816(0x96, 0x86);
   2169            WriteTW8816(0x97, 0x20);
   2170            WriteTW8816(0x98, 0x06);
   2171            
   2172            WriteTW8816(0x94, 0x00);
   2173            WriteTW8816(0x95, 0x80);
   2174            WriteTW8816(0x96, 0xA6);
   2175            WriteTW8816(0x97, 0x20);
   2176            WriteTW8816(0x98, 0x06);
   2177            
   2178            WriteTW8816(0x94, 0x00);
   2179            WriteTW8816(0x95, 0x80);
   2180            WriteTW8816(0x96, 0xA7);
   2181            WriteTW8816(0x97, 0x20);
   2182            WriteTW8816(0x98, 0x06);
   2183            
   2184            WriteTW8816(0x94, 0x00);
   2185            WriteTW8816(0x95, 0x80);
   2186            WriteTW8816(0x96, 0xA8);
   2187            WriteTW8816(0x97, 0x20);
   2188            WriteTW8816(0x98, 0x06);        
   2189            
   2190            
   2191            //BACK
   2192            WriteTW8816(0x94, 0x00);
   2193            WriteTW8816(0x95, 0x80);
   2194            WriteTW8816(0x96, 0xEA);
   2195            WriteTW8816(0x97, 0x20);
   2196            WriteTW8816(0x98, 0x06);
   2197            
   2198            WriteTW8816(0x94, 0x00);
   2199            WriteTW8816(0x95, 0x80);
   2200            WriteTW8816(0x96, 0xEB);
   2201            WriteTW8816(0x97, 0x20);
   2202            WriteTW8816(0x98, 0x06);
   2203            
   2204            WriteTW8816(0x94, 0x00);
   2205            WriteTW8816(0x95, 0x80);
   2206            WriteTW8816(0x96, 0xEC);
   2207            WriteTW8816(0x97, 0x20);
   2208            WriteTW8816(0x98, 0x06);
   2209            
   2210            WriteTW8816(0x94, 0x00);
   2211            WriteTW8816(0x95, 0x81);
   2212            WriteTW8816(0x96, 0x0C);
   2213            WriteTW8816(0x97, 0x20);
   2214            WriteTW8816(0x98, 0x06);
   2215            
   2216            WriteTW8816(0x94, 0x00);
   2217            WriteTW8816(0x95, 0x81);
   2218            WriteTW8816(0x96, 0x0D);
   2219            WriteTW8816(0x97, 0x20);
   2220            WriteTW8816(0x98, 0x06);
   2221            
   2222            WriteTW8816(0x94, 0x00);
   2223            WriteTW8816(0x95, 0x81);
   2224            WriteTW8816(0x96, 0x0E);
   2225            WriteTW8816(0x97, 0x20);
   2226            WriteTW8816(0x98, 0x06);  
   2227            
   2228            // RIGHT
   2229            WriteTW8816(0x94, 0x00);
   2230            WriteTW8816(0x95, 0x81);
   2231            WriteTW8816(0x96, 0x50);
   2232            WriteTW8816(0x97, 0x20);
   2233            WriteTW8816(0x98, 0x06);
   2234            
   2235            WriteTW8816(0x94, 0x00);
   2236            WriteTW8816(0x95, 0x81);
   2237            WriteTW8816(0x96, 0x51);
   2238            WriteTW8816(0x97, 0x20);
   2239            WriteTW8816(0x98, 0x06);
   2240            
   2241            WriteTW8816(0x94, 0x00);
   2242            WriteTW8816(0x95, 0x81);
   2243            WriteTW8816(0x96, 0x52);
   2244            WriteTW8816(0x97, 0x20);
   2245            WriteTW8816(0x98, 0x06);
   2246            
   2247            WriteTW8816(0x94, 0x00);
   2248            WriteTW8816(0x95, 0x81);
   2249            WriteTW8816(0x96, 0x72);
   2250            WriteTW8816(0x97, 0x20);
   2251            WriteTW8816(0x98, 0x06);
   2252            
   2253            WriteTW8816(0x94, 0x00);
   2254            WriteTW8816(0x95, 0x81);
   2255            WriteTW8816(0x96, 0x73);
   2256            WriteTW8816(0x97, 0x20);
   2257            WriteTW8816(0x98, 0x06);
   2258            
   2259            WriteTW8816(0x94, 0x00);
   2260            WriteTW8816(0x95, 0x81);
   2261            WriteTW8816(0x96, 0x74);
   2262            WriteTW8816(0x97, 0x20);
   2263            WriteTW8816(0x98, 0x06);     
   2264            
   2265            //4CHANNEL
   2266            
   2267            WriteTW8816(0x94, 0x00);
   2268            WriteTW8816(0x95, 0x81);
   2269            WriteTW8816(0x96, 0x94);
   2270            WriteTW8816(0x97, 0x20);
   2271            WriteTW8816(0x98, 0x06);
   2272            
   2273            WriteTW8816(0x94, 0x00);
   2274            WriteTW8816(0x95, 0x81);
   2275            WriteTW8816(0x96, 0x95);
   2276            WriteTW8816(0x97, 0x20);
   2277            WriteTW8816(0x98, 0x06);
   2278            
   2279            WriteTW8816(0x94, 0x00);
   2280            WriteTW8816(0x95, 0x81);
   2281            WriteTW8816(0x96, 0x96);
   2282            WriteTW8816(0x97, 0x20);
   2283            WriteTW8816(0x98, 0x06);
   2284            
   2285            WriteTW8816(0x94, 0x00);
   2286            WriteTW8816(0x95, 0x81);
   2287            WriteTW8816(0x96, 0xB6);
   2288            WriteTW8816(0x97, 0x20);
   2289            WriteTW8816(0x98, 0x06);
   2290            
   2291            WriteTW8816(0x94, 0x00);
   2292            WriteTW8816(0x95, 0x81);
   2293            WriteTW8816(0x96, 0xB7);
   2294            WriteTW8816(0x97, 0x20);
   2295            WriteTW8816(0x98, 0x06);
   2296            
   2297            WriteTW8816(0x94, 0x00);
   2298            WriteTW8816(0x95, 0x81);
   2299            WriteTW8816(0x96, 0xB8);
   2300            WriteTW8816(0x97, 0x20);
   2301            WriteTW8816(0x98, 0x06);  
   2302            
   2303            //3D BIRD
   2304            WriteTW8816(0x94, 0x00);
   2305            WriteTW8816(0x95, 0x81);
   2306            WriteTW8816(0x96, 0x76);
   2307            WriteTW8816(0x97, 0x20);
   2308            WriteTW8816(0x98, 0x06);
   2309            
   2310            WriteTW8816(0x94, 0x00);
   2311            WriteTW8816(0x95, 0x81);
   2312            WriteTW8816(0x96, 0x77);
   2313            WriteTW8816(0x97, 0x20);
   2314            WriteTW8816(0x98, 0x06);
   2315            
   2316            WriteTW8816(0x94, 0x00);
   2317            WriteTW8816(0x95, 0x81);
   2318            WriteTW8816(0x96, 0x78);
   2319            WriteTW8816(0x97, 0x20);
   2320            WriteTW8816(0x98, 0x06);
   2321            
   2322            WriteTW8816(0x94, 0x00);
   2323            WriteTW8816(0x95, 0x81);
   2324            WriteTW8816(0x96, 0x98);
   2325            WriteTW8816(0x97, 0x20);
   2326            WriteTW8816(0x98, 0x06);
   2327            
   2328            WriteTW8816(0x94, 0x00);
   2329            WriteTW8816(0x95, 0x81);
   2330            WriteTW8816(0x96, 0x99);
   2331            WriteTW8816(0x97, 0x20);
   2332            WriteTW8816(0x98, 0x06);
   2333            
   2334            WriteTW8816(0x94, 0x00);
   2335            WriteTW8816(0x95, 0x81);
   2336            WriteTW8816(0x96, 0x9A);
   2337            WriteTW8816(0x97, 0x20);
   2338            WriteTW8816(0x98, 0x06);
   2339            
   2340            // 3D REAR
   2341            WriteTW8816(0x94, 0x00);
   2342            WriteTW8816(0x95, 0x81);
   2343            WriteTW8816(0x96, 0x7C);
   2344            WriteTW8816(0x97, 0x20);
   2345            WriteTW8816(0x98, 0x06);
   2346            
   2347            WriteTW8816(0x94, 0x00);
   2348            WriteTW8816(0x95, 0x81);
   2349            WriteTW8816(0x96, 0x7D);
   2350            WriteTW8816(0x97, 0x20);
   2351            WriteTW8816(0x98, 0x06);
   2352            
   2353            WriteTW8816(0x94, 0x00);
   2354            WriteTW8816(0x95, 0x81);
   2355            WriteTW8816(0x96, 0x7E);
   2356            WriteTW8816(0x97, 0x20);
   2357            WriteTW8816(0x98, 0x06);
   2358            
   2359            WriteTW8816(0x94, 0x00);
   2360            WriteTW8816(0x95, 0x81);
   2361            WriteTW8816(0x96, 0x9E);
   2362            WriteTW8816(0x97, 0x20);
   2363            WriteTW8816(0x98, 0x06);
   2364            
   2365            WriteTW8816(0x94, 0x00);
   2366            WriteTW8816(0x95, 0x81);
   2367            WriteTW8816(0x96, 0x9F);
   2368            WriteTW8816(0x97, 0x20);
   2369            WriteTW8816(0x98, 0x06);
   2370            
   2371            WriteTW8816(0x94, 0x00);
   2372            WriteTW8816(0x95, 0x81);
   2373            WriteTW8816(0x96, 0xA0);
   2374            WriteTW8816(0x97, 0x20);
   2375            WriteTW8816(0x98, 0x06);
   2376            
   2377            // 2D BIRD
   2378            WriteTW8816(0x94, 0x00);
   2379            WriteTW8816(0x95, 0x81);
   2380            WriteTW8816(0x96, 0x82);
   2381            WriteTW8816(0x97, 0x20);
   2382            WriteTW8816(0x98, 0x06);
   2383            
   2384            WriteTW8816(0x94, 0x00);
   2385            WriteTW8816(0x95, 0x81);
   2386            WriteTW8816(0x96, 0x83);
   2387            WriteTW8816(0x97, 0x20);
   2388            WriteTW8816(0x98, 0x06);
   2389            
   2390            WriteTW8816(0x94, 0x00);
   2391            WriteTW8816(0x95, 0x81);
   2392            WriteTW8816(0x96, 0x84);
   2393            WriteTW8816(0x97, 0x20);
   2394            WriteTW8816(0x98, 0x06);
   2395            
   2396            WriteTW8816(0x94, 0x00);
   2397            WriteTW8816(0x95, 0x81);
   2398            WriteTW8816(0x96, 0xA4);
   2399            WriteTW8816(0x97, 0x20);
   2400            WriteTW8816(0x98, 0x06);
   2401            
   2402            WriteTW8816(0x94, 0x00);
   2403            WriteTW8816(0x95, 0x81);
   2404            WriteTW8816(0x96, 0xA5);
   2405            WriteTW8816(0x97, 0x20);
   2406            WriteTW8816(0x98, 0x06);
   2407            
   2408            WriteTW8816(0x94, 0x00);
   2409            WriteTW8816(0x95, 0x81);
   2410            WriteTW8816(0x96, 0xA6);
   2411            WriteTW8816(0x97, 0x20);
   2412            WriteTW8816(0x98, 0x06);     
   2413            
   2414            //3D LEFT
   2415            WriteTW8816(0x94, 0x00);
   2416            WriteTW8816(0x95, 0x81);
   2417            WriteTW8816(0x96, 0x88);
   2418            WriteTW8816(0x97, 0x20);
   2419            WriteTW8816(0x98, 0x06);
   2420            
   2421            WriteTW8816(0x94, 0x00);
   2422            WriteTW8816(0x95, 0x81);
   2423            WriteTW8816(0x96, 0x89);
   2424            WriteTW8816(0x97, 0x20);
   2425            WriteTW8816(0x98, 0x06);
   2426            
   2427            WriteTW8816(0x94, 0x00);
   2428            WriteTW8816(0x95, 0x81);
   2429            WriteTW8816(0x96, 0x8A);
   2430            WriteTW8816(0x97, 0x20);
   2431            WriteTW8816(0x98, 0x06);
   2432            
   2433            WriteTW8816(0x94, 0x00);
   2434            WriteTW8816(0x95, 0x81);
   2435            WriteTW8816(0x96, 0xAA);
   2436            WriteTW8816(0x97, 0x20);
   2437            WriteTW8816(0x98, 0x06);
   2438            
   2439            WriteTW8816(0x94, 0x00);
   2440            WriteTW8816(0x95, 0x81);
   2441            WriteTW8816(0x96, 0xAB);
   2442            WriteTW8816(0x97, 0x20);
   2443            WriteTW8816(0x98, 0x06);
   2444            
   2445            WriteTW8816(0x94, 0x00);
   2446            WriteTW8816(0x95, 0x81);
   2447            WriteTW8816(0x96, 0xAC);
   2448            WriteTW8816(0x97, 0x20);
   2449            WriteTW8816(0x98, 0x06); 
   2450            
   2451            //3D RIGHT
   2452            WriteTW8816(0x94, 0x00);
   2453            WriteTW8816(0x95, 0x81);
   2454            WriteTW8816(0x96, 0x8E);
   2455            WriteTW8816(0x97, 0x20);
   2456            WriteTW8816(0x98, 0x06);
   2457            
   2458            WriteTW8816(0x94, 0x00);
   2459            WriteTW8816(0x95, 0x81);
   2460            WriteTW8816(0x96, 0x8F);
   2461            WriteTW8816(0x97, 0x20);
   2462            WriteTW8816(0x98, 0x06);
   2463            
   2464            WriteTW8816(0x94, 0x00);
   2465            WriteTW8816(0x95, 0x81);
   2466            WriteTW8816(0x96, 0x90);
   2467            WriteTW8816(0x97, 0x20);
   2468            WriteTW8816(0x98, 0x06);
   2469            
   2470            WriteTW8816(0x94, 0x00);
   2471            WriteTW8816(0x95, 0x81);
   2472            WriteTW8816(0x96, 0xB0);
   2473            WriteTW8816(0x97, 0x20);
   2474            WriteTW8816(0x98, 0x06);
   2475            
   2476            WriteTW8816(0x94, 0x00);
   2477            WriteTW8816(0x95, 0x81);
   2478            WriteTW8816(0x96, 0xB1);
   2479            WriteTW8816(0x97, 0x20);
   2480            WriteTW8816(0x98, 0x06);
   2481            
   2482            WriteTW8816(0x94, 0x00);
   2483            WriteTW8816(0x95, 0x81);
   2484            WriteTW8816(0x96, 0xB2);
   2485            WriteTW8816(0x97, 0x20);
   2486            WriteTW8816(0x98, 0x06);  
   2487          }
   2488          #else
   2489          
   2490          
   2491          void SetFontOSDWindow(void)
   2492          {
   2493            I2C2_ByteWrite_8816(0xff, 0x00);
   2494            
   2495            I2C2_ByteWrite_8816(0x94, 0x00);
   2496            I2C2_ByteWrite_8816(0x9e, 0x00);
   2497            I2C2_ByteWrite_8816(0x9f, 0x01);
   2498            I2C2_ByteWrite_8816(0xa0, 0x00);
   2499            I2C2_ByteWrite_8816(0xa1, 0x00);
   2500            I2C2_ByteWrite_8816(0xa2, 0x00);
   2501            I2C2_ByteWrite_8816(0xa3, 0x22);
   2502            I2C2_ByteWrite_8816(0xa4, 0x0e);
   2503            I2C2_ByteWrite_8816(0xa5, 0x32);
   2504            I2C2_ByteWrite_8816(0xa6, 0x00);
   2505            I2C2_ByteWrite_8816(0xa7, 0x00);
   2506            I2C2_ByteWrite_8816(0xa8, 0x00);
   2507            I2C2_ByteWrite_8816(0xa9, 0x50);
   2508            I2C2_ByteWrite_8816(0xaa, 0x00);
   2509            I2C2_ByteWrite_8816(0xab, 0x55);
   2510            I2C2_ByteWrite_8816(0xac, 0x0f);
   2511            I2C2_ByteWrite_8816(0xad, 0x00);
   2512            I2C2_ByteWrite_8816(0xae, 0x00);
   2513            
   2514            I2C2_ByteWrite_8816(0x94, 0x11);
   2515            I2C2_ByteWrite_8816(0x94, 0x02);
   2516            
   2517          }
   2518          
   2519          void SetDisplayCH1(void)
   2520          {
   2521            I2C2_ByteWrite_8816(0xff, 0x00);
   2522            
   2523            I2C2_ByteWrite_8816(0x95, 0x80);
   2524            I2C2_ByteWrite_8816(0x96, 0x1d);
   2525            I2C2_ByteWrite_8816(0x97, 0x43);
   2526            I2C2_ByteWrite_8816(0x98, 0x06);
   2527            
   2528            I2C2_ByteWrite_8816(0x95, 0x80);
   2529            I2C2_ByteWrite_8816(0x96, 0x1e);
   2530            I2C2_ByteWrite_8816(0x97, 0x48);
   2531            I2C2_ByteWrite_8816(0x98, 0x06);
   2532            
   2533            I2C2_ByteWrite_8816(0x95, 0x80);
   2534            I2C2_ByteWrite_8816(0x96, 0x1f);
   2535            I2C2_ByteWrite_8816(0x97, 0x31);
   2536            I2C2_ByteWrite_8816(0x98, 0x06);
   2537          }
   2538          
   2539          void SetDisplayCH2(void)
   2540          {
   2541            I2C2_ByteWrite_8816(0xff, 0x00);
   2542            
   2543            I2C2_ByteWrite_8816(0x95, 0x80);
   2544            I2C2_ByteWrite_8816(0x96, 0x1d);
   2545            I2C2_ByteWrite_8816(0x97, 0x43);
   2546            I2C2_ByteWrite_8816(0x98, 0x06);
   2547            
   2548            I2C2_ByteWrite_8816(0x95, 0x80);
   2549            I2C2_ByteWrite_8816(0x96, 0x1e);
   2550            I2C2_ByteWrite_8816(0x97, 0x48);
   2551            I2C2_ByteWrite_8816(0x98, 0x06);
   2552            
   2553            I2C2_ByteWrite_8816(0x95, 0x80);
   2554            I2C2_ByteWrite_8816(0x96, 0x1f);
   2555            I2C2_ByteWrite_8816(0x97, 0x32);
   2556            I2C2_ByteWrite_8816(0x98, 0x06);
   2557          }
   2558          
   2559          void SetDisplayCH3(void)
   2560          {
   2561            I2C2_ByteWrite_8816(0xff, 0x00);
   2562            
   2563            I2C2_ByteWrite_8816(0x95, 0x80);
   2564            I2C2_ByteWrite_8816(0x96, 0x1d);
   2565            I2C2_ByteWrite_8816(0x97, 0x43);
   2566            I2C2_ByteWrite_8816(0x98, 0x06);
   2567            
   2568            I2C2_ByteWrite_8816(0x95, 0x80);
   2569            I2C2_ByteWrite_8816(0x96, 0x1e);
   2570            I2C2_ByteWrite_8816(0x97, 0x48);
   2571            I2C2_ByteWrite_8816(0x98, 0x06);
   2572            
   2573            I2C2_ByteWrite_8816(0x95, 0x80);
   2574            I2C2_ByteWrite_8816(0x96, 0x1f);
   2575            I2C2_ByteWrite_8816(0x97, 0x33);
   2576            I2C2_ByteWrite_8816(0x98, 0x06);
   2577          }
   2578          
   2579          void SetDisplayCH4(void)
   2580          {
   2581            I2C2_ByteWrite_8816(0xff, 0x00);
   2582            
   2583            I2C2_ByteWrite_8816(0x95, 0x80);
   2584            I2C2_ByteWrite_8816(0x96, 0x1d);
   2585            I2C2_ByteWrite_8816(0x97, 0x43);
   2586            I2C2_ByteWrite_8816(0x98, 0x06);
   2587            
   2588            I2C2_ByteWrite_8816(0x95, 0x80);
   2589            I2C2_ByteWrite_8816(0x96, 0x1e);
   2590            I2C2_ByteWrite_8816(0x97, 0x48);
   2591            I2C2_ByteWrite_8816(0x98, 0x06);
   2592            
   2593            I2C2_ByteWrite_8816(0x95, 0x80);
   2594            I2C2_ByteWrite_8816(0x96, 0x1f);
   2595            I2C2_ByteWrite_8816(0x97, 0x34);
   2596            I2C2_ByteWrite_8816(0x98, 0x06);
   2597          }
   2598          
   2599          void SetDisplayCHBlank(void)
   2600          {
   2601            I2C2_ByteWrite_8816(0xff, 0x00);
   2602            
   2603            I2C2_ByteWrite_8816(0x95, 0x80);
   2604            I2C2_ByteWrite_8816(0x96, 0x1d);
   2605            I2C2_ByteWrite_8816(0x97, 0x20);
   2606            I2C2_ByteWrite_8816(0x98, 0x06);
   2607            
   2608            I2C2_ByteWrite_8816(0x95, 0x80);
   2609            I2C2_ByteWrite_8816(0x96, 0x1e);
   2610            I2C2_ByteWrite_8816(0x97, 0x20);
   2611            I2C2_ByteWrite_8816(0x98, 0x06);
   2612            
   2613            I2C2_ByteWrite_8816(0x95, 0x80);
   2614            I2C2_ByteWrite_8816(0x96, 0x1f);
   2615            I2C2_ByteWrite_8816(0x97, 0x20);
   2616            I2C2_ByteWrite_8816(0x98, 0x06);
   2617          }
   2618          
   2619          void SetDisplayNosignal(void)
   2620          {
   2621            I2C2_ByteWrite_8816(0xff, 0x00);
   2622            
   2623            I2C2_ByteWrite_8816(0x95, 0x80);
   2624            I2C2_ByteWrite_8816(0x96, 0xd8);
   2625            I2C2_ByteWrite_8816(0x97, 0x4e);
   2626            I2C2_ByteWrite_8816(0x98, 0x06);
   2627            
   2628            I2C2_ByteWrite_8816(0x95, 0x80);
   2629            I2C2_ByteWrite_8816(0x96, 0xd9);
   2630            I2C2_ByteWrite_8816(0x97, 0x4f);
   2631            I2C2_ByteWrite_8816(0x98, 0x06);
   2632            
   2633            I2C2_ByteWrite_8816(0x95, 0x80);
   2634            I2C2_ByteWrite_8816(0x96, 0xda);
   2635            I2C2_ByteWrite_8816(0x97, 0x20);
   2636            I2C2_ByteWrite_8816(0x98, 0x06);
   2637            
   2638            I2C2_ByteWrite_8816(0x95, 0x80);
   2639            I2C2_ByteWrite_8816(0x96, 0xdb);
   2640            I2C2_ByteWrite_8816(0x97, 0x53);
   2641            I2C2_ByteWrite_8816(0x98, 0x06);
   2642            
   2643            I2C2_ByteWrite_8816(0x95, 0x80);
   2644            I2C2_ByteWrite_8816(0x96, 0xdc);
   2645            I2C2_ByteWrite_8816(0x97, 0x49);
   2646            I2C2_ByteWrite_8816(0x98, 0x06);
   2647            
   2648            I2C2_ByteWrite_8816(0x95, 0x80);
   2649            I2C2_ByteWrite_8816(0x96, 0xdd);
   2650            I2C2_ByteWrite_8816(0x97, 0x47);
   2651            I2C2_ByteWrite_8816(0x98, 0x06);
   2652            
   2653            I2C2_ByteWrite_8816(0x95, 0x80);
   2654            I2C2_ByteWrite_8816(0x96, 0xde);
   2655            I2C2_ByteWrite_8816(0x97, 0x4e);
   2656            I2C2_ByteWrite_8816(0x98, 0x06);
   2657            
   2658            I2C2_ByteWrite_8816(0x95, 0x80);
   2659            I2C2_ByteWrite_8816(0x96, 0xdf);
   2660            I2C2_ByteWrite_8816(0x97, 0x41);
   2661            I2C2_ByteWrite_8816(0x98, 0x06);
   2662            
   2663            I2C2_ByteWrite_8816(0x95, 0x80);
   2664            I2C2_ByteWrite_8816(0x96, 0xe0);
   2665            I2C2_ByteWrite_8816(0x97, 0x4c);
   2666            I2C2_ByteWrite_8816(0x98, 0x06);
   2667            
   2668          }
   2669          
   2670          void SetDisplayNosignalBlank(void)
   2671          {
   2672            I2C2_ByteWrite_8816(0xff, 0x00);
   2673            
   2674            I2C2_ByteWrite_8816(0x95, 0x80);
   2675            I2C2_ByteWrite_8816(0x96, 0xd8);
   2676            I2C2_ByteWrite_8816(0x97, 0x20);
   2677            I2C2_ByteWrite_8816(0x98, 0x06);
   2678            
   2679            I2C2_ByteWrite_8816(0x95, 0x80);
   2680            I2C2_ByteWrite_8816(0x96, 0xd9);
   2681            I2C2_ByteWrite_8816(0x97, 0x20);
   2682            I2C2_ByteWrite_8816(0x98, 0x06);
   2683            
   2684            I2C2_ByteWrite_8816(0x95, 0x80);
   2685            I2C2_ByteWrite_8816(0x96, 0xda);
   2686            I2C2_ByteWrite_8816(0x97, 0x20);
   2687            I2C2_ByteWrite_8816(0x98, 0x06);
   2688            
   2689            I2C2_ByteWrite_8816(0x95, 0x80);
   2690            I2C2_ByteWrite_8816(0x96, 0xdb);
   2691            I2C2_ByteWrite_8816(0x97, 0x20);
   2692            I2C2_ByteWrite_8816(0x98, 0x06);
   2693            
   2694            I2C2_ByteWrite_8816(0x95, 0x80);
   2695            I2C2_ByteWrite_8816(0x96, 0xdc);
   2696            I2C2_ByteWrite_8816(0x97, 0x20);
   2697            I2C2_ByteWrite_8816(0x98, 0x06);
   2698            
   2699            I2C2_ByteWrite_8816(0x95, 0x80);
   2700            I2C2_ByteWrite_8816(0x96, 0xdd);
   2701            I2C2_ByteWrite_8816(0x97, 0x20);
   2702            I2C2_ByteWrite_8816(0x98, 0x06);
   2703            
   2704            I2C2_ByteWrite_8816(0x95, 0x80);
   2705            I2C2_ByteWrite_8816(0x96, 0xde);
   2706            I2C2_ByteWrite_8816(0x97, 0x20);
   2707            I2C2_ByteWrite_8816(0x98, 0x06);
   2708            
   2709            I2C2_ByteWrite_8816(0x95, 0x80);
   2710            I2C2_ByteWrite_8816(0x96, 0xdf);
   2711            I2C2_ByteWrite_8816(0x97, 0x20);
   2712            I2C2_ByteWrite_8816(0x98, 0x06);
   2713            
   2714            I2C2_ByteWrite_8816(0x95, 0x80);
   2715            I2C2_ByteWrite_8816(0x96, 0xe0);
   2716            I2C2_ByteWrite_8816(0x97, 0x20);
   2717            I2C2_ByteWrite_8816(0x98, 0x06);
   2718            
   2719          }
   2720          
   2721          
   2722          #endif
   2723          
   2724          
   2725          /*********(C) COPYRIGHT 2010 TaeHa Mechatronics Co., Ltd. *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SetBlankIcon
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChange2DBirdView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChange3DBirdView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChange3DLeftView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChange3DRearView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChange3DRightView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChange4ChannelView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChangeBackView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChangeFrontView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChangeLeftView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChangeRightView
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChangeSpeakerIcon
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetChangeXIcon
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayBlankGreenGuideLine
         8   -> WriteTW8816
       8   SetDisplayBlankRedGuideLine
         8   -> WriteTW8816
       8   SetDisplayCH1
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayCH2
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayCH3
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayCH4
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayCHBlank
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayGreenGuideLine
         8   -> WriteTW8816
       8   SetDisplayIcon
         8   -> SetChange2DBirdView
         8   -> SetChange3DBirdView
         8   -> SetChange3DLeftView
         8   -> SetChange3DRearView
         0   -> SetChange3DRightView
         8   -> SetChange4ChannelView
         8   -> SetChangeBackView
         8   -> SetChangeFrontView
         8   -> SetChangeLeftView
         8   -> SetChangeRightView
         8   -> SetChangeSpeakerIcon
         8   -> SetChangeXIcon
         8   -> SetDisplayCHBlank
       8   SetDisplayNosignal
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayNosignalBlank
         8   -> SetDisplayBlankGreenGuideLine
         8   -> SetDisplayBlankRedGuideLine
         8   -> SetDisplayGreenGuideLine
         0   -> SetDisplayNosignalBlankAAVM
         8   -> SetDisplayRedGuideLine
         0   -> SetGreenLineIcon
       8   SetDisplayNosignalBlankAAVM
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetDisplayRedGuideLine
         8   -> WriteTW8816
       8   SetDisplayWarning
         8   -> WriteTW8816
       8   SetFontOSDWindow
         8   -> DownloadUDFont
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetGreenBlankLineIcon
         0   -> WriteTW8816
         8   -> WriteTW8816
       8   SetGreenLineIcon
         0   -> WriteTW8816
         8   -> WriteTW8816


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable3
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable5
       4  ??DataTable7
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
      12  ??Subroutine1_0
       6  ??Subroutine2_0
       8  ?Subroutine0
    2700  SetBlankIcon
     710  SetChange2DBirdView
     710  SetChange3DBirdView
     710  SetChange3DLeftView
     706  SetChange3DRearView
     710  SetChange3DRightView
     710  SetChange4ChannelView
    1210  SetChangeBackView
    1210  SetChangeFrontView
    1210  SetChangeLeftView
    1210  SetChangeRightView
     466  SetChangeSpeakerIcon
     310  SetChangeXIcon
      64  SetDisplayBlankGreenGuideLine
      64  SetDisplayBlankRedGuideLine
     120  SetDisplayCH1
     120  SetDisplayCH2
     120  SetDisplayCH3
     120  SetDisplayCH4
     132  SetDisplayCHBlank
      64  SetDisplayGreenGuideLine
      58  SetDisplayIcon
     360  SetDisplayNosignal
      46  SetDisplayNosignalBlank
     352  SetDisplayNosignalBlankAAVM
      64  SetDisplayRedGuideLine
      68  SetDisplayWarning
      34  SetFontOSDWindow
     164  SetGreenBlankLineIcon
     322  SetGreenLineIcon

 
 14 926 bytes in section .text
 
 14 926 bytes of CODE memory

Errors: none
Warnings: none
