###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.1.4415/W32 for ARM      09/Jun/2015  07:54:35 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monitor_APP\Pla #
#                    tform\TaeHa - ECS\SRC\DPRAM_Control.c                    #
#    Command line =  "C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monitor_APP\Pl #
#                    atform\TaeHa - ECS\SRC\DPRAM_Control.c" -D               #
#                    USE_STDPERIPH_DRIVER -D STM32F4XX -D USE_STM324xG_EVAL   #
#                    -D USE_FULL_ASSERT -lcN "C:\Tools\IAR                    #
#                    Systems\Workspace_WL9F\WL_F_Monitor_APP\Project\Debug\Li #
#                    st\" -o "C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monito #
#                    r_APP\Project\Debug\Obj\" --debug --endian=little        #
#                    --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config          #
#                    "C:\Tools\IAR Systems\Embedded Workbench                 #
#                    6.5\arm\INC\c\DLib_Config_Full.h" -I "C:\Tools\IAR       #
#                    Systems\Workspace_WL9F\WL_F_Monitor_APP\Project\..\Platf #
#                    orm\COMMON\INC\" -I "C:\Tools\IAR                        #
#                    Systems\Workspace_WL9F\WL_F_Monitor_APP\Project\..\Platf #
#                    orm\TaeHa - ECS\INC\" -I "C:\Tools\IAR                   #
#                    Systems\Workspace_WL9F\WL_F_Monitor_APP\Project\..\Libra #
#                    ries\CMSIS\Device\ST\STM32F4xx\Include\" -I              #
#                    "C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monitor_APP\Pr #
#                    oject\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\" -Oh  #
#                    --use_c++_inline -I "C:\Tools\IAR Systems\Embedded       #
#                    Workbench 6.5\arm\CMSIS\Include\"                        #
#    List file    =  C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monitor_APP\Pro #
#                    ject\Debug\List\DPRAM_Control.lst                        #
#    Object file  =  C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monitor_APP\Pro #
#                    ject\Debug\Obj\DPRAM_Control.o                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Tools\IAR Systems\Workspace_WL9F\WL_F_Monitor_APP\Platform\TaeHa - ECS\SRC\DPRAM_Control.c
      1          /**
      2            ******************************************************************************
      3            * @file    DPRAM_Control.c 
      4            * @author  kutelf (kutelf@taeha.co.kr)
      5            * @version V1.0.0
      6            * @date    02/22/2013
      7            * @brief   DPRAM_Control.c module
      8            *
      9            * Project Name       : WL9F Monitor APP
     10            * Project Enviroment : IAREmbedded Workbench for ARM 6.5x 
     11            *                      STM32F407ZGT6 Firmware Library
     12            * Project Workspace  : WL9F_Monitor_APP
     13            * MCU Type           : STM32F407ZGT6
     14            *
     15            * TAEHA MECHATRONICS Co., Ltd (http://www.taeha.co.kr)				
     16            * ECS Division R&D Center. / Author by Young-Min Han (kutelf@taeha.co.kr)
     17            * 
     18            ******************************************************************************
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "WL9F_Monitor_APP.h"	
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          #define Bank1_SRAM1_ADDR  ((uint32_t)0x60000000)  
     27          /* Private macro -------------------------------------------------------------*/
     28          /* Private variables ---------------------------------------------------------*/
     29          /* Private function prototypes -----------------------------------------------*/
     30          /* Private functions ---------------------------------------------------------*/
     31          /**
     32            * @brief  DPRAM Initialize 
     33            * @param  
     34            * @retval None
     35            */
     36          void DPRAM_Init(void)
     37          {
     38          	FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
     39          	FSMC_NORSRAMTimingInitTypeDef  p;
     40          
     41          	//FSMC_NORSRAMTimingInitTypeDef  p1;
     42          	
     43          	DebugMsg_printf("++ DPRAM Initialize START\r\n");
     44          
     45          	//  DPRAM GPIO는 System_Init.c 에서 설정
     46          #if 1
     47          	/*-- FSMC Configuration ------------------------------------------------------*/
     48          	p.FSMC_AddressSetupTime = 3;
     49          	p.FSMC_AddressHoldTime = 0;
     50          	p.FSMC_DataSetupTime = 6;
     51          	p.FSMC_BusTurnAroundDuration = 0;
     52          	p.FSMC_CLKDivision = 0;
     53          	p.FSMC_DataLatency = 0;
     54          	p.FSMC_AccessMode = FSMC_AccessMode_C;
     55          
     56          	FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM1;
     57          	FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
     58          	FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_PSRAM;
     59          	FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
     60          	FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
     61          	FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;  
     62          	FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
     63          	FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
     64          	FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
     65          	FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
     66          	FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
     67          	FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
     68          	FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
     69          	FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
     70          	FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
     71          
     72          	FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
     73          
     74          	/*!< Enable FSMC Bank1_SRAM2 Bank */
     75          	FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE); 
     76          
     77          #endif
     78          
     79          	DebugMsg_printf("++ DPRAM Initialize END\r\n");
     80          }
     81          
     82          /**
     83            * @brief  Writes a Half-word buffer to the FSMC SRAM memory.
     84            * @param  pBuffer : pointer to buffer.
     85            * @param  WriteAddr : SRAM memory internal address from which the data will be
     86            *         written.
     87            * @param  NumHalfwordToWrite : number of half-words to write.
     88            * @retval None
     89            */
     90          void DPRAM_WriteBuffer(uint16_t* pBuffer, uint32_t WriteAddr, uint32_t NumHalfwordToWrite)
     91          {
     92            for (; NumHalfwordToWrite != 0; NumHalfwordToWrite--) /* while there is data to write */
     93            {
     94              /* Transfer data to the memory */
     95              *(uint16_t *) (Bank1_SRAM1_ADDR + WriteAddr) = *pBuffer++;
     96          
     97              /* Increment the address*/
     98              WriteAddr += 2;
     99          
    100          	
    101            }
    102          }
    103          
    104          /**
    105            * @brief  Reads a block of data from the FSMC SRAM memory.
    106            * @param  pBuffer : pointer to the buffer that receives the data read from the
    107            *         SRAM memory.
    108            * @param  ReadAddr : SRAM memory internal address to read from.
    109            * @param  NumHalfwordToRead : number of half-words to read.
    110            * @retval None
    111            */
    112          void DPRAM_ReadBuffer(uint16_t* pBuffer, uint32_t ReadAddr, uint32_t NumHalfwordToRead)
    113          {
    114            for (; NumHalfwordToRead != 0; NumHalfwordToRead--) /* while there is data to read */
    115            {
    116              /* Read a half-word from the memory */
    117              *pBuffer++ = *(__IO uint16_t*) (Bank1_SRAM1_ADDR + ReadAddr);
    118          
    119              /* Increment the address*/
    120              ReadAddr += 2;
    121          
    122          	
    123            }
    124          }
    125          /*********(C) COPYRIGHT 2010 TaeHa Mechatronics Co., Ltd. *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      96   DPRAM_Init
        96   -> FSMC_NORSRAMCmd
        96   -> FSMC_NORSRAMInit
       0   DPRAM_ReadBuffer
       0   DPRAM_WriteBuffer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      96  DPRAM_Init
      20  DPRAM_ReadBuffer
      22  DPRAM_WriteBuffer

 
 138 bytes in section .text
 
 138 bytes of CODE memory

Errors: none
Warnings: none
